varible_name,method,"AffinityPropagation(damping=0.999, random_state=0)","AgglomerativeClustering(metric='euclidean', n_clusters=13)","KMeans(n_clusters=13, n_init='auto', random_state=0)",MeanShift(bandwidth=2.3),"SpectralClustering(assign_labels='discretize', n_clusters=13, random_state=0)"
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.3,random_state=0)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
theta,"numpy.zeros([2,1],dtype=np.float32)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
X_train,"numpy.concatenate((np.ones([175,1],dtype=np.float32)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
theta,"numpy.matmul(inv(numpy.matmul(X_train.T,X_train)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
theta,"numpy.reshape(theta,[2,1])",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
p_x,"numpy.linspace(-2.5,2.5,50)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
mean1,"numpy.array([0,0])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mean2,"numpy.array([7,9])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mean3,"numpy.array([5,-4])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
red,"numpy.array([1,0,0])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
green,"numpy.array([0,1,0])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
blue,"numpy.array([0,0,1])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
c,numpy.zeros(row),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dist,numpy.zeros(K),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sum_k,numpy.zeros(col),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sigma,"numpy.zeros((K,col,col)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
phi,"numpy.zeros((row,K)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mu_sum,numpy.zeros(col),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sigma_sum,"numpy.zeros((col,col)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
X,"numpy.concatenate((X,Y,Z)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
pi,numpy.ones(K),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"sigma[k,:,:]",numpy.identity(col),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"sigma[k,:,:]",numpy.identity(col),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
c[n],numpy.argmin(dist),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
cov1,"numpy.matrix([[10,5],[5,5]])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
cov2,"numpy.matrix([[10,0],[0,10]])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
cov3,"numpy.matrix([[5,2],[2,5]])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dist[k],"numpy.linalg.norm(X[n,:]-mu[k,:])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sigma,numpy.zeros(n),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
w,"numpy.dot(np.linalg.inv(numpy.dot(X.T,X)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
m,"numpy.ones([n,2])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
x,numpy.exp(y),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
self.y,numpy.log(x),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
m[i][1],numpy.log(np.array(x[int(i*r),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
sigma[i],numpy.log(np.array(x[int(i*r),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ts_wage,"pandas.read_csv('./data/monthly_wage.csv',sep=';',decimal='.',parse_dates=True,index_col='Month')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(8,6)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
t4,"numpy.array(range(1,4)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
t4,"numpy.array(range(1,4)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
t5,numpy.array(range(10),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
t6,"numpy.array([0,1,0,1,1],dtype=bool)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
t8,numpy.array([random.random(),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
TrainLabels,"pandas.read_csv(r""F:\DataScience-Competitions\AudioDataSets\UrbanSoundClassfication\train\train.csv"",dtype=str)",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
TestLabels,"pandas.read_csv(r""F:\DataScience-Competitions\AudioDataSets\UrbanSoundClassfication\test\test.csv"",dtype=str)",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
param,"numpy.arange(1,20)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
n_estimators,"numpy.arange(1,20)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
max_features,"numpy.arange(1,len(X_train.columns)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
max_depth,"numpy.arange(1,20)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
max_depth,"numpy.arange(1,5)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
x_pos,numpy.arange(len(Model_Name_All),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
x_pos,numpy.arange(len(file_description),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
predictions_train,"numpy.zeros((X_train.shape[0],len(meta_model)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
predictions_test,"numpy.zeros((X_test.shape[0],len(meta_model)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
gammas,"numpy.linspace(0,1,21)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
gammas,"numpy.linspace(0,1,21)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
coef0s,"numpy.linspace(0,1,11)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
alpha,"numpy.linspace(0,10,11)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dfpca,pandas.DataFrame(data=pca_dict),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ac,"pandas.DataFrame({'Train':train_ac,'Test':test_ac})",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ac,pandas.DataFrame(accuracies_dict),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_remove_train,pandas.read_csv('ADNI2_bl_remove_train.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_remove_test,pandas.read_csv('ADNI2_bl_remove_test.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_model_train,pandas.read_csv('ADNI2_bl_model_train.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_model_test,pandas.read_csv('ADNI2_bl_model_test.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_mean_train,pandas.read_csv('ADNI2_bl_mean_train.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_mean_test,pandas.read_csv('ADNI2_bl_mean_test.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_remove_train_DRUG,pandas.read_csv('ADNI2_bl_remove_train_DRUG.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_remove_test_DRUG,pandas.read_csv('ADNI2_bl_remove_test_DRUG.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_model_train_DRUG,pandas.read_csv('ADNI2_bl_model_train_DRUG.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_model_test_DRUG,pandas.read_csv('ADNI2_bl_model_test_DRUG.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_mean_train_DRUG,pandas.read_csv('ADNI2_bl_mean_train_DRUG.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_mean_test_DRUG,pandas.read_csv('ADNI2_bl_mean_test_DRUG.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_remove_train_PROTEIN,pandas.read_csv('ADNI2_bl_remove_train_PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_remove_test_PROTEIN,pandas.read_csv('ADNI2_bl_remove_test_PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_model_train_PROTEIN,pandas.read_csv('ADNI2_bl_model_train_PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_model_test_PROTEIN,pandas.read_csv('ADNI2_bl_model_test_PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_mean_train_PROTEIN,pandas.read_csv('ADNI2_bl_mean_train_PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_mean_test_PROTEIN,pandas.read_csv('ADNI2_bl_mean_test_PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_remove_train_DRUGandPROTEIN,pandas.read_csv('ADNI2_bl_remove_train_DRUG+PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_remove_test_DRUGandPROTEIN,pandas.read_csv('ADNI2_bl_remove_test_DRUG+PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_model_train_DRUGandPROTEIN,pandas.read_csv('ADNI2_bl_model_train_DRUG+PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_model_test_DRUGandPROTEIN,pandas.read_csv('ADNI2_bl_model_test_DRUG+PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_mean_train_DRUGandPROTEIN,pandas.read_csv('ADNI2_bl_mean_train_DRUG+PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ADNI2_mean_test_DRUGandPROTEIN,pandas.read_csv('ADNI2_bl_mean_test_DRUG+PROTEIN.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_train,pandas.read_csv(path+'ADNI2-Model-BasedImputation.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_test,pandas.read_csv(path+'ADNI2-Model-BasedImputation.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(20,5)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,2,figsize=(26,8)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
log_ovr,"sklearn.linear_model.LogisticRegressionCV(Cs=10,cv=5,multi_class='ovr')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
log_multi,"sklearn.linear_model.LogisticRegressionCV(Cs=10,cv=5,multi_class='multinomial')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
log_ovr_pca,"sklearn.linear_model.LogisticRegressionCV(Cs=10,cv=5,multi_class='ovr')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
DTC,sklearn.tree.DecisionTreeClassifier(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf,"sklearn.ensemble.RandomForestClassifier(n_estimators=50,max_depth=None)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ABC,sklearn.ensemble.AdaBoostClassifier(base_estimator=DTC),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
lda,sklearn.discriminant_analysis.LinearDiscriminantAnalysis(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
qda,sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca,sklearn.decomposition.PCA(n_components=X_train.shape[1]),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm,sklearn.svm.LinearSVC(penalty='l2'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm,"sklearn.svm.SVC(kernel='rbf',decision_function_shape='ovr')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm,"sklearn.svm.SVC(kernel='sigmoid',decision_function_shape='ovr')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
en_opt,"sklearn.linear_model.ElasticNetCV(l1_ratio=l1_ratios,alphas=alpha,fit_intercept=True)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
pct,"sklearn.linear_model.Perceptron(penalty='elasticnet',fit_intercept=True)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mlpc,"sklearn.neural_network.MLPClassifier(hidden_layer_sizes=2,activation='logistic',learning_rate='adaptive')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
gp,"sklearn.gaussian_process.GaussianProcessClassifier(multi_class='one_vs_rest',n_jobs=-1,max_iter_predict=2)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ac_train,"sklearn.metrics.accuracy_score(y_train,y_train_hat)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ac_test,"sklearn.metrics.accuracy_score(y_test,y_test_hat)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ac_train_mv,"sklearn.metrics.accuracy_score(y_train,predictions_train_mv)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ac_test_mv,"sklearn.metrics.accuracy_score(y_test,predictions_test_mv)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ac_train_lr,"sklearn.metrics.accuracy_score(y_train,predictions_train_mv)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ac_test_lr,"sklearn.metrics.accuracy_score(y_test,predictions_test_mv)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
kmeans,"sklearn.cluster.KMeans(n_clusters=n,max_iter=10000)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
kmeans,"sklearn.cluster.KMeans(n_clusters=num_clusters,random_state=0,max_iter=10000)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
angles,"numpy.linspace(0,2*np.pi,len(labels)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
todos_dados,"pandas.read_csv(""data.csv"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dados_analise,"pandas.read_csv(""data.csv"",usecols=['acousticness','danceability','instrumentalness','energy','speechiness'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
customers_df,pandas.read_csv('Telco-Customer-Churn.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
y_pred,"numpy.zeros((test_X.shape[0],1)",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
inv_y_pred,"numpy.concatenate((y_pred,test_X_nn[:,1:])",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
inv_y,"numpy.concatenate((test_y_nn,test_X_nn[:,1:])",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
prep_df['visitors'],numpy.log1p(prep_df['visitors']),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
scaled_prep_df,pandas.DataFrame(scaler.fit_transform(prep_df),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
tmp,pandas.DataFrame(scaled_prep_df[scaled_prep_df['air_store_id']==air_id]),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
df,pandas.DataFrame(data),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
tmp,"pandas.DataFrame(series_to_supervised(mult_series['air_ee3a01f0c71a769f'],1,1)",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
prep_df,"pandas.concat([prep_df,temp],axis=1)",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
agg,"pandas.concat(cols,axis=1)",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
temp,pandas.get_dummies(pd.Series(prep_df[column]),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
data['hr'],"pandas.merge(data['hr'],data['id'],how='inner',on=['hpg_store_id'])",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
prep_df,"pandas.merge(data['tra'],data['ar'],how='inner',on=['air_store_id','visit_date'])",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
prep_df,"pandas.merge(prep_df,data['as'],how='inner',on='air_store_id')",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
prep_df,"pandas.merge(prep_df,data['hol'],how='left',on='visit_date')",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
data['tra']['visit_datetime'],pandas.to_datetime(data['tra']['visit_date']),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
data['ar']['res_visit_datetime'],pandas.to_datetime(data['ar']['visit_datetime']),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
data['ar']['reserve_datetime'],pandas.to_datetime(data['ar']['reserve_datetime']),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
data['hol']['visit_date'],pandas.to_datetime(data['hol']['visit_date']),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
scaler,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
allvals,numpy.array(allvals),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
NZ_mat,numpy.array(NZ_mat),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
NZQ_mat,numpy.array(NZQ_mat),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
NZQ_SKMS,numpy.array(NZQ_SKMS),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ZQ_mat,numpy.array(ZQ_mat),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ZQ_SKMS,numpy.array(ZQ_SKMS),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
S_p_SKMS,numpy.where(np.isnan(S_p_SKMS),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
S_2p_SKMS,numpy.where(np.isnan(S_2p_SKMS),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
S_n_SKMS,numpy.where(np.isnan(S_n_SKMS),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
S_2n_SKMS,numpy.where(np.isnan(S_2n_SKMS),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Q_SKMS,numpy.where(np.isnan(Q_SKMS),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_exp,"numpy.transpose(np.stack((Z_exp,N_exp)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_exp,"numpy.transpose(np.stack((Z_exp,N_exp,A_exp,y_exp)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_SKMS,"numpy.transpose(np.stack((Z_SKMS,N_SKMS,A_SKMS,y_SKMS,S_p_SKMS,S_2p_SKMS,S_n_SKMS,S_2n_SKMS,Q_SKMS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
NZ_SKMS,"numpy.transpose(np.stack((Z_SKMS,N_SKMS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
zdripndep_SKMS,"numpy.transpose(np.stack((zdrip_SKMS,ndep_SKMS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ndripzdep_SKMS,"numpy.transpose(np.stack((ndrip_SKMS,zdep_SKMS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
allvals,numpy.transpose(allvals),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
zdripndep_exp,"numpy.transpose(np.stack((zdrip_exp,ndep_exp)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ndripzdep_exp,"numpy.transpose(np.stack((ndrip_exp,zdep_exp)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
NZ_mat,"numpy.transpose(np.stack((Z_mat,N_mat)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
NZQ_mat,"numpy.transpose(np.stack((Z_mat,N_mat,Q_matSKMS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
NZQ_SKMS,"numpy.transpose(np.stack((Z_SKMS,N_SKMS,Q_SKMS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ZQ_mat,"numpy.transpose(np.stack((Z_mat,Q_matSKMS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ZQ_SKMS,"numpy.transpose(np.stack((Z_SKMS,Q_SKMS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
diff_ZQ_list,numpy.transpose(diff_ZQ_list),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
N_exp,"numpy.genfromtxt('EXPERIMENT_AME2016.dat',usecols=3)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Z_exp,"numpy.genfromtxt('EXPERIMENT_AME2016.dat',usecols=4)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Z_SKMS,"numpy.genfromtxt('SKMS_all_nuclei-new.dat',usecols=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
N_SKMS,"numpy.genfromtxt('SKMS_all_nuclei-new.dat',usecols=2)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(18,8)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(18,8)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(18,8)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(18,8)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,"matplotlib.pyplot.scatter(N_SKMS,Z_SKMS,c=mean_diff_ZQ,cmap='PiYG',vmin=-ext,vmax=ext,s=10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,"matplotlib.pyplot.scatter(N_SKMS,Z_SKMS,c=max_diff_ZQ,cmap='PiYG',vmin=-ext,vmax=ext,s=10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,"matplotlib.pyplot.scatter(N_SKMS,Z_SKMS,c=min_diff_ZQ,cmap='PiYG',vmin=-ext,vmax=ext,s=10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,"matplotlib.pyplot.scatter(N_SKMS,Z_SKMS,c=std_diff_ZQ,cmap='PiYG',vmin=-ext,vmax=ext,s=10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(NZ_mat,diff_mat,test_size=0.25)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(NZQ_mat,diff_mat,test_size=0.25)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(ZQ_mat,diff_mat,test_size=0.25)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(ZQ_mat,diff_mat,test_size=0.25)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf_NZ,sklearn.ensemble.RandomForestRegressor(n_estimators=1000),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf_NZQ,sklearn.ensemble.RandomForestRegressor(n_estimators=1000),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf_ZQ,sklearn.ensemble.RandomForestRegressor(n_estimators=1000),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf_ZQ,sklearn.ensemble.RandomForestRegressor(n_estimators=1000),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"y_true,y_pred",numpy.array(y_true),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
trainPredictPlot,numpy.empty_like(dataframe1),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
testPredictPlot,numpy.empty_like(dataframe1),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ItrainPredictPlot,numpy.empty_like(dataframe1),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ItestPredictPlot,numpy.empty_like(data),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
trainX,"numpy.reshape(trainX,(trainX.shape[0],trainX.shape[1],1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
testX,"numpy.reshape(testX,(testX.shape[0],testX.shape[1],1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dataframe,pandas.read_csv('UNRATE.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
trainScore,"math.sqrt(mean_squared_error(trainY_inv[0],trainPredict_inv[:,0])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
testScore,"math.sqrt(mean_squared_error(testY_inv[0],testPredict_inv[:,0])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
testScore,"math.sqrt(mean_squared_error(testY_inv[0],testPredict_inv[:,0])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf_svm,"sklearn.svm.SVC(probability=True,C=1000)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
tfidf_df,"pandas.DataFrame(tfidf_train.A,columns=tfidf_vectorizer.get_feature_names()",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
data_set,"pandas.read_csv(""document.csv"")",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(text,verdict,test_size=0.3,random_state=53)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.accuracy_score(y_test,pred_rand)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.accuracy_score(y_test,pred_tree)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.accuracy_score(y_test,pred_svm)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_test,pred_rand,labels=outputClass)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_test,pred_tree,labels=outputClass)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_test,pred_svm,labels=outputClass)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
tick_marks,numpy.arange(len(classes),CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf_rand,"sklearn.ensemble.RandomForestClassifier(n_estimators=150,criterion='entropy',random_state=0)",CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
naive_classifier,sklearn.naive_bayes.MultinomialNB(),CLUSTER_16,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_old_test,pandas.read_csv(OLD_TEST),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_old_train,pandas.read_csv(OLD_TRAIN),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_train,pandas.read_csv(TRAIN),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
skf,"sklearn.model_selection.KFold(n_splits=n_folds,shuffle=True,random_state=random_seed)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.ndarray([num_points,2])",CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
series_obj,pandas.Series(np.arange(8),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
DF_obj,pandas.DataFrame(np.random.rand(36),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
positive_counts,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
negative_counts,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
total_counts,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
pos_neg_ratios,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
review_counter,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
frequency_frequency,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
positive_counts,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
negative_counts,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
total_counts,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
pos_neg_ratios,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
most_similar,collections.Counter(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
layer_0,"numpy.zeros((1,vocab_size)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
self.weights_0_1,"numpy.zeros((self.input_nodes,self.hidden_nodes)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
self.layer_0,"numpy.zeros((1,input_nodes)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
self.weights_0_1,"numpy.zeros((self.input_nodes,self.hidden_nodes)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
self.layer_0,"numpy.zeros((1,input_nodes)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
layer_0,numpy.zeros(10),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
layer_1,numpy.zeros(5),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
layer_1,numpy.zeros(5),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
self.weights_0_1,"numpy.zeros((self.input_nodes,self.hidden_nodes)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
self.layer_1,"numpy.zeros((1,hidden_nodes)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
self.weights_0_1,"numpy.zeros((self.input_nodes,self.hidden_nodes)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
self.layer_1,"numpy.zeros((1,hidden_nodes)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
most_similar[word],"numpy.dot(mlp_full.weights_0_1[mlp_full.word2index[word]],mlp_full.weights_0_1[mlp_full.word2index[focus]])",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
pos_neg_ratios[word],numpy.log(ratio),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
pos_neg_ratios[word],numpy.log(ratio),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
"hist,edges","numpy.histogram(list(map(lambdax:x[1],pos_neg_ratios.most_common()",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
"hist,edges","numpy.histogram(list(map(lambdax:x[1],frequency_frequency.most_common()",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
tsne,"sklearn.manifold.TSNE(n_components=2,random_state=0)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
y,"numpy.choose(y,[1,2,0])",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(fignum,figsize=(4,3)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(fignum,figsize=(4,3)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(fignum,figsize=(4,3)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
iris,sklearn.datasets.load_iris(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
arr,numpy.arange(25),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
bound_rect,"matplotlib.pyplot.Rectangle((0,0)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(8,3)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(8,3)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(6,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"%timeval,err","mcquad(f,xl=numpy.zeros(5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"%timeval,err","mcquad(f,xl=numpy.zeros(10)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"%timeval,err","mcquad(f,xl=np.zeros(5),xu=numpy.ones(5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"%timeval,err","mcquad(f,xl=np.zeros(10),xu=numpy.ones(10)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
x,"numpy.linspace(a,b,10000)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
x,"numpy.linspace(a,b,25)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
xx,"numpy.linspace(a,b,500)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
x,"numpy.linspace(a,b,1+2**6)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
x,"y=numpy.linspace(-1.25,1.25,75)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"X,Y","numpy.meshgrid(x,y)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"val,err","scipy.integrate.quad(f,-1,1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"val,err","scipy.integrate.quad(f,-1,1,args=(1,2,3)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"val,err","scipy.integrate.quad(lambdax:jv(0,x)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"val,err","scipy.integrate.quad(f,-np.inf,np.inf)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"val,err","scipy.integrate.quadrature(f,-1,1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
val_simps,"scipy.integrate.simps(y,x)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
val_trapz,"scipy.integrate.trapz(y,x)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
update_ascii_period,pandas.DataFrame(periods.File_Name.astype(str),CLUSTER_15,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
ascii_data,"pandas.read_csv('../data/catalogue/Ascii_SSS_Per_Table.txt',delim_whitespace=True,names=[""SSS_ID"",""File_Name"",""RA"",""Dec"",""Period"",""V_CSS"",""Npts"",""V_amp"",""Type"",""Prior_ID"",""No_Name1"",'No_Name2'])",CLUSTER_15,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
df,"pandas.DataFrame({'key1':['a','a','b','b','a'],
'key2':['one','two','one','two','one'],
'data1':np.random.randn(5)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
tips,pandas.read_csv('../examples/tips.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,pandas.DataFrame(df_raw),CLUSTER_18,CLUSTER_10,CLUSTER_12,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(20,10)",CLUSTER_18,CLUSTER_10,CLUSTER_12,CLUSTER_0,CLUSTER_1
iris,pandas.read_csv('../input/Iris.csv'),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
ax,"seaborn.boxplot(x='Species',y='PetalLengthCm',data=iris)",CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
ax,"seaborn.stripplot(x='Species',y='PetalLengthCm',data=iris,jitter=True,edgecolor='gray')",CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
t,"numpy.arange(n-1,N)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
t,"numpy.arange(n-1,N)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
stock_sma,"numpy.convolve(stock_close,weight,mode='valid')",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
stock_ema,"numpy.convolve(stock_close,weight,mode='valid')",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
weight,numpy.ones(n),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
weight,numpy.exp(weight),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
weight,"numpy.linspace(1,0,n)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
stock_ema_hat,"numpy.polyval(poly,t)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
poly,"numpy.polyfit(t,stock_ema,10)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"stock_max,stock_min,stock_close,stock_amount","numpy.loadtxt('.\\SH600000.txt',delimiter='\t',skiprows=2,usecols=(2,3,4,5)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
result,"pandas.concat([df1,df2],ignore_index=True)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
result,"pandas.concat([df1,df2],axis=1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
result,"pandas.concat([df1,df2],keys=['X','Y'])",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
result1,"pandas.merge(df1,df2)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
result2,"pandas.merge(df1,df3,on='Year')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
result3,"pandas.merge(df1,df3,on=['Year','Product_Code'])",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
result5,"pandas.merge(df1,df3,on='Year',how='outer')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
result7,"pandas.merge(df1,df3,on='Year',how='right')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
tipdf,pandas.read_csv('../data/tips.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df1,"pandas.DataFrame({
'A':['A0','A1','A2','A3'],
'B':['B0','B1','B2','B3'],
'C':['C0','C1','C2','C3'],
'D':['D0','D1','D2','D3']
})",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df2,"pandas.DataFrame({
'A':['A4','A5','A6','A7'],
'B':['B4','B5','B6','B7'],
'C':['C4','C5','C6','C7'],
'D':['D4','D5','D6','D7']
})",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df1,"pandas.DataFrame({'Year':[2001,2002,2003,2004],
'Product_Code':[11,22,33,44],
'Price':[10000,20000,30000,40000]},
index=list('1234')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df2,"pandas.DataFrame({'Year':[2001,2002,2003,2004],
'Product_Code':[11,22,33,44],
'Price':[10000,20000,30000,40000]},
index=list('5678')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df3,"pandas.DataFrame({'Year':[2001,2003,2004,2005],
'Product_Code':[11,22,33,44],
'Color_num':[33,44,55,99]},
index=list('1234')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,"pandas.DataFrame({
'Gender':['Female','Male','Female','Male','Female','Male','Female','Female'],
'Smoking':['Smoker','Smoker','Smoker','Non-Smoker','Non-Smoker','Non-Smoker','Non-Smoker','Smoker'],
'CountA':np.random.randint(1,10,8)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df1,pandas.DataFrame(data),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,pandas.read_csv(data_path+'titanic_train.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
MMEncoder,sklearn.preprocessing.MinMaxScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.linear_model.LogisticRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
L1_Reg,sklearn.linear_model.Lasso(alpha=-0.01),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fluxes,numpy.zeros(len(fileNames),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"minid,maxid",numpy.argmin(series.sum(axis=1),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
X_complex[f],"numpy.concatenate((real,imag)",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
Y_complex[f],"numpy.concatenate((real,imag)",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
X_real[f],"numpy.genfromtxt(f,delimiter="","")",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
Y_real[f],"numpy.genfromtxt(f,delimiter="","")",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
C_range,"numpy.logspace(-2,10,13)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
gamma_range,"numpy.logspace(-9,3,13)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.linspace(-3,3,200)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
clf,"sklearn.svm.SVC(C=C,gamma=gamma)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
iris,sklearn.datasets.load_iris(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
cv,"sklearn.model_selection.StratifiedShuffleSplit(n_splits=5,test_size=0.2,random_state=42)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
grid,sklearn.model_selection.GridSearchCV(SVC(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(input_file,header=0,encoding=""UTF-8"")",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
distance_micron,"numpy.array([36.5,37.0,36.5,35.9,37.6,37.0,37.0,37.0,38.0,38.5])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
distance_error,"numpy.array([1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
distance_i,"numpy.array([10.9,10.9,10.9,10.9,10.9,10.9])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
distnace_f,"numpy.array([39.1,39,39,39,40,38.7])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
Pressure_measured,"numpy.array([21.0,20.5,21.0,20.7,20.7,20.7,20.7,20.5])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fringes,"numpy.array([15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
L,"numpy.array([3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
error_summed,numpy.sum(distance_error),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
final_error,numpy.sqrt(mean2),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
final_error_n,numpy.sqrt(mean_n2),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
average_micron,numpy.average(distance_micron),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
mean,numpy.average(lambda_final),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
mean2,numpy.average(lambda_final_calculated),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
delta_average,numpy.average(delta_n_air),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
mean_n,numpy.average(delta_n_air),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
mean_n2,numpy.average(n_final_calculated),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
start,"datetime.datetime(2010,1,1)",CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
main_df,pandas.DataFrame(),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
df,pandas.read_csv('stock_dfs/{}.csv'.format(ticker),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
resp,requests.get('https://en.wikipedia.org/wiki/NASDAQ-100'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
predictions_df,pandas.read_csv('./data2.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
predictions_df,pandas.read_csv('./data2.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
predictions_df,pandas.read_csv('./data2.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
predictions_df,pandas.read_csv('./data2.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
rdf['precision'],"sklearn.metrics.precision_score(df.true,df.pred,average='macro')",CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
rdf['recall'],"sklearn.metrics.recall_score(df.true,df.pred,average='macro')",CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
rdf['accuracy'],"sklearn.metrics.accuracy_score(df.true,df.pred)",CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
train_ate_fnames,os.listdir(train_ate_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_car_fnames,os.listdir(train_car_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_con_fnames,os.listdir(train_con_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_ede_fnames,os.listdir(train_ede_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_eff_fnames,os.listdir(train_eff_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_emp_fnames,os.listdir(train_emp_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_fib_fnames,os.listdir(train_fib_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_her_fnames,os.listdir(train_her_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_inf_fnames,os.listdir(train_inf_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_mas_fnames,os.listdir(train_mas_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_nof_fnames,os.listdir(train_nof_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_nod_fnames,os.listdir(train_nod_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_ple_fnames,os.listdir(train_ple_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_pne_fnames,os.listdir(train_pne_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
train_pn2_fnames,os.listdir(train_pn2_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
fig,matplotlib.pyplot.gcf(),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
sp,"matplotlib.pyplot.subplot(nrows,ncols,i+1)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
display_grid,"numpy.zeros((size,size*n_features)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
x,"numpy.clip(x,0,255)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
img_path,random.choice(cat_img_files+dog_img_files),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
sun_scat,"matplotlib.pyplot.scatter(weather_df['Ranking'],uvlist,linewidth=1,edgecolors='black',color='yellow',s=300)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
city_state,"pandas.DataFrame({""City"":cities,
""State"":states,
""Rank"":rank})",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
weather_df,pandas.DataFrame(weather_dict),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
rain_df,pandas.read_csv('Annual_Precipitation.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
sun_df,pandas.read_csv('Sunniness_by_Ranking.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
snow_df,pandas.read_csv('annual_snow.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
starter_df,pandas.read_csv('miserable_cities.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
code_df,pandas.read_csv('state_codes.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
code_df,pandas.read_csv('state_codes.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
response,requests.get(query_url),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
response,requests.get(query_url),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
response,requests.get(new_url),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
bins,numpy.arange(257),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
f,numpy.fft.fftshift(fft2(im),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
new_df,"pandas.DataFrame(data,columns=['DRG_Definition','Average_Medicare_Payments'])",CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_df,"pandas.DataFrame(data,columns=['DRG_Definition','Average_Total_Payments'])",CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
result,"pandas.concat([nervous_sys,eye_DDs,ear_nose_mouth_throat,respiratory_sys,circulatory_sys,digestive_sys,
hepatobiliary_sys_pancreas,musculoskeletal_sys,skin_tissue_breast,endocrine_sys,urinary_sys,
reproductive_sys_male,reproductive_sys_female,pregnancy_birth,perinatal,immunological_dis,
myeloproliferative_DDs,infectious_DDs,mental_DDs,alcohol_drug,injuries_poison,burns,
health_status_services,mult_sig_trauma,immunodeficiency_virus,operation_proc,uncategorized
],keys=['nervous_sys','eye_DDs','ear_nose_mouth_throat','respiratory_sys','circulatory_sys','digestive_sys',
'hepatobiliary_sys_pancreas','musculoskeletal_sys','skin_tissue_breast','endocrine_sys','urinary_sys',
'reproductive_sys_male','reproductive_sys_female','pregnancy_birth','perinatal','immunological_dis',
'myeloproliferative_DDs','infectious_DDs','mental_DDs','alcohol_drug','injuries_poison','burns',
'health_status_services','mult_sig_trauma','immunodeficiency_virus','operation_proc','uncategorized'
])",CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('Access_Coverage_for_1995-2010.csv'),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('Access_Coverage_for_1995-2010.csv'),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('IPPS__Provider_Summary.csv'),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
img,numpy.squeeze(images[1]),CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_0,CLUSTER_1
correct,numpy.squeeze(pred.eq(target.data.view_as(pred),CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(25,4)",CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(12,12)",CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(25,4)",CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('train.csv'),CLUSTER_0,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_0
hits,collections.defaultdict(int),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('cancer_data.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
trainScore,"math.sqrt(mean_squared_error(trainY[0],trainPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testScore,"math.sqrt(mean_squared_error(testY[0],testPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainScore,"math.sqrt(mean_squared_error(trainY[0],trainPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testScore,"math.sqrt(mean_squared_error(testY[0],testPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainScore,"math.sqrt(mean_squared_error(trainY[0],trainPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testScore,"math.sqrt(mean_squared_error(testY[0],testPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainScore,"math.sqrt(mean_squared_error(trainY[0],trainPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testScore,"math.sqrt(mean_squared_error(testY[0],testPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainScore,"math.sqrt(mean_squared_error(trainY[0],trainPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testScore,"math.sqrt(mean_squared_error(testY[0],testPredict[:,0])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds_linha,pandas.DataFrame(data=d),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds,"pandas.DataFrame(data={""dias"":fds_linha.index,'Infetados':df_es[df_es[""CCAA""]==ccaa][""TOTAL_INFECTED""].values})",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds_linha,pandas.DataFrame(data=d),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds,"pandas.DataFrame(data={""dias"":fds_linha.index,'Curados':df_es[df_es[""CCAA""]==ccaa][""CURED""].values})",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds_linha,pandas.DataFrame(data=d),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds,"pandas.DataFrame(data={""dias"":fds_linha.index,'Infetados':df_it[df_it[""CCAA""]==ccaa][""TOTAL_INFECTED""].values})",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds_linha,pandas.DataFrame(data=d),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds,"pandas.DataFrame(data={""dias"":fds_linha.index,'Curados':df_it[df_it[""CCAA""]==ccaa][""CURED""].values})",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds_linha,pandas.DataFrame(data=d),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
fds,"pandas.DataFrame(data={""dias"":fds_linha.index,'Infetados':df_es[df_es[""CCAA""]==ccaa][""TOTAL_INFECTED""].values})",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
df_es,"pandas.read_csv(PATH_DATA_es,encoding='latin-1')",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
df_it,"pandas.read_csv(PATH_DATA_it,encoding='latin-1')",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"df_es[""DATE""]","pandas.to_datetime(df_es[""NEW_DATE""],format='%d/%m/%Y')",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"df_it[""DATE""]","pandas.to_datetime(df_it[""NEW_DATE""],format='%d/%m/%Y')",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testPredictPlot,numpy.empty_like(dataset),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
values,"numpy.reshape(fds[""Infetados""].values,(-1,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainX,"numpy.reshape(trainX,(trainX.shape[0],1,trainX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testX,"numpy.reshape(testX,(testX.shape[0],1,testX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
values,"numpy.reshape(fds[""Curados""].values,(-1,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainX,"numpy.reshape(trainX,(trainX.shape[0],1,trainX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testX,"numpy.reshape(testX,(testX.shape[0],1,testX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
values,"numpy.reshape(fds[""Infetados""].values,(-1,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainX,"numpy.reshape(trainX,(trainX.shape[0],1,trainX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testX,"numpy.reshape(testX,(testX.shape[0],1,testX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
values,"numpy.reshape(fds[""Curados""].values,(-1,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainX,"numpy.reshape(trainX,(trainX.shape[0],1,trainX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testX,"numpy.reshape(testX,(testX.shape[0],1,testX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
values,"numpy.reshape(fds[""Infetados""].values,(-1,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
trainX,"numpy.reshape(trainX,(trainX.shape[0],1,trainX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
testX,"numpy.reshape(testX,(testX.shape[0],1,testX.shape[1])",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
scaler,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
scaler,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
scaler,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
scaler,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
scaler,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
plon_sample,"random.uniform(0.0,359.9)",CLUSTER_2,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_1
netflix_stocks,pandas.read_csv('NFLX.csv'),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
dowjones_stocks,pandas.read_csv('DJI.csv'),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
netflix_stocks_quarterly,pandas.read_csv('NFLX_daily_by_quarter.csv'),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
ax,"seaborn.violinplot(data=netflix_stocks_quarterly,x=""Quarter"",y=""Price"")",CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
"fig,ax1",matplotlib.pyplot.subplots(),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df_city_groups,pandas.DataFrame(city_groups),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
data,"pandas.merge(city_data,ride_data,on='city')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
city_data,pandas.read_csv(city_data_to_load),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
ride_data,pandas.read_csv(ride_data_to_load),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
data,pandas.DataFrame(data_list),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
writer,pandas.ExcelWriter('scrap-data/data_twitter.xlsx'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
k2,pandas.DataFrame(k2),CLUSTER_3,CLUSTER_10,CLUSTER_1,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(x,y,test_size=0.2,random_state=42,stratify=y)",CLUSTER_3,CLUSTER_10,CLUSTER_1,CLUSTER_0,CLUSTER_0
classifier,sklearn.naive_bayes.GaussianNB(),CLUSTER_3,CLUSTER_10,CLUSTER_1,CLUSTER_0,CLUSTER_0
accuracy,"sklearn.metrics.accuracy_score(y_test,y_predicted)",CLUSTER_3,CLUSTER_10,CLUSTER_1,CLUSTER_0,CLUSTER_0
f1,"sklearn.metrics.f1_score(y_test,y_predicted,average='weighted')",CLUSTER_3,CLUSTER_10,CLUSTER_1,CLUSTER_0,CLUSTER_0
precision,"sklearn.metrics.precision_score(y_test,y_predicted,average='weighted')",CLUSTER_3,CLUSTER_10,CLUSTER_1,CLUSTER_0,CLUSTER_0
recall,"sklearn.metrics.recall_score(y_test,y_predicted,average='weighted')",CLUSTER_3,CLUSTER_10,CLUSTER_1,CLUSTER_0,CLUSTER_0
index,numpy.arange(n_groups),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
index,numpy.arange(n_groups),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
index,numpy.arange(n_groups),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
ar_s,numpy.zeros((len(res_s),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
ar_r,numpy.zeros((len(res_r),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
ar_s,"np.zeros((len(res_s),2),dtype=numpy.dtype(int)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
ar_r,"np.zeros((len(res_r),2),dtype=numpy.dtype(int)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
shapley_umsatz,numpy.sum(ar_s),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
shapley_sum_max,numpy.sum(ar_s.max(axis=1),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
shapley_sum_min,numpy.sum(ar_s.min(axis=1),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
srg_umsatz,numpy.sum(ar_r),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
srg_sum_max,numpy.sum(ar_r.max(axis=1),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
srg_sum_min,numpy.sum(ar_r.min(axis=1),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
results_shapley,numpy.load('shapley.out.npy'),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
results_srg,numpy.load('srg.out.npy'),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
rects1,"matplotlib.pyplot.bar(index+bar_width/2,finished,bar_width,
alpha=opacity,
color='b')",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
rects1,"matplotlib.pyplot.bar(index,shapley,bar_width,
alpha=opacity,
color='b',
label='ShapleyValue')",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
rects2,"matplotlib.pyplot.bar(index+bar_width,srg,bar_width,
alpha=opacity,
color='r',
label='Auction')",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
rects1,"matplotlib.pyplot.bar(index,shapley,bar_width,
alpha=opacity,
color='b',
label='ShapleyValue')",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
rects2,"matplotlib.pyplot.bar(index+bar_width,srg,bar_width,
alpha=opacity,
color='r',
label='Auction')",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
sea_level,"pandas.read_csv('sea_level.csv',sep=',',header=0)",CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
"B,A","scipy.signal.butter(N,Wn,btype='lowpass',output='ba')",CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
sea_butterworth,"scipy.signal.filtfilt(B,A,sea_m)",CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
freq,numpy.fft.fftfreq(len(nelevation),CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
relevation,"numpy.fft.irfft(result,len(nelevation)",CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
result,"numpy.fft.rfft(nelevation,len(nelevation)",CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
result,numpy.fft.rfft(nelevation),CLUSTER_5,CLUSTER_9,CLUSTER_7,CLUSTER_0,CLUSTER_0
gym_churn,pandas.read_csv(r'C:\Users\Елена\gym_churn.csv'),CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax,"seaborn.heatmap(cm,annot=True,square=True,fmt='.2f',linewidths=1,linecolor='gray')",CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lr_model,sklearn.linear_model.LogisticRegression(),CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf_model,"sklearn.ensemble.RandomForestClassifier(n_estimators=100,random_state=0)",CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.2,random_state=0)",CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
km,sklearn.cluster.KMeans(n_clusters=5),CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
x,numpy.arange(len(log_val),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y1,numpy.array(log_train),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y2,numpy.array(log_val),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/mtcars.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
x_data,"numpy.linspace(0,10,10)",CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
y_label,"numpy.linspace(0,10,10)",CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
x_test,"numpy.linspace(-1,11,10)",CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
online_rt,pandas.read_csv(url),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
g,"seaborn.FacetGrid(customers,col=""Country"")",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('LOG_Ambiente.csv',sep="";"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(x,
y,
test_size=0.33,
stratify=y,
random_state=SEED)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
modelo,sklearn.neighbors.KNeighborsClassifier(n_neighbors=5),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
X,"numpy.arange(-2,2,0.25)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
Y,"numpy.arange(-2,2,0.25)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
x,"numpy.arange(-2,2,0.25)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y,"numpy.arange(-2,2,0.25)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"X,Y","numpy.meshgrid(X,Y)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"x,y","numpy.meshgrid(x,y)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame({'ds':SB.index,'y':SB['Close']})",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
start,"datetime.datetime(2016,1,1)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
end,"datetime.datetime(2018,11,16)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
I,numpy.zeros(t.size),CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t,"numpy.linspace(0,t_final,N_t)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
u0,"numpy.append(a0,b0)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
w,numpy.zeros(X.shape[1]+1),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
objValSeries,"numpy.zeros((horizon,)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
timeSeries,"numpy.zeros((horizon,)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
hingesq,numpy.square(np.maximum(1-np.multiply((X.dot(w),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X,"numpy.hstack((X,np.ones((n,1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
Z,"numpy.loadtxt(""data"")",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.perf_counter(),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.perf_counter(),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
jf,json.loads(reader.read(),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
reg_summery,"pandas.DataFrame(data=X.columns.values,columns=[""Features""])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,"pandas.read_csv(""Downloads/original.csv"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
reg,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
result,"sklearn.feature_selection.f_regression(X,y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
submission,"pandas.DataFrame(columns=['ID_code','Target'])",CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
train,"pandas.read_csv(""../input/train.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
test,"pandas.read_csv(""../input/test.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
x_sub,"numpy.array(test.iloc[:,1:])",CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
roc_gnb,"sklearn.metrics.roc_auc_score(y_test,probs_pos_XGB)",CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
roc_test,"sklearn.metrics.roc_auc_score(y_test,probs_pos_test_gnb)",CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
auc[weight],"sklearn.metrics.roc_auc_score(y_test,combined_preds)",CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
"x_train,x_test,y_train,y_test","sklearn.model_selection.train_test_split(x,
y,
random_state=21,
test_size=0.15
)",CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
ax1,seaborn.distplot(x_train[(y_train==0),CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
ax2,seaborn.distplot(x_train[(y_train==1),CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
GNB,sklearn.naive_bayes.GaussianNB(),CLUSTER_29,CLUSTER_3,CLUSTER_9,CLUSTER_5,CLUSTER_0
node_degree,"pandas.DataFrame(data={""node_type"":types,""degree"":degrees,""name"":names},index=nodes)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
avg_deg,pandas.Series(data=[np.median(list(sg.degree(),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
adds,"pandas.read_csv(""data/Addresses.csv"",low_memory=False)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ents,"pandas.read_csv(""data/Entities.csv"",low_memory=False)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
inter,"pandas.read_csv(""data/Intermediaries.csv"",low_memory=False)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
offi,"pandas.read_csv(""data/Officers.csv"",low_memory=False)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
edges,"pandas.read_csv(""data/all_edges.csv"",low_memory=False)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
segments,"re.finditer(ptn,t_str)",CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
ptn,re.compile('([\w|，|：|《|》|“|”|、]+),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
W,numpy.dot(np.linalg.pinv(A),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
aux,"numpy.dot(A.T,A)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
aux2,"numpy.dot(A.T,T)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
W,"numpy.dot(aux,aux2)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lamb,numpy.exp(log_lamb),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lamb,numpy.exp(l),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
A,"numpy.power(X.reshape(-1,1)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
A,"numpy.power(X.reshape(-1,1)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y_train,numpy.sin(2*np.pi*x_train),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y,numpy.sin(2*np.pi*x_test),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
E,numpy.sqrt(((T-T_fit),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
x_train,"numpy.linspace(0,1,train_size)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
x_test,"numpy.linspace(0,1,test_size)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
p,numpy.poly1d(coefs),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
p,numpy.poly1d(W),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
p,numpy.poly1d(coefs),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
aux,numpy.linalg.pinv(aux),CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
error_range,"numpy.arange(0.0,1.01,0.01)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
ex,"numpy.array([[0.9,0.1],
[0.8,0.2],
[0.4,0.6]])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
predictions,numpy.asarray([clf.predict(X),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
probas,numpy.asarray([clf.predict_proba(X),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
maj_vote,numpy.argmax(self.predict_proba(X),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
p,"numpy.average(ex,
axis=0,
weights=[0.2,0.2,0.6])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
avg_proba,"numpy.average(probas,axis=0,weights=self.weights)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.arange(x_min,x_max,0.1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.arange(x_min,x_max,0.1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.arange(x_min,x_max,0.1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.arange(x_min,x_max,0.1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
maj_vote,"numpy.apply_along_axis(
lambdax:
np.argmax(np.bincount(x,
weights=self.weights)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"f,axarr","matplotlib.pyplot.subplots(nrows=2,ncols=2,
sharex='col',
sharey='row',
figsize=(7,5)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"f,axarr","matplotlib.pyplot.subplots(nrows=1,ncols=2,
sharex='col',
sharey='row',
figsize=(8,3)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"f,axarr","matplotlib.pyplot.subplots(1,2,sharex='col',sharey='row',figsize=(8,3)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"f,axarr","matplotlib.pyplot.subplots(1,2,sharex='col',sharey='row',figsize=(8,3)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
self.lablenc_,sklearn.preprocessing.LabelEncoder(),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
le,sklearn.preprocessing.LabelEncoder(),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
le,sklearn.preprocessing.LabelEncoder(),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
iris,sklearn.datasets.load_iris(),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
sc,sklearn.preprocessing.StandardScaler(),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
clf1,"sklearn.linear_model.LogisticRegression(solver='liblinear',
penalty='l2',
C=0.001,
random_state=1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
clf2,"sklearn.tree.DecisionTreeClassifier(max_depth=1,
criterion='entropy',
random_state=0)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
tree,"sklearn.tree.DecisionTreeClassifier(criterion='entropy',
max_depth=None,
random_state=1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
tree,"sklearn.tree.DecisionTreeClassifier(criterion='entropy',
max_depth=1,
random_state=1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
clf3,"sklearn.neighbors.KNeighborsClassifier(n_neighbors=1,
p=2,
metric='minkowski')",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
pipe1,"sklearn.pipeline.Pipeline([['sc',StandardScaler()",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
pipe3,"sklearn.pipeline.Pipeline([['sc',StandardScaler()",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(estimator=clf,
X=X_train,
y=y_train,
cv=10,
scoring='roc_auc')",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(estimator=clf,
X=X_train,
y=y_train,
cv=10,
scoring='roc_auc')",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(y_true=y_test,
y_score=y_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(x=fpr,y=tpr)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
grid,"sklearn.model_selection.GridSearchCV(estimator=mv_clf,
param_grid=params,
cv=10,
scoring='roc_auc',
iid=False)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
df_wine,"pandas.read_csv('https://archive.ics.uci.edu/ml/'
'machine-learning-databases/wine/wine.data',
header=None)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
bag,"sklearn.ensemble.BaggingClassifier(base_estimator=tree,
n_estimators=500,
max_samples=1.0,
max_features=1.0,
bootstrap=True,
bootstrap_features=False,
n_jobs=1,
random_state=1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
tree_train,"sklearn.metrics.accuracy_score(y_train,y_train_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
tree_test,"sklearn.metrics.accuracy_score(y_test,y_test_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
bag_train,"sklearn.metrics.accuracy_score(y_train,y_train_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
bag_test,"sklearn.metrics.accuracy_score(y_test,y_test_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
tree_train,"sklearn.metrics.accuracy_score(y_train,y_train_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
tree_test,"sklearn.metrics.accuracy_score(y_test,y_test_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
ada_train,"sklearn.metrics.accuracy_score(y_train,y_train_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
ada_test,"sklearn.metrics.accuracy_score(y_test,y_test_pred)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
ada,"sklearn.ensemble.AdaBoostClassifier(base_estimator=tree,
n_estimators=500,
learning_rate=0.1,
random_state=1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
gbrt,"sklearn.ensemble.GradientBoostingClassifier(n_estimators=20,random_state=42)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
mul_lr,"sklearn.linear_model.LogisticRegression(multi_class='multinomial',solver='saga',max_iter=200)",CLUSTER_16,CLUSTER_8,CLUSTER_7,CLUSTER_4,CLUSTER_0
mul_lr,"sklearn.linear_model.LogisticRegression(multi_class='multinomial',solver='saga',max_iter=200,penalty='l2')",CLUSTER_16,CLUSTER_8,CLUSTER_7,CLUSTER_4,CLUSTER_0
"train_x,test_x,train_y,test_y","sklearn.model_selection.train_test_split(X,
train.iloc[:,-1],train_size=0.8,random_state=5)",CLUSTER_16,CLUSTER_8,CLUSTER_7,CLUSTER_4,CLUSTER_0
scaler,sklearn.preprocessing.MinMaxScaler(),CLUSTER_16,CLUSTER_8,CLUSTER_7,CLUSTER_4,CLUSTER_0
h,"numpy.dot(h,h.transpose()",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
psf,"numpy.ones((5,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
h/,numpy.sum(h),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
kernel/,numpy.sum(kernel),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
kernel,numpy.conj(kernel),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dummy,numpy.copy(img),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dummy,numpy.copy(img),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
h,numpy.eye(kernel_size),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(12,10)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dummy,numpy.fft.fft2(dummy),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
kernel,"numpy.fft.fft2(kernel,s=img.shape)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
h,"scipy.signal.gaussian(kernel_size,kernel_size/3)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dummy,"scipy.signal.convolve2d(dummy,h,mode='valid')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
df,"pandas.concat([top,bot])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
result,"pandas.merge(df,feature,on=['img_id_A'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
result,"pandas.merge(result,feature,on=['img_id_B'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv(filename),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
diag,numpy.arange(output.shape[1]),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
diag_matrices,"numpy.zeros((output.shape[0],output.shape[1],output.shape[1])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradW,numpy.zeros_like(self.W),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradb,numpy.zeros_like(self.b),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.dot(input,self.W)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradInput,"numpy.dot(gradOutput,(self.W)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradW,"numpy.dot(input.T,gradOutput)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradInput,"numpy.matmul(gradOutput.reshape(batch_size,1,n_feats)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
input_clamp,"numpy.clip(input,eps,1-eps)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradb,"numpy.sum(gradOutput,axis=0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.sum(np.power(input-target,2)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
T,"numpy.add(K,np.multiply(K==0,self.slope)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
T,"numpy.add(K,np.multiply(K==0,self.slope)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,numpy.divide(np.exp(tmp),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradInput,numpy.divide((-1/input_clamp.shape[0]),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.maximum(input,0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
input_clamp,"numpy.maximum(1e-15,np.minimum(input,1-1e-15)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.multiply(input,self.mask)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradInput,"numpy.multiply(gradOutput,self.mask)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradInput,"numpy.multiply(gradOutput,input>0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
K,"numpy.multiply(input>0,np.ones(input.shape)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.multiply(input,T)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
K,"numpy.multiply(input>0,np.ones(input.shape)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.gradInput,"numpy.multiply(gradOutput,T)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
tmp,"numpy.subtract(input,input.max(axis=1,keepdims=True)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
scaled,"pandas.DataFrame(scaled,columns=num_cols)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
coef_df,"pandas.DataFrame({""gender"":telcom1[""gender""]*coefficient[0][0],
""SeniorCitizen"":telcom1[""SeniorCitizen""]*coefficient[0][1],
""Partner"":telcom1[""Partner""]*coefficient[0][2],
""Dependents"":telcom1[""Dependents""]*coefficient[0][3],
""PhoneService"":telcom1[""PhoneService""]*coefficient[0][4],
""MultipleLines"":telcom1[""MultipleLines""]*coefficient[0][5],
""OnlineSecurity"":telcom1[""OnlineSecurity""]*coefficient[0][6],
""OnlineBackup"":telcom1[""OnlineBackup""]*coefficient[0][7],
""DeviceProtection"":telcom1[""DeviceProtection""]*coefficient[0][8],
""TechSupport"":telcom1[""TechSupport""]*coefficient[0][9],
""StreamingTV"":telcom1[""StreamingTV""]*coefficient[0][10],
""StreamingMovies"":telcom1[""StreamingMovies""]*coefficient[0][11],
""PaperlessBilling"":telcom1[""PaperlessBilling""]*coefficient[0][12],
""InternetService_DSL"":telcom1[""InternetService_DSL""]*coefficient[0][13],
""InternetService_Fiberoptic"":telcom1[""InternetService_Fiberoptic""]*coefficient[0][14],
""InternetService_No"":telcom1[""InternetService_No""]*coefficient[0][15],
""Contract_Month-to-month"":telcom1[""Contract_Month-to-month""]*coefficient[0][16],
""Contract_Oneyear"":telcom1[""Contract_Oneyear""]*coefficient[0][17],
""Contract_Twoyear"":telcom1[""Contract_Twoyear""]*coefficient[0][18],
""PaymentMethod_Banktransfer(automatic)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
telcom,"pandas.get_dummies(data=telcom,columns=multi_cols)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
telcom,"pandas.read_csv(""dataset/Telemarker.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
le,sklearn.preprocessing.LabelEncoder(),CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
std,sklearn.preprocessing.StandardScaler(),CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
"train,test","sklearn.model_selection.train_test_split(telcom,test_size=.20,random_state=42)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(telcom,target_result,random_state=111)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(telcom,target_result,random_state=7)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
classifier,sklearn.linear_model.LogisticRegression(),CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
grid,"sklearn.model_selection.GridSearchCV(classifier,param_grid_logReg,verbose=0)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
grid_knn,"sklearn.model_selection.GridSearchCV(knn,param_grid_knn,verbose=0)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=k),CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=13),CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
clf,sklearn.tree.DecisionTreeClassifier(),CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
rf,sklearn.ensemble.RandomForestClassifier(n_estimators=200),CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
"false_positive_rate,true_positive_rate,treshold","sklearn.metrics.roc_curve(y_test,predictions)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
"false_positive_rate,true_positive_rate,treshold","sklearn.metrics.roc_curve(y_test,predictionssvc)",CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
modelsvc,sklearn.svm.SVC(kernel='linear'),CLUSTER_29,CLUSTER_3,CLUSTER_3,CLUSTER_5,CLUSTER_0
df,"pandas.DataFrame(raw_data,columns=['regiment','company','TestScore'])",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
Z,numpy.zeros(shape),CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
non_zeros,numpy.count_nonzero(value_act),CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
"x,y",numpy.where(gridWorld==i),CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
nm,"numpy.nanmin(actions_val(gridWorld,ant_pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
min_p,"numpy.nanmin(actions_val(gridWorld,p,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
min_p,"numpy.nanmin(actions_val(gridWorld,p,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
min_p,"numpy.nanmin(actions_val(gridWorld,p,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
min_p,"numpy.nanmin(actions_val(gridWorld,p,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
min_v_act,numpy.nanmin(value_act),CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
min_p,"numpy.nanmin(actions_val(gridWorld,p,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
gridWorld[i],"numpy.nanmin(actions_val(gridWorld,i,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
gridWorld[i],"numpy.nanmin(actions_val(gridWorld,i,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
a,"numpy.nanargmax(actions_val(gridWorld,ant_pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,"numpy.nanargmax(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,"numpy.nanargmax(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,"numpy.nanargmax(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,"numpy.nanargmax(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,"numpy.nanargmax(actions_val(gridWorld,i,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
action_idx,"numpy.nanargmin(actions_val(gridWorld,ant_pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
action_idx,"numpy.nanargmin(actions_val(gridWorld,ant_pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
value_act[i],"numpy.nanargmin(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
value_act[i],"numpy.nanargmin(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
value_act[i],"numpy.nanargmin(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
value_act[i],"numpy.nanargmin(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
value_act[i],"numpy.nanargmin(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
value_act[i],"numpy.nanargmin(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
value_act[i],"numpy.nanargmin(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
value_act[i],"numpy.nanargmin(actions_val(gridWorld,pos,start,end)",CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
action_idx,numpy.nanargmin(value_act),CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
x,random.randrange(mz.shape[1]-1),CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
y,random.randrange(mz.shape[1]-1),CLUSTER_5,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_0
X_new,numpy.array([[0.8]]),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
X_val_predictions,numpy.empty((len(X_val),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
X_test_predictions,numpy.empty((len(X_test),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
sample_weights,numpy.ones(m),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
bst_n_estimators,numpy.argmin(errors),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
cumulative_heads_retio,"numpy.cumsum(coin_tosses,axis=0)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
x1s,"numpy.linspace(axes[0],axes[1],100)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
x2s,"numpy.linspace(axes[2],axes[3],100)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
x1,"numpy.linspace(axes[0],axes[1],500)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"x1,x2","numpy.meshgrid(x1s,x2s)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
cbar,matplotlib.pyplot.colorbar(ticks=[rnd_clf.feature_importances_.min(),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"X_train,X_val,y_train,y_val","sklearn.model_selection.train_test_split(X,y,random_state=49)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"X_train_val,X_test,y_train_val,y_test","sklearn.model_selection.train_test_split(
mnist.data,mnist.target,test_size=10000,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"X_train,X_val,y_train,y_val","sklearn.model_selection.train_test_split(
X_train_val,y_train_val,test_size=10000,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"X,y","sklearn.datasets.make_moons(n_samples=500,noise=0.30,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
rnd_clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=10,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
rnd_clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=10,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
rnd_clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=500,max_leaf_nodes=16,n_jobs=-1,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
rnd_clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=500,n_jobs=-1,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
rnd_clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=10,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
random_forest_clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=10,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
rnd_forest_blender,"sklearn.ensemble.RandomForestClassifier(n_estimators=200,oob_score=True,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
voting_clf,"sklearn.ensemble.VotingClassifier(
estimators=[('lr',log_clf)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
voting_clf,"sklearn.ensemble.VotingClassifier(
estimators=[('lr',log_clf)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
voting_clf,sklearn.ensemble.VotingClassifier(named_estimators),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
log_clf,"sklearn.linear_model.LogisticRegression(solver=""liblinear"",random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
log_clf,"sklearn.linear_model.LogisticRegression(solver=""liblinear"",random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
svm_clf,"sklearn.svm.SVC(gamma=""auto"",random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
svm_clf,"sklearn.svm.SVC(gamma=""auto"",probability=True,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
svm_clf,"sklearn.svm.SVC(kernel=""rbf"",C=0.05,gamma=""auto"",random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
bag_clf,"sklearn.ensemble.BaggingClassifier(
DecisionTreeClassifier(random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
bag_clf,"sklearn.ensemble.BaggingClassifier(
DecisionTreeClassifier(splitter=""random"",max_leaf_nodes=16,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
bag_clf,"sklearn.ensemble.BaggingClassifier(
DecisionTreeClassifier(random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
tree_clf,sklearn.tree.DecisionTreeClassifier(random_state=42),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
tree_clf,"sklearn.tree.DecisionTreeClassifier(max_leaf_nodes=16,random_state=42+i)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
iris,sklearn.datasets.load_iris(),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
mnist,"sklearn.datasets.fetch_openml('mnist_784',version=1)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
ada_clf,"sklearn.ensemble.AdaBoostClassifier(
DecisionTreeClassifier(max_depth=1)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
tree_reg1,"sklearn.tree.DecisionTreeRegressor(max_depth=2,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
tree_reg2,"sklearn.tree.DecisionTreeRegressor(max_depth=2,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
tree_reg3,"sklearn.tree.DecisionTreeRegressor(max_depth=2,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
gbrt,"sklearn.ensemble.GradientBoostingRegressor(max_depth=2,n_estimators=3,learning_rate=1.0,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
gbrt_slow,"sklearn.ensemble.GradientBoostingRegressor(max_depth=2,n_estimators=200,learning_rate=0.1,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
gbrt,"sklearn.ensemble.GradientBoostingRegressor(max_depth=2,n_estimators=120,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
gbrt_best,"sklearn.ensemble.GradientBoostingRegressor(max_depth=2,n_estimators=bst_n_estimators,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
gbrt,"sklearn.ensemble.GradientBoostingRegressor(max_depth=2,warm_start=True,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
val_error,"sklearn.metrics.mean_squared_error(y_val,y_pred)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
val_error,"sklearn.metrics.mean_squared_error(y_val,y_pred)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
val_error,"sklearn.metrics.mean_squared_error(y_val,y_pred)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
extra_trees_clf,"sklearn.ensemble.ExtraTreesClassifier(n_estimators=10,random_state=42)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
svm_clf,sklearn.svm.LinearSVC(random_state=42),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
mlp_clf,sklearn.neural_network.MLPClassifier(random_state=42),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
df_const_30,pandas.DataFrame(sr_const_30.tolist(),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_standard,pandas.DataFrame(sr_standard.tolist(),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
sr_strike,"pandas.Series(np.concatenate([np.arange(10,124,0.5)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
sr_profit_const_30,pandas.Series(index=df_undl.index),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
sr_profit_standard,pandas.Series(index=df_undl.index),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_undl,"pandas.concat([df_undl,df_const_30],axis=1,sort=False)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_undl,"pandas.concat([df_undl,df_standard],axis=1,sort=False)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_undl,"pandas.read_csv(""CrudeOilWTIFuturesHistoricalData.csv"")",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_iv,"pandas.read_csv(""CBOECrudeOilVolatilityHistoricalData.csv"")",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_libor,"pandas.read_csv(""libor.csv"",sep=';')",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_undl['Date_index'],pandas.to_datetime(df_undl['Date']),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_iv['Date_index'],pandas.to_datetime(df_iv['Date']),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_libor['Date_index'],pandas.to_datetime(df_libor['Date_index']),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"df_undl.loc['2019-06-25','Nextexpdate(std)']",pandas.to_datetime('2019-07-17'),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"df_undl.loc[mask_std_exp,'Secondnextexpdate(std)']",pandas.to_datetime(list_shifted),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"df_undl.loc['2019-06-25','Secondnextexpdate(std)']",pandas.to_datetime('2019-08-15'),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"df_undl.loc['2019-06-17','Secondnextexpdate(std)']",pandas.to_datetime('2019-07-17'),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(2,figsize=(16,10)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(3,figsize=(16,15)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(3,figsize=(16,15)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(2,figsize=(16,5)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(2,figsize=(16,5)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(12,8)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
X,"numpy.concatenate((blobs1[0],blobs2[0])",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
kmeans,"sklearn.cluster.KMeans(n_clusters=3,random_state=0)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
kmeans,"sklearn.cluster.KMeans(n_clusters=k_e,random_state=0)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
iris,sklearn.datasets.load_iris(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
iris,sklearn.datasets.load_iris(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
blobs1,"sklearn.datasets.make_blobs(n_samples=10,n_features=2,centers=[[0,0]],cluster_std=[[0.1]])",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
blobs2,"sklearn.datasets.make_blobs(n_samples=10,n_features=2,centers=[[1,1]],cluster_std=[[0.1]])",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
gmm,"sklearn.mixture.GaussianMixture(n_components=3,covariance_type=""diag"",max_iter=20,random_state=0)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(iris.data,iris.target,test_size=0.4)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
dbscan,"sklearn.cluster.DBSCAN(eps=0.2,min_samples=5)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
brc,sklearn.cluster.Birch(n_clusters=None),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(os.path.join('..','..','dataset','ucla-admissions.csv')",CLUSTER_1,CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_1
result_df,"pandas.DataFrame(columns=df.columns,index=['mean','min','max','mode','median'])",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('dataset_Facebook.csv',sep=';')",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
label_encoder,sklearn.preprocessing.LabelEncoder(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
mms,sklearn.preprocessing.MinMaxScaler(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
f_annualized_mean,numpy.mean(logret),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
f_annualized_std,numpy.std(logret),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
logret,numpy.log(resam/resam.shift(1),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
D_avg,pandas.Series([1]*len(index),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,"pandas.period_range(start='1950-01-01',end='2018-12-31',freq='D')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
signal1,"numpy.array([0,1,2,3,3,2,1,0])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal2,"numpy.array([1,2,3,1,1])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal1,"numpy.array([1,2,3])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal1,"numpy.array([1,5,8,6,4,9,2,1,1])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal2,"numpy.array([1,3,5,2])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal1,"numpy.array([1,3,5,2])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal2,"numpy.array([1,5,8,6,4,9,2,1,1])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal1,"numpy.array([1,3,5,2])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal2,"numpy.array([1,5,8,6])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
the_sig2,"numpy.zeros([length,length])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
this,"numpy.zeros([1,total+1-len(signal1)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
corr,"numpy.correlate(signal1,signal2,'full')",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
result,"numpy.dot(the_sig2,sig1)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal2,"numpy.roll(signal2,-(5-1)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal2_plot,"numpy.roll(signal2,-1)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
signal2,"numpy.roll(signal2,1)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"the_sig2[i,:]","numpy.roll(sig2,i)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
received,"numpy.roll(sent_0,delay_samples0)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
received_new,"numpy.roll(sent_0,delay_samples0)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sig1,"numpy.append(np.zeros([1,total-len(signal1)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sig2,"numpy.append(signal2,np.zeros([1,total-len(signal2)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sig1,"numpy.append(signal1,this)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
demod_d,"scipy.signal.decimate(demod,2)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
b_d,"scipy.signal.decimate(b,2)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
data,sklearn.datasets.load_files(path),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
dog_files,numpy.array(data['filenames']),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
human_files,"numpy.array(glob(""../../../data/lfw/*/*"")",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
test_accuracy,"100*np.sum(np.array(dog_breed_predictions)==numpy.argmax(test_targets,axis=1)",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
test_accuracy,"100*np.sum(np.array(VGG16_predictions)==numpy.argmax(test_targets,axis=1)",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
bottleneck_features,numpy.load('bottleneck_features/DogVGG16Data.npz'),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
source,"numpy.array(list(map(lambdax:to_categorical(x,num_classes=len(human_vocab)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_9
s0,"numpy.zeros((m,n_s)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_9
c0,"numpy.zeros((m,n_s)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_9
prediction,"numpy.argmax(prediction,axis=-1)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_9
models,"pandas.DataFrame({
'Model':['SupportVectorMachines','KNN','LogisticRegression',
'RandomForest',
'DecisionTree'],
'Score':[acc_svc1,acc_knn1,acc_log1,
acc_random_forest1,acc_decision_tree1]})",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(""datasets/aggreated_data.csv"",low_memory=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(Y_test1,Y_pred)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(Y_test1,Y_pred)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(Y_test1,Y_pred)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(Y_test1,Y_pred)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(Y_test1,Y_pred)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
logreg,sklearn.linear_model.LogisticRegression(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,sklearn.svm.SVC(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
random_forest,sklearn.ensemble.RandomForestClassifier(n_estimators=100),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,sklearn.neighbors.KNeighborsClassifier(n_neighbors=3),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
decision_tree,sklearn.tree.DecisionTreeClassifier(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train1,X_test1,Y_train1,Y_test1","sklearn.model_selection.train_test_split(X1,Y1,test_size=0.33,random_state=99)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
selectdata_df,"pandas.DataFrame({""TotalRides"":(ct_city_rides)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,pandas.DataFrame(selectdata_df),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df2,pandas.DataFrame(df),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fullyr_data_df,"pandas.DataFrame({""FYTotalRides"":(fy_ct_city_rides)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
main_df,"pandas.concat([main_df,df2])",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
bikedata_to_load,"pandas.read_csv(""201803-citibike-tripdata.csv"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
data,sklearn.datasets.fetch_california_housing(),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_1
X,pandas.DataFrame(data['data']),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame(juris_dict,index=['agency'])",CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
ag_pd,"pandas.merge(ag,df[['name','agency']],how='outer',left_on='NAME',right_on='name')",CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
ag_pd_pop,"pandas.merge(ag_pd,pop,how='left',left_on='NAME',right_on='name')",CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
ag_data,"pandas.merge(ag_pd_pop,p1_pa[['name_cut','pop','officers']],left_on='NAME',right_on='name_cut',how='left')",CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
pop,pandas.read_csv('PEP_2017_PEPANNRES/PEP_2017_PEPANNRES_with_ann.csv'),CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
p1,pandas.read_csv('police_one_scrape_722.csv'),CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
entry,"re.sub('\s+','',s.find('b')",CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
entry,"re.sub('\s+','',s.find('strong')",CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
entry,"re.sub('\s+','',s.text)",CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(12,10)",CLUSTER_24,CLUSTER_3,CLUSTER_3,CLUSTER_32,CLUSTER_0
vocab_frame,"pandas.DataFrame({'words':f_text},index=range(len(f_text)",CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_4
km,sklearn.cluster.KMeans(n_clusters=num_clusters),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_4
Z,"numpy.zeros((m,n_H,n_W,n_C)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
A,"numpy.zeros((m,n_H,n_W,n_C)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"A[i,h,w,c]",numpy.mean(a_prev_slice),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
Z,numpy.sum(s),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
X_pad,"numpy.pad(X,((0,0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"fig,axarr","matplotlib.pyplot.subplots(1,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
df_train,pandas.read_csv(data_path+'house_train.csv.gz'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_Y,numpy.log1p(df_train['SalePrice']),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
MMEncoder,sklearn.preprocessing.MinMaxScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fix,numpy.array([xforxintrial_timingifx[2].startswith('FixCross'),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image,numpy.array([xforxintrial_timingifx[2].startswith('Face'),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mask,numpy.array([xforxintrial_timingifx[2].startswith('Mask'),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
fix,numpy.array([xforxintrial_timingifx[2].startswith('FixCross'),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image,numpy.array([xforxintrial_timingifx[2].startswith('Face'),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mask,numpy.array([xforxintrial_timingifx[2].startswith('Mask'),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image_timing,"numpy.subtract(m,i)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
iti,"numpy.subtract(f[1:],f[:-1])",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image_relative,"numpy.subtract(i,scan_start)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mask_relative,"numpy.subtract(m,scan_start)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image_timing,"numpy.subtract(m,i)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
iti,"numpy.subtract(f[1:],f[:-1])",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image_relative,"numpy.subtract(i,scan_start)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mask_relative,"numpy.subtract(m,scan_start)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
arr,"numpy.delete(arr,2,axis=1)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
arr,"numpy.delete(arr,0,axis=0)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
arr,"numpy.delete(arr,2,axis=1)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
arr,"numpy.delete(arr,0,axis=0)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
arr,"numpy.append(image_timing,emotion_with_percent,axis=1)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
arr,"numpy.append(image_relative,arr,axis=1)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
arr,"numpy.append(image_timing,emotion_with_percent,axis=1)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
arr,"numpy.append(image_relative,arr,axis=1)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
subj_log_lines,"numpy.genfromtxt(files,delimiter=""\t"",dtype=str)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
subj_log_lines,"numpy.genfromtxt(file,delimiter=""\t"",dtype=str)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dalys_haq_sdi_answers,"pandas.DataFrame(columns=['cause_id','age_group_id','sex_id',\
'intercept','intercept_pValue','haq_over_frontier_coef',\
'haq_over_frontier_coef_pValue','logit_sdi_coef',\
'logit_sdi_coef_pValue','r2',])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
dalys_haq_sdi_withCauses,"pandas.merge(dalys_per_cause,haq_sdi,on=['location_id','age_group_id'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
final_table_male,"pandas.pivot_table(final_table_male,\
values='haq_over_frontier_coef',index=['cause_id','cause_name'],\
columns=['age_group_id','age_group_name'],fill_value='NA')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
final_table_female,"pandas.pivot_table(final_table_female,\
values='haq_over_frontier_coef',index=['cause_id','cause_name'],\
columns=['age_group_id','age_group_name'],fill_value='NA')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
haqFront_sdi_daly_data,pandas.read_csv('/ihme/homes/arjuns13/notebooks/Documents/Data/haq_sdi_frontier_estimates_perAge_aggregatedCauses_allMostDetLocs.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
cause_list_final,pandas.read_excel('/ihme/homes/arjuns13/notebooks/Documents/Data/CandidateCauses_Criteria_withCODEM_andDALYs_latest2ndJune.xlsx'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame(np.random.randn(1000,2)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df1,"pandas.read_csv('df1',index_col=0)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df2,pandas.read_csv('df2'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
line,re.search('(\{.+\}),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
log_row,json.loads(line[0]),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
grid,"matplotlib.pyplot.GridSpec(9,13,hspace=6,wspace=1.5)",CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(16,9)",CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(16,9)",CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.20,random_state=42)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Z,"numpy.meshgrid(X,np.arange(d+1)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
P,numpy.meshgrid(np.arange(d+1),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
poly,numpy.poly1d(coeff),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
poly,numpy.poly1d(coeff[::-1]),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
beta,"numpy.linalg.lstsq(X,y)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('data_25_normalized.csv',index_col='Date')",CLUSTER_29,CLUSTER_12,CLUSTER_12,CLUSTER_0,CLUSTER_0
train_data,"pandas.read_csv(train_data,delimiter='\t')",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
c,collections.Counter(arr),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
breast_df,"pandas.read_csv(""C:\\Users\\George\\Documents\\Rutgers\\StatisticalLearning\\Homework1\\breast_final.csv"")",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
boost,sklearn.ensemble.AdaBoostClassifier(DecisionTreeClassifier(max_depth=1),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
blocks,"re.split(pattern1,texts)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
result+,"re.split(pattern2,block)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
pattern1,"re.compile(r""[.]\n+|\n"")",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
pattern2,"re.compile(r""[.]+\s|\n"")",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
X,numpy.concatenate(X),CLUSTER_12,CLUSTER_0,CLUSTER_5,CLUSTER_2,CLUSTER_0
Y,numpy.concatenate(Y),CLUSTER_12,CLUSTER_0,CLUSTER_5,CLUSTER_2,CLUSTER_0
"X_train,X_val,Y_train,Y_val","sklearn.model_selection.train_test_split(X,Y,test_size=0.16)",CLUSTER_12,CLUSTER_0,CLUSTER_5,CLUSTER_2,CLUSTER_0
sal,"pandas.read_csv(""Salaries.csv"")",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
acc,"np.sum(numpy.argmax(pred,axis=1)==
numpy.argmax(y_test,axis=1)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
best_iid,numpy.argmax([np.max(accs),CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
best_iid_bern,numpy.argmax([np.max(accs),CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
best_struc,numpy.argmax([np.max(accs),CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
best_iid,numpy.argmax([np.max(accs),CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
best_struc,numpy.argmax([np.max(accs),CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
best_iid,numpy.argmax([np.max(accs),CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
best_struc,numpy.argmax([np.max(accs),CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
acc,"numpy.sum(np.argmax(pred,axis=1)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,axes","matplotlib.pyplot.subplots(figsize=(12,16)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,8)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
"fig,axes","matplotlib.pyplot.subplots(figsize=(12,16)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
inputMovies,pandas.DataFrame(userInput),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
recommendation_df,pandas.DataFrame(),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
inputMovies,"pandas.merge(inputId,inputMovies)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
movies_df,pandas.read_csv('movies.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
ratings_df,pandas.read_csv('ratings.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
TP,numpy.sum(income),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
features_log_transformed,pandas.DataFrame(data=features_raw),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
features_log_minmax_transform,pandas.DataFrame(data=features_log_transformed),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
features_final,pandas.get_dummies(features_log_minmax_transform),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
data,"pandas.read_csv(""census.csv"")",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
end,time.time(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
start,time.time(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
end,time.time(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.MinMaxScaler(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(features_final,
income,
test_size=0.2,
random_state=0)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
results['acc_train'],"sklearn.metrics.accuracy_score(y_train[:300],predictions_train)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
results['acc_test'],"sklearn.metrics.accuracy_score(y_test,predictions_test)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
results['f_train'],"sklearn.metrics.fbeta_score(y_train[:300],predictions_train,beta=0.5)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
results['f_test'],"sklearn.metrics.fbeta_score(y_test,predictions_test,beta=0.5)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clf_A,sklearn.tree.DecisionTreeClassifier(random_state=0),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clf_B,sklearn.ensemble.RandomForestClassifier(random_state=0),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clf,sklearn.ensemble.RandomForestClassifier(random_state=0),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clf_C,sklearn.svm.SVC(random_state=0),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
grid_obj,"sklearn.model_selection.GridSearchCV(clf,parameters,scoring=scorer)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
scorer,"sklearn.metrics.make_scorer(fbeta_score,beta=0.5)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
blank,"pandas.read_excel('home.xlsx',sheetname=0)",CLUSTER_8,CLUSTER_3,CLUSTER_12,CLUSTER_14,CLUSTER_0
df,"pandas.read_excel('home.xlsx',sheetname=1)",CLUSTER_8,CLUSTER_3,CLUSTER_12,CLUSTER_14,CLUSTER_0
indices,numpy.arange(len(images),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
indices,numpy.array(list(train_df[train_df['fold']!=0].index),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
indices,numpy.array(list(train_df[train_df['fold']==0].index),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
new_array,numpy.zeros(array.shape),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
images,"numpy.concatenate(images,axis=0)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
structure,"numpy.ones((3,3)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
left,numpy.argmax(is_black_horizontal),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
right,numpy.argmax(is_black_horizontal[::-1]),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
top,numpy.argmax(is_black_vertical),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
bottom,numpy.argmax(is_black_vertical[::-1]),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
x,"numpy.clip(x,0.,1.)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
bbx1,"numpy.clip(cx-cut_w//2,0,W)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
bby1,"numpy.clip(cy-cut_h//2,0,H)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
bbx2,"numpy.clip(cx+cut_w//2,0,W)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
bby2,"numpy.clip(cy+cut_h//2,0,H)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
is_black_vertical,"numpy.sum(is_black,axis=0)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
is_black_horizontal,"numpy.sum(is_black,axis=1)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
cut_rat,numpy.sqrt(1.-lam),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
final_score,"numpy.average(scores,weights=[2,1,1])",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
final_score,"numpy.average(scores,weights=[2,1,1])",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
cropped_image,"numpy.pad(cropped_image,[((l-ly)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
cropped_image,"numpy.pad(cropped_image,8,pad_with)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
df,pandas.DataFrame(self.history),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
train,pandas.read_csv(datadir/'train.csv'),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
"fig,axes","matplotlib.pyplot.subplots(nrow,ncol,figsize=(20,8)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
"fig,axes","matplotlib.pyplot.subplots(nrow,ncol,figsize=(20,8)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
"fig,axes","matplotlib.pyplot.subplots(nrow,ncol,figsize=(20,8)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
"fig,axes","matplotlib.pyplot.subplots(nrow,ncol,figsize=(20,8)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
"fig,axes","matplotlib.pyplot.subplots(nrow,ncol,figsize=(20,8)",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
"init.kaiming_uniform_(self.weight,a",math.sqrt(5),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
self.start_time,time.perf_counter(),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
elapsed_time,time.perf_counter(),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
self.prev_time,time.perf_counter(),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
cur_time,time.perf_counter(),CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
recall_grapheme,"sklearn.metrics.recall_score(pred_labels[0],y[:,0],average='macro')",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
recall_vowel,"sklearn.metrics.recall_score(pred_labels[1],y[:,1],average='macro')",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
recall_consonant,"sklearn.metrics.recall_score(pred_labels[2],y[:,2],average='macro')",CLUSTER_25,CLUSTER_0,CLUSTER_11,CLUSTER_19,CLUSTER_7
expanded_text,"re.sub(""'"","""",expanded_text)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
new_word,"re.sub(r'[^\w\s]','',word)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
tweet_tokens,"re.split('\W+',text)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
contractions_pattern,re.compile('({}),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('dataset.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
x_train_abs,numpy.asarray([maxabs_scale(wav),CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
y_train_onehot,"numpy.asarray([to_categorical(label,output_size)",CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
x_val_abs,numpy.asarray([maxabs_scale(wav),CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
y_val_onehot,"numpy.asarray([to_categorical(label,output_size)",CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
x_test_abs,numpy.asarray([maxabs_scale(wav),CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
y_test_onehot,"numpy.asarray([to_categorical(label,output_size)",CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
train_data,"numpy.load(path.join(data_dir,'wav_train_data.npz')",CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
val_data,"numpy.load(path.join(data_dir,'wav_validation_data.npz')",CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
test_data,"numpy.load(path.join(data_dir,'wav_test_data.npz')",CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_29,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_0
imgplot,matplotlib.pyplot.imshow(img),CLUSTER_29,CLUSTER_0,CLUSTER_11,CLUSTER_5,CLUSTER_9
_,"matplotlib.pyplot.xticks(tick_marks,classes,rotation=90)",CLUSTER_29,CLUSTER_0,CLUSTER_11,CLUSTER_5,CLUSTER_9
_,"matplotlib.pyplot.yticks(tick_marks,classes)",CLUSTER_29,CLUSTER_0,CLUSTER_11,CLUSTER_5,CLUSTER_9
tick_marks,numpy.arange(len(classes),CLUSTER_29,CLUSTER_0,CLUSTER_11,CLUSTER_5,CLUSTER_9
y_pred,"numpy.argmax(Y_pred,axis=1)",CLUSTER_29,CLUSTER_0,CLUSTER_11,CLUSTER_5,CLUSTER_9
images,numpy.vstack([x]),CLUSTER_29,CLUSTER_0,CLUSTER_11,CLUSTER_5,CLUSTER_9
x,"numpy.expand_dims(x,axis=0)",CLUSTER_29,CLUSTER_0,CLUSTER_11,CLUSTER_5,CLUSTER_9
cnf_matrix,"sklearn.metrics.confusion_matrix(validation_generator.classes,y_pred)",CLUSTER_29,CLUSTER_0,CLUSTER_11,CLUSTER_5,CLUSTER_9
DSTSTART_2007,"datetime.datetime(1,3,8,2)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
DSTEND_2007,"datetime.datetime(1,11,1,1)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
DSTSTART_1987_2006,"datetime.datetime(1,4,1,2)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
DSTEND_1987_2006,"datetime.datetime(1,10,25,1)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
DSTSTART_1967_1986,"datetime.datetime(1,4,24,2)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
my_date_ET,"datetime.datetime(2018,7,16,10,30,0,tzinfo=Eastern)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
ZERO,datetime.timedelta(0),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
HOUR,datetime.timedelta(hours=1),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
dte+,datetime.timedelta(days_to_go),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
self.stdoffset,datetime.timedelta(hours=hours),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
Trading_Dates,"pandas.bdate_range(start_dt,end_dt,freq=""B"")",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
pd_date_plus_time,pandas.to_datetime(date_plus_time),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
"fig,axarr","matplotlib.pyplot.subplots(5,6,figsize=(15,12)",CLUSTER_15,CLUSTER_0,CLUSTER_11,CLUSTER_30,CLUSTER_8
K,"numpy.array([fx,0,cx,0,fy,cy,0,0,1])",CLUSTER_15,CLUSTER_0,CLUSTER_11,CLUSTER_30,CLUSTER_8
p,"numpy.array([x,y,1])",CLUSTER_15,CLUSTER_0,CLUSTER_11,CLUSTER_30,CLUSTER_8
points,numpy.array(points),CLUSTER_15,CLUSTER_0,CLUSTER_11,CLUSTER_30,CLUSTER_8
t,"numpy.linspace(0,2*np.pi,200)",CLUSTER_15,CLUSTER_0,CLUSTER_11,CLUSTER_30,CLUSTER_8
points_smooth,numpy.stack(points_smooth),CLUSTER_15,CLUSTER_0,CLUSTER_11,CLUSTER_30,CLUSTER_8
chunks,"numpy.array_split(points,points.shape[0]//10)",CLUSTER_15,CLUSTER_0,CLUSTER_11,CLUSTER_30,CLUSTER_8
a,"numpy.array([[1,6],
[2,8],
[3,11],
[3,10],
[1,7]])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
authors_price['cover'],numpy.array(covers),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
a_centered_sp,"numpy.vdot(a_centered[:,0],a_centered[:,1])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
mean_a,"numpy.mean(a,axis=0)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
a_cov,numpy.cov(a.T),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
authors,pandas.DataFrame(a),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
book,pandas.DataFrame(b),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
authors_price,"pandas.merge(book,authors,on='author_id')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
book_info,"pandas.pivot_table(authors_price,values='price',index=['author_name'],
columns=['cover'],aggfunc=np.sum,fill_value=0)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
book_info2,"pandas.read_pickle(""./book_info.pkl"")",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
admitdata,"pandas.read_csv(r""C:\Users\SHRISTI\Desktop\MachineLearning\Decibels\DataSets\Admission_Prediction.csv"")",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
log_reg,"sklearn.linear_model.LogisticRegression(solver=""liblinear"",random_state=42)",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
cnf_matrix,"sklearn.metrics.confusion_matrix(y,y_pred)",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
result,"sklearn.metrics.confusion_matrix(y,y_pred)",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(y,y_scores)",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
a_range,"numpy.arange(1,6)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
line_y,numpy.array(line_y),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
line_x,"numpy.array([0,1])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
line_y,"numpy.array([0,2])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
X,numpy.array([i]),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Y,numpy.array([new_y]),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
X,"numpy.array([latest_x,latest_x+1])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Y,"numpy.array([new_y,0])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
X,numpy.exp((((x-50),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
surface_x,numpy.exp(xy_scaled),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
x,"numpy.tile(np.arange(1,101)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
x,"numpy.tile(a_range,(5,1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
means,"numpy.arange(dim,dtype=float)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
std,numpy.sqrt(dx),CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
sig,numpy.sqrt(s/(len(x),CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
x,"numpy.linspace(-0.1,1.1,dim)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
x,"numpy.linspace(0,1,dim)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
beta_rv,"scipy.stats.beta(alpha,beta)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
norm_rvm,"scipy.stats.norm(loc=mx,scale=dx)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
sample,pandas.DataFrame(tmp),CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,4,figsize=(15,5)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
nonzeroy,numpy.array(nonzero[0]),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
nonzerox,numpy.array(nonzero[1]),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
pts_left,"numpy.array([np.transpose(np.vstack([left_fitx,ploty])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
pts_right,"numpy.array([np.flipud(np.transpose(np.vstack([right_fitx,ploty])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
left_lane_inds,numpy.concatenate(left_lane_inds),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
right_lane_inds,numpy.concatenate(right_lane_inds),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
sxbinary,numpy.zeros_like(scaled_sobel),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
s_binary,numpy.zeros_like(s_channel),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
color_binary,numpy.zeros_like(scaled_sobel),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
warp_zero,numpy.zeros_like(binary_warped),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
leftx_base,numpy.argmax(histogram[:midpoint]),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
rightx_base,numpy.argmax(histogram[midpoint:]),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
histogram,"numpy.sum(binary_warped[binary_warped.shape[0]/2:,:],axis=0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
abs_sobelx,numpy.absolute(sobelx),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
src,"numpy.float32(
[[(img_size[0]/2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
dst,"numpy.float32(
[[(img_size[0]/4)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
scaled_sobel,numpy.uint8(255*abs_sobelx/np.max(abs_sobelx),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
ploty,"numpy.linspace(0,binary_warped.shape[0]-1,binary_warped.shape[0])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
pts,"numpy.hstack((pts_left,pts_right)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
img,numpy.copy(img),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
out_img,"numpy.dstack((binary_warped,binary_warped,binary_warped)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
color_warp,"numpy.dstack((warp_zero,warp_zero,warp_zero)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
left_fit,"numpy.polyfit(lefty,leftx,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
right_fit,"numpy.polyfit(righty,rightx,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
left_fit_cr,"numpy.polyfit(lefty*ym_per_pix,leftx*xm_per_pix,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
right_fit_cr,"numpy.polyfit(righty*ym_per_pix,rightx*xm_per_pix,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
df,"pandas.read_sql('SELECT\'yellow\'type,count(*)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
normalized_df,"pandas.read_sql('SELECTtype,count(*)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
typeperday_df,"pandas.read_sql(query,conn)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
typeperday_fhvhv_df,"pandas.read_sql(query,conn)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
"X1,X2","numpy.meshgrid(np.arange(start=X_set[:,0].min()",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X1,X2","numpy.meshgrid(np.arange(start=X_set[:,0].min()",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dataset,pandas.read_csv('Wine.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.2,random_state=42)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc_X,sklearn.preprocessing.StandardScaler(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,sklearn.linear_model.LogisticRegression(random_state=42),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
t1,time.time(),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
t2,time.time(),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
t3,time.time(),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,"numpy.asarray([1.0,2.0,3.0])",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,"numpy.asarray([11.0,12.0,13.0])",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,"numpy.asarray([3.0,3.0,3.0])",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,"numpy.asarray([5.0,5.0,5.0])",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,"numpy.zeros((D3,)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,numpy.zeros(D3),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,numpy.zeros(D3),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,"numpy.ones((D3,)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,numpy.ones(D3),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,numpy.ones(D3),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
a,"numpy.maximum(0,X.dot(W1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
a,"numpy.maximum(0,X.dot(W1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
a,"numpy.maximum(0,X.dot(W1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
a,"numpy.maximum(0,X.dot(W1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
weight_scales,"numpy.logspace(-4,0,num=20)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
figure,"matplotlib.pyplot.figure(figsize=(30,10)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
ax,"matplotlib.pyplot.subplot(1,3,subplot_idx+1,projection='3d')",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
table_ranges_inverse,"numpy.arange(25,2250,25)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
weight,"numpy.matmul(pseudo_inverse,ranges)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
loss,numpy.mean((estimated_ranges-ranges),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
elevation_1,numpy.arctan(x_1),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
elevation_2,numpy.arctan(x_2),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
elevations,"numpy.deg2rad(measurements[:,0])",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
elevations,"numpy.deg2rad(np.array([0,30,45])",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
elevations,"numpy.deg2rad(measurements[:,0])",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
elevations,"numpy.deg2rad(measurements[:,0])",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
table_elevations,"numpy.deg2rad(np.arange(0,90.5,0.5)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
x[i][j],numpy.rad2deg(x[i][j]),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
x,numpy.sqrt(x),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
grid,"numpy.linspace(0,np.pi/2,10001)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
initial_velocities,"numpy.linspace(100,200,101)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
vehicle_heights,"numpy.linspace(0,10,101)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
grid,"numpy.linspace(0,np.pi/2,10001)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"initial_velocities,vehicle_heights","numpy.meshgrid(initial_velocities,vehicle_heights)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
pseudo_inverse,"numpy.linalg.pinv(np.expand_dims(feature_vector,axis=1)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"v_0,y_0","scipy.optimize.brute(scipy.optimize.brute_loss,(slice(100,200,0.1)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
measurements,"pandas.read_csv('./data/elevation_range_measurements.csv',index_col=0)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
loans,pandas.get_dummies(loans),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ts,pandas.get_dummies(ts),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
loans,pandas.read_csv('loans_tr.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ts,pandas.read_csv('loans_ts.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_results,"sklearn.model_selection.cross_val_score(model,x_train,y_train,cv=kf,scoring=scoring)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_results,"sklearn.model_selection.cross_val_score(model,x_train,y_train,cv=kfold,scoring=scoring)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_results,"sklearn.model_selection.cross_val_score(models[1][1],x_data,y_data,cv=kfold,scoring=scoring)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kf,"sklearn.model_selection.KFold(n_splits=num_folds,random_state=seed)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kfold,"sklearn.model_selection.KFold(n_splits=num_folds,random_state=seed)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kf,"sklearn.model_selection.KFold(n_splits=num_folds,random_state=seed)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kfold,"sklearn.model_selection.KFold(n_splits=num_folds,random_state=seed)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kfold,"sklearn.model_selection.KFold(n_splits=num_folds,random_state=seed)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid,"sklearn.model_selection.GridSearchCV(estimator=model,param_grid=param_grid,scoring=scoring,cv=kf)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid,"sklearn.model_selection.GridSearchCV(estimator=model,param_grid=param_grid,scoring=scoring,cv=kfold)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,sklearn.neighbors.KNeighborsClassifier(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,sklearn.ensemble.RandomForestClassifier(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"x_train,x_test,y_train,y_test","sklearn.model_selection.train_test_split(x_data,y_data,test_size=0.2,random_state=11)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
click_data,"pandas.read_csv('./train_sample.csv',
parse_dates=['click_time'])",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
label_encoder,sklearn.preprocessing.LabelEncoder(),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
score,"sklearn.metrics.roc_auc_score(test['is_attributed'],ypred)",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
total_days,pandas.DataFrame(autopost.comments.apply(days_count),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
avg_days,"pandas.DataFrame(auto[['listing_id','comments_y']].groupby('listing_id')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
feature_importances,"pandas.DataFrame({'feature':features,'importance':rf.feature_importances_})",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
autopost,"pandas.concat([autopost_1,autopost_2],axis=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_df,"pandas.get_dummies(df,drop_first=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,"pandas.get_dummies(df_main,drop_first=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
auto,"pandas.merge(autopost,total_days,how='left',left_index=True,right_index=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_main,"pandas.merge(df,latest.groupby('Borough')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
reviews,"pandas.read_csv('/Users/anna/Downloads/reviews.csv.gz',compression='gzip')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
listings,pandas.read_csv('/Users/anna/Downloads/listings(1),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
neighborhoods,"pandas.read_csv('/Users/anna/Downloads/neighbourhoods.csv',error_bad_lines=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
crime,"pandas.read_csv('/Users/anna/Downloads/crimerates.csv',error_bad_lines=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df['cumulative_importance'],numpy.cumsum(df['importance_normalized']),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
reg,sklearn.linear_model.LinearRegression(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.3,random_state=42)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X2_train,X2_test,y2_train,y2_test","sklearn.model_selection.train_test_split(X2,y2,test_size=0.3,random_state=42)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(reg,X_train,y_train,cv=5,scoring='r2')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(ridge,X_train,y_train,cv=5,scoring=""r2"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(lasso,X_train,y_train,cv=5,scoring=""r2"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(bag,X_train,np.ravel(y_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(rf,X_train,np.ravel(y_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(gbr,X_train,np.ravel(y_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(gbr2,X2_train,np.ravel(y2_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(gbr2,X2_train,np.ravel(y2_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(gbr2,X2_train,np.ravel(y2_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(gbr2,X2_train,np.ravel(y2_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(gbr,X_train,np.ravel(y_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge,sklearn.linear_model.Ridge(random_state=42),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lasso,sklearn.linear_model.Lasso(random_state=42),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
trees,sklearn.tree.DecisionTreeRegressor(random_state=42),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bag,"sklearn.ensemble.BaggingRegressor(base_estimator=trees,random_state=42)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf,sklearn.ensemble.RandomForestRegressor(random_state=42),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbr,sklearn.ensemble.GradientBoostingRegressor(random_state=42),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbr2,sklearn.ensemble.GradientBoostingRegressor(random_state=42),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbr2,"sklearn.ensemble.GradientBoostingRegressor(random_state=42,n_estimators=tree)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbr2,"sklearn.ensemble.GradientBoostingRegressor(random_state=42,n_estimators=best_n,max_depth=x)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbr2,"sklearn.ensemble.GradientBoostingRegressor(random_state=42,n_estimators=best_n,max_depth=best_max_depth,learning_rate=x)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbr,"sklearn.ensemble.GradientBoostingRegressor(random_state=42,n_estimators=best_n,max_depth=best_max_depth,learning_rate=best_lr)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
start_date,pandas.Timestamp('20150101'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
end_date,pandas.Timestamp('20151231'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
iowa_merge,"pandas.merge(min_df,iowa_census_data,on='county',how='inner')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('./../Iowa_Liquor_sales_sample_10pct.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
iowa_census,"pandas.read_html(url,attrs={""class"":""wikitable""})",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df['date'],"pandas.to_datetime(df['date'],format=""%m/%d/%Y"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df['zip_code'],"pandas.to_numeric(df['zip_code'],errors=coerce)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
b,"seaborn.countplot(y='county',data=iowa_merge)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(iowa_data,iowa_target,random_state=42)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge_regressor,sklearn.linear_model.Ridge(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
response,"requests.get(url+city+"".json"")",CLUSTER_13,CLUSTER_5,CLUSTER_2,CLUSTER_0,CLUSTER_1
x,"numpy.arange(0,x_max,0.01)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
train_loss,numpy.mean(train_losses),CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_30,CLUSTER_8
train_acc,numpy.mean(train_accs),CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_30,CLUSTER_8
test_loss,numpy.mean(test_losses),CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_30,CLUSTER_8
test_acc,numpy.mean(test_accs),CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_30,CLUSTER_8
edge,random.choice(list(self.graph.edges),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
self.graph.nodes[node]['opinion'],"random.randint(0,1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
self.graph.nodes[node]['persuasiveness'],random.random(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
new_edge,"random.sample(nodes,2)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
df,"pandas.read_table(""fruit_data_with_colors.txt"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.MinMaxScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,random_state=seed)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
log_reg,sklearn.linear_model.LogisticRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
x,"numpy.array([[1,2,3],[4,5,6],[7,8,9]])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
a,"numpy.array([[1,2],[4,5],[7,8]])",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
b,numpy.linalg.svd(a),CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
df,"scipy.linalg.lu(x,permute_l=True)",CLUSTER_10,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
bmi_life_model,sklearn.linear_model.LinearRegression(),CLUSTER_3,CLUSTER_10,CLUSTER_1,CLUSTER_0,CLUSTER_0
data,pandas.read_csv('fraud_data.csv'),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('fraud_data.csv'),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,random_state=0)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
dk,sklearn.dummy.DummyClassifier(strategy='most_frequent'),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
asc,"sklearn.metrics.accuracy_score(y_test,y_pred)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
rs,"sklearn.metrics.recall_score(y_test,y_pred)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
ps,"sklearn.metrics.precision_score(y_test,y_pred)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
sk,sklearn.svm.SVC(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clf,"sklearn.svm.SVC(C=1e9,gamma=1e-07)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
confusion_matrix,"sklearn.metrics.confusion_matrix(y_test,y_scores)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
lk,sklearn.linear_model.LogisticRegression(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
ld,sklearn.linear_model.LogisticRegression(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds2","sklearn.metrics.roc_curve(y_test,y_pred)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
"precision,recall,thresholds1","sklearn.metrics.precision_recall_curve(y_test,y_pred)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
gd,"sklearn.model_selection.GridSearchCV(ld,param_grid=paras,cv=3,scoring='recall')",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
teacher_force,random.random(),CLUSTER_1,CLUSTER_1,CLUSTER_5,CLUSTER_0,CLUSTER_1
start_time,time.time(),CLUSTER_1,CLUSTER_1,CLUSTER_5,CLUSTER_0,CLUSTER_1
end_time,time.time(),CLUSTER_1,CLUSTER_1,CLUSTER_5,CLUSTER_0,CLUSTER_1
x,"numpy.array(x,dtype='float32')",CLUSTER_6,CLUSTER_7,CLUSTER_0,CLUSTER_0,CLUSTER_1
earthquakes,"pandas.read_csv(""../input/earthquake-database/database.csv"")",CLUSTER_8,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_0
landslides,"pandas.read_csv(""../input/landslide-events/catalog.csv"")",CLUSTER_8,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_0
volcanos,"pandas.read_csv(""../input/volcanic-eruptions/database.csv"")",CLUSTER_8,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_0
landslides['date_parsed'],"pandas.to_datetime(landslides['date'],format=""%m/%d/%y"")",CLUSTER_8,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_0
earthquakes['date_parsed'],"pandas.to_datetime(earthquakes['Date'],infer_datetime_format=True)",CLUSTER_8,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_0
data,sklearn.datasets.load_digits(),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
recenttime,datetime.datetime.fromtimestamp(mostrecent['latestUpdateTime']/1.e3),CLUSTER_5,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame(everything,columns=[elt.tagforeltindata.find('station')",CLUSTER_5,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame(everything,columns=[elt.tagforeltindata.find('station')",CLUSTER_5,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame(everything,columns=[elt.tagforeltindata.find('station')",CLUSTER_5,CLUSTER_9,CLUSTER_2,CLUSTER_0,CLUSTER_1
prediction_NUM,numpy.argmax(prediction[n]),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
n,"random.randint(0,len(x_test)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
ROOT_DIR,os.getcwd(),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
image_id,random.choice(dataset.image_ids),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
ids,random.sample(range(rois.shape[1]),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
rows,numpy.ascontiguousarray(rois[b]),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
indices,numpy.where(rpn_match[b]==1),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
positive_anchor_ids,numpy.where(rpn_match[b]==1),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
negative_anchor_ids,numpy.where(rpn_match[b]==-1),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
neutral_anchor_ids,numpy.where(rpn_match[b]==0),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
positive_rois,numpy.sum(ids[0]>0),CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
"_,idx","numpy.unique(rows,return_index=True)",CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
"fig,ax","matplotlib.pyplot.subplots(1,figsize=(10,10)",CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
"fig,ax","matplotlib.pyplot.subplots(1,figsize=(16,16)",CLUSTER_11,CLUSTER_0,CLUSTER_9,CLUSTER_3,CLUSTER_7
target_probas,numpy.array([([1.]ifobs[2]<0else[0.]),CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
mspacman_color,"numpy.array([210,164,74])",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
discounted_rewards,numpy.zeros(len(rewards),CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
flat_rewards,numpy.concatenate(all_discounted_rewards),CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
q_values,"numpy.full((n_states,n_actions)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
action,numpy.argmax(q_values),CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
mean_gradients,"numpy.mean([reward*all_gradients[game_index][step][var_index]
forgame_index,rewardsinenumerate(all_rewards)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
patch,matplotlib.pyplot.imshow(frames[0]),CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
replay_memory,"collections.deque([],maxlen=replay_memory_size)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
preprocessed_observations,"collections.deque([],maxlen=n_observations_per_state)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_10,CLUSTER_11
feature_difference_df,"pandas.DataFrame(data=np.zeros((test.shape[0],len(feature_difference)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
output,"pandas.DataFrame({'Id':submit.Id,'SalePrice':pred})",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
coef,"pandas.Series(ridge.coef_,index=X_train.columns)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train,"pandas.concat([train_cat,train_num],axis=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test,"pandas.concat([test_cat,test_num],axis=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_cat,pandas.get_dummies(train_cat),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_cat,pandas.get_dummies(test_cat),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train,pandas.read_csv('Data/train.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test,pandas.read_csv('Data/test.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
submit,pandas.read_csv('Data/sample_submission.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
feature_difference_df,"pd.DataFrame(data=numpy.zeros((test.shape[0],len(feature_difference)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pred,numpy.expm1(pred),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train.SalePrice,numpy.log1p(train.SalePrice),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
skew_features,numpy.log1p(skew_features),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rmse,"numpy.sqrt(-cross_val_score(model,X_train,y_train,scoring=""neg_mean_squared_error"",cv=kf)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rmse,"numpy.sqrt(-cross_val_score(model,X_test,y_test,scoring=""neg_mean_squared_error"",cv=kf)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"f,ax","matplotlib.pyplot.subplots(figsize=(20,9)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
g,seaborn.heatmap(train[top_corr_features].corr(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(train,y,test_size=0.3,random_state=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
res,"scipy.stats.probplot(train['SalePrice'],plot=plt)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lr,sklearn.linear_model.LinearRegression(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge,"sklearn.linear_model.RidgeCV(alphas=[0.01,0.03,0.06,0.1,0.3,0.6,1,3,6,10,30,60])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge,"sklearn.linear_model.RidgeCV(alphas=[alpha*.6,alpha*.65,alpha*.7,alpha*.75,alpha*.8,alpha*.85,
alpha*.9,alpha*.95,alpha,alpha*1.05,alpha*1.1,alpha*1.15,
alpha*1.25,alpha*1.3,alpha*1.35,alpha*1.4],cv=5)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scorer,"sklearn.metrics.make_scorer(mean_squared_error,greater_is_better=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kf,"sklearn.model_selection.KFold(n_folds,shuffle=True,random_state=42)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kf,"sklearn.model_selection.KFold(n_folds,shuffle=True,random_state=42)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_sql('SELECT*FROMSTACKOVERFLOW',con=engine)",CLUSTER_1,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
start,time.time(),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
price,collections.defaultdict(int),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
function_called_times,collections.defaultdict(int),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv(""https://storage.googleapis.com/ml_universities/california_housing_train.csv"",sep="","")",CLUSTER_1,CLUSTER_11,CLUSTER_2,CLUSTER_0,CLUSTER_1
inputMovies,pandas.DataFrame(userInput),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
inputMovies,"pandas.merge(inputId,inputMovies)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
movies_df,pandas.read_csv('movies.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
ratings_df,pandas.read_csv('ratings.csv'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
data,json.loads(f.read(),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
"version_details[""last_checked""]",time.time(),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
r,requests.get(url),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
r,requests.get(url),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(figsize=(8,5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(8,5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
churn,"pandas.concat([churn,states],axis=1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
states,"pandas.get_dummies(churn.state,drop_first=True)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
churn,pandas.read_csv('../../data/churn_missing.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=5),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=k),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=k),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=25),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=k),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(knn,Xs,y,cv=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(knn,Xs,y,cv=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(knn,X,y,cv=cv)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(knn,X,y,cv=cv)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(knn,Xs,y,cv=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ss,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ss,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ss,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ss,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsRegressor(n_neighbors=k),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsRegressor(n_neighbors=best_k),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"height,width,layers",numpy.array(im1),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
or_prob,random.random(),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
expon,math.exp(-((i-centerx),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
unbiased_std,math.sqrt(N/(N-1),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
unbiased_std,math.sqrt(N/(N-1),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
kernel,"numpy.zeros((kernel_size,kernel_size)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
mean,numpy.mean(image),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
N,numpy.prod(image.shape),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
N,numpy.prod(image.shape),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
std,numpy.sqrt(var),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
output[rand_image<probability],numpy.iinfo(image.dtype),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
output[np.logical_and(rand_image>,"probability,rand_image<density)]=numpy.iinfo(image.dtype)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
smooth_image,"scipy.signal.convolve2d(image,gauss,boundary='pad',mode='same')",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
smooth,"scipy.signal.convolve2d(image,gauss,boundary='pad',mode='same')",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
colormap,"numpy.array(['
plt.scatter(attributes.longitude,attributes.latitude,c=colormap[db.labels_],s=20)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
model,"sklearn.cluster.DBSCAN(eps=1,min_samples=25)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(""data575update.csv"",header=0)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
X,"numpy.array([[1,2],[3,4],[5,6],[7,8]])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
y,"numpy.array([0,0,1,1])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
b,"numpy.array([1,4,7,8])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
columns,"numpy.concatenate((iris.feature_names,[""class""])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
b,numpy.empty_like(a),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
y,numpy.sin(x),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
x,"numpy.linspace(0,10,30)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
s,"numpy.linspace(3,18)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
a_splitted,"numpy.array_split(a,3)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
iris,sklearn.datasets.load_iris(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
sss,"sklearn.model_selection.StratifiedShuffleSplit(n_splits=2,test_size=0.5,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
v,sklearn.feature_extraction.DictVectorizer(sparse=False),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
log_value,"math.floor(log(n,2)",CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
df_train,"pandas.get_dummies(data=X_train,drop_first=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_test,"pandas.get_dummies(data=X_test,drop_first=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('data/out.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('data/out.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
param_range,"numpy.logspace(-1,1,10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
param_range,"numpy.logspace(-2,2,10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
param_range,"numpy.logspace(-6,4,20)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.2)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.2)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,sklearn.preprocessing.StandardScaler(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,sklearn.preprocessing.StandardScaler(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,sklearn.tree.DecisionTreeClassifier(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.tree.DecisionTreeClassifier(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rs,"sklearn.model_selection.RandomizedSearchCV(
estimator=DecisionTreeClassifier()",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rs,"sklearn.model_selection.RandomizedSearchCV(
estimator=SVC()",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rs,"sklearn.model_selection.RandomizedSearchCV(
estimator=LogisticRegression(solver='liblinear',multi_class='auto')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rs,"sklearn.model_selection.RandomizedSearchCV(
estimator=RandomForestClassifier()",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,sklearn.svm.SVC(kernel='linear'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.svm.SVC(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,"sklearn.linear_model.LogisticRegression(random_state=0,solver='lbfgs',multi_class='multinomial')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,"sklearn.linear_model.LogisticRegression(solver='liblinear',multi_class='auto')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,"clf=sklearn.ensemble.RandomForestClassifier(n_estimators=100,max_depth=2,random_state=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.ensemble.RandomForestClassifier(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
encoder,"sklearn.preprocessing.OneHotEncoder(sparse=False,categories='auto')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,sklearn.metrics.confusion_matrix(y_test.argmax(axis=1),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax1,matplotlib.pyplot.subplot(111),CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
start,"pandas.to_datetime('2018-04-01',utc=True)",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
end,"pandas.to_datetime('2018-10-01',utc=True)",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
animes,pandas.read_csv(f'{PATH}anime.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ratings,pandas.read_csv(f'{PATH}rating.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ratings_df,pandas.read_csv(f'{PATH}rating.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
topAnimeIdx,numpy.array([anim2idx[o]forointop_anime]),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
topAnimeIdx,numpy.array([anim2idx[i]foriintop_anime]),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mean_rating,numpy.mean(row.rating),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca,sklearn.decomposition.PCA(n_components=3),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca2D,sklearn.decomposition.PCA(n_components=2),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dfCoeffs,"pandas.DataFrame({'type':X.columns.values,'coef':coeffs_avg,'std':coeffs_std})",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('../APMAE4990-/data/hw2data.csv',index_col=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
coefficient,numpy.sort(np.array(regr.coef_),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
alphas,"numpy.logspace(-8,-3,1000)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
regr,sklearn.linear_model.Lasso(alpha=alpha),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
regr,sklearn.linear_model.Lasso(alpha=alpha),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
regr,sklearn.linear_model.Lasso(alpha=best_alpha),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
regr,sklearn.linear_model.Lasso(alpha=best_alpha),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
regr,sklearn.linear_model.Lasso(alpha=best_alpha),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(regr,X,y,cv=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scorecv,"sklearn.model_selection.cross_val_score(regr,X,y,cv=cv)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv,"sklearn.model_selection.ShuffleSplit(n_splits=5,test_size=0.2)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
stock_201509,pandas.DataFrame([stock_df['date'].dt.strftime('%Y%m%d'),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
stock_201509,pandas.DataFrame([stock_df['date'].dt.strftime('%Y%m%d'),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.merge(df,stock_201509,on='マーケット発注日',how='inner')",CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.merge(df,stock_df,on=['マーケット発注日','銘柄コード']how='inner')",CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
stock_price_chart,pandas.read_csv(read_dir+'chart_20150105_20191031.csv'),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sec_201509_df,pandas.read_pickle(data_dir+'sec_201509.pkl'),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
stock_df['date'],pandas.to_datetime(stock_df['date']),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
stock_df['date'],pandas.to_datetime(stock_df['date']),CLUSTER_8,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
theta,"numpy.arange(0,np.pi,np.pi/4)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
omega,"numpy.arange(0.2,0.6,0.1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dx,"numpy.roll(Z,1,axis=1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dx2,"numpy.roll(dx,1,axis=1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dy,"numpy.roll(Z,1,axis=0)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dy2,"numpy.roll(dy,1,axis=0)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"[x,y]","numpy.meshgrid(range(-radius[0],radius[0]+1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"[x,y]","numpy.meshgrid(range(-radius[0],radius[0]+1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"[X,Y]","numpy.meshgrid(np.arange(-100,101)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"[X,Y]","numpy.meshgrid(np.arange(-100,101)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"plt.imshow(I,cmap",matplotlib.pyplot.gray(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
%timeres,"scipy.signal.convolve2d(zebra,sinGabor,mode='valid')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
response,"scipy.signal.convolve2d(sinusoid,sinGabor,mode='valid')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
response2,"scipy.signal.convolve2d(sinusoid,cosGabor,mode='valid')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
response,"scipy.signal.convolve2d(sinusoid,unknownGabor,mode='valid')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
response,"scipy.signal.convolve2d(sinusoid,unknownLoG,mode='valid')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
pldFoldernames,numpy.array(['/'.join(foldername.split('/'),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
BICs,numpy.array(BICs),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
Cs_err,numpy.mean(ResultMCMC['C'][1:]),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
Ds_err,numpy.mean(ResultMCMC['D'][1:]),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
Cs_err,numpy.mean(ResultMCMC['C'][1:]),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
Ds_err,numpy.mean(ResultMCMC['D'][1:]),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
modes,numpy.sort([x[0].split('/'),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
modes,"numpy.append(modes,np.sort([x[0].split('/')",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
ResultMCMC,numpy.load(savepath),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
ResultMCMC,numpy.load(savepath),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
dataframe,pandas.read_csv(filename),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
kfold,"sklearn.model_selection.KFold(n_splits=10,random_state=7)",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
results,"sklearn.model_selection.cross_val_score(model,X,Y,cv=kfold)",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
model,sklearn.discriminant_analysis.LinearDiscriminantAnalysis(),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
dummies,pandas.get_dummies(data[feature]),CLUSTER_0,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
data,"pandas.merge(data,dummies,left_index=True,right_index=True)",CLUSTER_0,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
data,pandas.read_csv('./data/diamonds.csv'),CLUSTER_0,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
bx_plot,seaborn.boxplot(data=data_norm),CLUSTER_0,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
pair_plot,seaborn.pairplot(numerical_data[vars_diamonds[:num_vars_to_show]+target_diamonds]),CLUSTER_0,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
core_samples_mask,"numpy.zeros_like(db.labels_,dtype=bool)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
data,numpy.float32((np.concatenate(clusters_x),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
data,numpy.float32((np.concatenate(clusters_x),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(12,6)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(12,6)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
db,"sklearn.cluster.DBSCAN(eps=max_distance,min_samples=10)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
dataframe_1,"pandas.DataFrame(x_train_res,columns=['gender','age','diabetes','hypertension','heartdisease','smokinghistory','BMI'])",CLUSTER_27,CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0
dataframe_2,"pandas.DataFrame(y_train_res,columns=['stroke'])",CLUSTER_27,CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0
df_combined,pandas.concat(all_frames),CLUSTER_27,CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0
ind,numpy.array(range(len(categories),CLUSTER_27,CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0
ind,numpy.array(range(len(categories),CLUSTER_27,CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0
"X_train,X_test,Y_train,Y_test","sklearn.model_selection.train_test_split(X,Y,test_size=0.1,random_state=0)",CLUSTER_27,CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0
"fpr,tpr,_","sklearn.metrics.roc_curve(y_test,y_score)",CLUSTER_27,CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_27,CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(10,6)",CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(10,6)",CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
mask,numpy.where(np.isnan(injectedflux),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
mask,numpy.where(np.isnan(F),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
error,numpy.ones_like(flux),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
index,numpy.argmax(bls_power.power),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
index,numpy.argmax(bls_power.power),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
minP,numpy.log10(0.1);maxP=numpy.log10(3),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
sinewave,numpy.sin(time*frequency+offset),CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
time,"numpy.linspace(0.1,27.2,points)",CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
durations,"numpy.linspace(minDur,maxDur,25)",CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
durations,"numpy.linspace(minDur,maxDur,25)",CLUSTER_23,CLUSTER_0,CLUSTER_12,CLUSTER_0,CLUSTER_1
series,pandas.DataFrame(all_places),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,pandas.read_csv('vk.csv'),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,pandas.read_csv('vk.csv'),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,pandas.read_csv('vk.csv'),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(1,2,figsize=(14,5)",CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
a,datetime.datetime.fromtimestamp(a),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
year_ago,datetime.datetime.now(),CLUSTER_8,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
lengths,"pandas.DataFrame(lengths,columns=['counts'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
pad_questions_batch,"numpy.array(pad_sentence_batch(questions_batch,questions_vocab_to_int)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
pad_answers_batch,"numpy.array(pad_sentence_batch(answers_batch,answers_vocab_to_int)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
batch_shell,"numpy.zeros((batch_size,max_line_length)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""i'm"",""iam"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""he's"",""heis"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""she's"",""sheis"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""it's"",""itis"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""that's"",""thatis"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""what's"",""thatis"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""where's"",""whereis"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""how's"",""howis"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""\'ll"",""will"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""\'ve"",""have"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""\'re"",""are"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""\'d"",""would"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""\'re"",""are"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""won't"",""willnot"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""can't"",""cannot"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""n't"",""not"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""n'"",""ng"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""'bout"",""about"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""'til"",""until"",text)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
text,"re.sub(r""[-()",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
start_time,time.time(),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
end_time,time.time(),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
start_time,time.time(),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
end_time,time.time(),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ind,numpy.arange(10),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
ind,numpy.arange(9),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
mushrooms,pandas.read_csv('../input/mushrooms.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(12,8)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(12,8)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
first_legend,"matplotlib.pyplot.legend(patches1,['edible','poisonous'],loc=""upperleft"",fontsize=15)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
second_ledgend,"matplotlib.pyplot.legend(patches2,pop_labels,loc=""best"",fontsize=13)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
first_legend,"matplotlib.pyplot.legend(patches1,['edible','poisonous'],loc=""upperleft"",fontsize=15)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
second_ledgend,"matplotlib.pyplot.legend(patches2,hab_labels,loc=""best"",fontsize=13)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"patches,texts,autotexts","matplotlib.pyplot.pie(pop_size,explode=explode,labels=pop_labels,colors=colors,
autopct='%1.1f%%',shadow=True,startangle=150)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"patches1,texts1","matplotlib.pyplot.pie(combine_ed_poi,radius=2,labels=percentages_e_p,
colors=['
foriinrange(0,len(texts1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"patches2,texts2,autotexts2","matplotlib.pyplot.pie(pop_size,colors=colors,radius=1.5,
autopct='%1.2f%%',shadow=True,startangle=150,labeldistance=2.2)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"patches,texts,autotexts","matplotlib.pyplot.pie(hab_size,explode=explode,labels=hab_labels,colors=colors,
autopct='%1.1f%%',shadow=True,startangle=360)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"patches1,texts1","matplotlib.pyplot.pie(combine_ed_poi,radius=2,labels=percentages_e_p,
colors=['
foriinrange(0,len(texts1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"patches2,texts2,autotexts2","matplotlib.pyplot.pie(hab_size,colors=colors,radius=1.5,
autopct='%1.2f%%',shadow=True,startangle=150,labeldistance=2.2)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,7)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(12,7)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,7)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(12,7)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.subplots(figsize=(13,8)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.subplots(figsize=(13,8)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
ifX[c].dtype,=numpy.dtype('?'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
self.fill,pandas.Series([X[c].value_counts(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_data,"pandas.read_csv('../data/census-income.data.csv',header=None,names=features)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"training_data,testing_data,training_labels,testing_labels","sklearn.model_selection.train_test_split(train_data[key_features],labels,random_state=1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
random_forest_classifier,sklearn.ensemble.RandomForestClassifier(random_state=1),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
json_data,json.load(json_file),CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
allLocationFrame,pandas.DataFrame(columns=columns),CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
locationFrame,"pandas.DataFrame(index=index,columns=columns)",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
locationsOnly['dbscanLabels1'],pandas.DataFrame(dbscan_labels),CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
allLocationFrame,"pandas.concat([allLocationFrame,locationFrame])",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
locationsOnly['lat'],pandas.to_numeric(locationsOnly['lat']),CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
locationsOnly['lng'],pandas.to_numeric(locationsOnly['lng']),CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dbscan,"sklearn.cluster.DBSCAN(eps=0.02,min_samples=3)",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clean_train_dataset,pandas.get_dummies(cars_price),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
test_dataset,pandas.get_dummies(cars_price),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
cars_price,pandas.read_csv('data/cars_test.csv'),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
training_dataset,pandas.read_csv('data/clean_train_dataset.csv'),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
submission,pandas.read_csv('data/cars_test.csv'),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
cars_price['year'],"pandas.to_numeric(cars_price['year'],errors='coerce')",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
cars_model,sklearn.linear_model.LinearRegression(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
Vprobe,"numpy.arange(-120,60)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Irec_target,"numpy.array([
I[Kv14.rec_limits[0]:Kv14.rec_limits[0]+tmax]
-a.params['I_leak'](V[Kv14.rec_limits[0]:Kv14.rec_limits[0]+tmax],g)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Irec2_target,"numpy.array([
I[a.rec2.tail_cut:a.rec2.tail_cut+t2max]
-a.params['I_leak'](V[a.rec2.tail_cut:a.rec2.tail_cut+t2max],g)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Vhold,numpy.array([np.median(voltage[:Kv14.rec_step_t0]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Vhold2,numpy.array([np.median(voltage[:Kv14.rec2_prepulse]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
rec_states,numpy.zeros((len(a.rec.voltage),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
rec2_states,numpy.zeros((len(a.rec2.voltage),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
rec_states,numpy.zeros((len(a.rec.voltage),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
rec2_states,numpy.zeros((len(a.rec2.voltage),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
pA,"numpy.concatenate(((-80.,0.022,0.092)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Irec,numpy.reshape([(voltage[Kv14.rec_limits[0]+t]-p[0]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Irec2,numpy.reshape([(voltage[a.rec2.tail_cut+t]-p[0]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Irec_slow,numpy.reshape([(voltage[Kv14.rec_limits[0]+t]-p[0]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Irec_fast,numpy.reshape([(voltage[Kv14.rec_limits[0]+t]-p[0]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Irec2_slow,numpy.reshape([(voltage[a.rec2.tail_cut+t]-p[0]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Irec2_fast,numpy.reshape([(voltage[a.rec2.tail_cut+t]-p[0]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
fits[i],"scipy.optimize.least_squares(residuals,pA,
args=(a,hold_voltages,targets,currents)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
start,time.time(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
W,"numpy.array([[a,0,-b,0],[0,a,0,-b],
[a,0,-d,0],[0,a,0,-d]])",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
poincaresection,numpy.array(poincaresection),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
hdatas,numpy.array(datas),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
N0arr,numpy.array(list(N0),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
N1arr,numpy.array(list(N1),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
N00arr,numpy.array(list(N00),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
N11arr,numpy.array(list(N11),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
Wp,"numpy.zeros((N,N)",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
datas,"numpy.zeros((P,int(.5/dt)",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
datas2,numpy.zeros((len(sinits),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(5,5)",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(5,5)",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(5,5)",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(5,5)",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(5,5)",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
"fig,ax",matplotlib.pyplot.subplots(dpi=141),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
"fig,ax",matplotlib.pyplot.subplots(dpi=141),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
"fig,ax",matplotlib.pyplot.subplots(dpi=141),CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
x,"scipy.optimize.broyden2(F,[.99]*4,f_tol=1e-15)",CLUSTER_2,CLUSTER_8,CLUSTER_9,CLUSTER_0,CLUSTER_1
x,"numpy.arange(0,100)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"fig,axes","matplotlib.pyplot.subplots(nrows=1,ncols=2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"fig,axes","matplotlib.pyplot.subplots(nrows=1,ncols=2,figsize=(12,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
resp,"requests.get(url,params=params)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
resp,"requests.get(url,params=params)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
resp,"requests.get(url,params)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
pca,sklearn.decomposition.PCA(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
pca_updated,"sklearn.decomposition.PCA(n_components=658,whiten=True)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
rf,sklearn.ensemble.RandomForestClassifier(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
pd,pandas.DataFrame(cls_predict_names),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
media['Lag_Views'],"numpy.roll(media['Views_show'],1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
media,pandas.read_csv('Data/mediacompany.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
media['Date'],pandas.to_datetime(media['Date']),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
d0,"datetime.date(2017,2,28)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lm,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mse,"sklearn.metrics.mean_squared_error(media.Views_show,Predicted_views)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mse,"sklearn.metrics.mean_squared_error(media.Views_show,Predicted_views)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
r_squared,"sklearn.metrics.r2_score(media.Views_show,Predicted_views)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
r_squared,"sklearn.metrics.r2_score(media.Views_show,Predicted_views)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,"pandas.read_csv(dataset,encoding='latin-1')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
entex_scale_up,"pandas.concat([entex_scale_up_male,entex_scale_up_female])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
entex_scale_up_male,"pandas.read_excel(
entex_production_url,
sheetname=""EN-TEXScale-Up(Male)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
entex_scale_up_female,"pandas.read_excel(
entex_production_url,
sheetname=""EN-TEXScale-Up(Female)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
out_df,"pandas.DataFrame({""qid"":test_df[""qid""].values})",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
train_df,"pandas.read_csv(""../input/train.csv"")",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
test_df,"pandas.read_csv(""../input/test.csv"")",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
"train_df,val_df","sklearn.model_selection.train_test_split(train_df,test_size=0.1,random_state=2018)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.f1_score(val_y,(pred_glove_val_y>thresh)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
tips,"pandas.read_csv(""https://raw.githubusercontent.com/mwaskom/seaborn-data/master/tips.csv"")",CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
tips,"pandas.read_csv(""https://raw.githubusercontent.com/mwaskom/seaborn-data/master/tips.csv"")",CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
tips,"seaborn.load_dataset(""tips"")",CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
human_files,"numpy.array(glob(""/data/lfw/*/*"")",CLUSTER_26,CLUSTER_7,CLUSTER_11,CLUSTER_30,CLUSTER_8
dog_files,"numpy.array(glob(""/data/dog_images/*/*/*"")",CLUSTER_26,CLUSTER_7,CLUSTER_11,CLUSTER_30,CLUSTER_8
correct+,numpy.sum(np.squeeze(pred.eq(target.data.view_as(pred),CLUSTER_26,CLUSTER_7,CLUSTER_11,CLUSTER_30,CLUSTER_8
rocr_100_df,pandas.DataFrame(rocr_100),CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,pandas.Series(ma10),CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
n,pandas.Series(new),CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
new_index,"pandas.date_range(""20170103"",periods=len(s)",CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data,"pandas.read_excel('sz50.xlsx',sheetname=None,index_col='datetime')",CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
_,"matplotlib.pyplot.figure(figsize=(15,7)",CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
_,"matplotlib.pyplot.figure(figsize=(15,7)",CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
_,matplotlib.pyplot.legend(data.keys(),CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
_,matplotlib.pyplot.plot(n),CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
_,matplotlib.pyplot.plot(s),CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
_,"matplotlib.pyplot.plot(rocr_100_df.iloc[:,:5])",CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
_,"matplotlib.pyplot.xlabel(""Data"")",CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
_,"matplotlib.pyplot.ylabel(""ROCR100_5"")",CLUSTER_5,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data_df,pandas.read_csv('test.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_1
log_price,numpy.log(data_cleaned['Price']),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
vif,pandas.DataFrame(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
raw_data,pandas.read_csv('1.04.Real-lifeexample.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"f,(ax1,ax2,ax3)","matplotlib.pyplot.subplots(1,3,sharey=True,figsize=(15,3)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"f,(ax1,ax2,ax3)","matplotlib.pyplot.subplots(1,3,sharey=True,figsize=(15,3)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(10,10)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(10,10)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
voltage1,numpy.array([x[0]+1j*x[1]forxintemp]),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
voltage2,numpy.array([x[2]+1j*x[3]forxintemp]),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lims,"numpy.array([[P*pr-lim,P*pr+lim],[-P*pi-lim,-P*pi+lim]])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lims,"numpy.array([[P*pr-lim,P*pr+lim],[-P*pi-lim,-P*pi+lim]])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
m,numpy.zeros(4),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
sim_mean_real,numpy.mean(lag_estimate.real),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
sim_mean_imag,numpy.mean(lag_estimate.imag),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
sim_covar,numpy.mean([(x.real-sim_mean_real),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lag_estimate,numpy.sum(np.conj(voltage1),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
sim_var_real,numpy.var(lag_estimate.real),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
sim_var_imag,numpy.var(lag_estimate.imag),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lag_estimate,numpy.conj(voltage1),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
pi,numpy.sqrt(p**2-pr**2),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
h5,"pandas.HDFStore('./source/vstoxx_data_31032014.h5','r')",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
v,"numpy.arange(1,6)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
SPY['Regime'],"numpy.where(SPY['42-252']>SD,1,0)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
SPY['Regime'],"numpy.where(SPY['42-252']<-SD,-1,SPY['Regime'])",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
SPY['Market'],numpy.log(SPY['Close']/SPY['Close'].shift(1),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
j,numpy.arange(n),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t,"numpy.arange(0,1e2,1e-2)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
x,"numpy.arange(0,1e2,1e-2)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t,"numpy.arange(1e-3,1e6,1e-1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
e,numpy.exp(1),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
the,"numpy.heaviside(tmxv,1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
b,numpy.sqrt(a**2-kap*k2),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
b,numpy.sqrt(a**2-kap*k2),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
b,numpy.sqrt(a**2-kap*k2),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
x,"numpy.linspace(0,100,1000)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t,"numpy.linspace(0,100,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t0,"numpy.geomspace(0.5,10,10)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t1,"numpy.geomspace(8e-1,500,10)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
data,sklearn.datasets.load_files(path),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
dog_files,numpy.array(data['filenames']),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
human_files,"numpy.array(glob(""lfw/*/*"")",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
test_accuracy,"100*np.sum(np.array(dog_breed_predictions)==numpy.argmax(test_targets,axis=1)",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
test_accuracy,"100*np.sum(np.array(VGG16_predictions)==numpy.argmax(test_targets,axis=1)",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
test_accuracy,"100*np.sum(np.array(my_ResNet50_predictions)==numpy.argmax(test_targets,axis=1)",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
humans_in_human,numpy.sum([face_detector(i),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
humans_in_dog,numpy.sum([face_detector(i),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
dogs_in_human,numpy.sum([dog_detector(i),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
dogs_in_dog,numpy.sum([dog_detector(i),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
bottleneck_features,numpy.load('bottleneck_features/DogVGG16Data.npz'),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
bottleneck_features,numpy.load('bottleneck_features/DogResnet50Data.npz'),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
fig,"matplotlib.pyplot.figure(figsize=(20,2)",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
fig,"matplotlib.pyplot.figure(figsize=(20,2)",CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
_,matplotlib.pyplot.imshow(img),CLUSTER_22,CLUSTER_12,CLUSTER_11,CLUSTER_5,CLUSTER_9
res,requests.get(endpoint+'?fsym=BTC&tsym=USD&limit=2000'),CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,figsize=(16,9)",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(21,9)",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(18,9)",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
corr,"numpy.corrcoef(actual_returns,predicted_returns)",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
corr,"numpy.corrcoef(shifted_actual,shifted_predicted)",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
bitcoin_history_prices,pandas.DataFrame(json.loads(res.content),CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
preds,"pandas.Series(index=targets.index,data=preds)",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
bitcoin_history_prices.index,"pandas.to_datetime(bitcoin_history_prices.index,unit='s')",CLUSTER_27,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
list_all_t1_files,"os.listdir(""..\\dataset"")",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,6)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,6)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(4,3)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(4,3)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(4,3)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(1,2,figsize=(8,3)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,(ax1,ax2)","matplotlib.pyplot.subplots(ncols=2,figsize=(8,4)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
resampled_image_value,"numpy.where(resampled_image<0,0,resampled_image)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
aseg_image_min,"numpy.where(aseg_image>0,-1,1)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
resampled_image_value_min,numpy.where((resampled_image_value*aseg_image_min),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
x,numpy.where((resampled_image_value>0),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
x,numpy.where((resampled_image_value>0),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
x,numpy.where((resampled_image_value>0),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
markers,numpy.zeros_like(x),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
r,numpy.sin(np.exp((numpy.sin(x),CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
clustering,"sklearn.cluster.DBSCAN(eps=3,min_samples=2)",CLUSTER_29,CLUSTER_0,CLUSTER_1,CLUSTER_0,CLUSTER_0
number_start,re.compile('^\d\d\d\d'),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,random_state=42,stratify=y)",CLUSTER_1,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_1
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_1,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_1
enc,sklearn.preprocessing.OneHotEncoder(sparse=False),CLUSTER_1,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_1
svm,sklearn.svm.SVC(kernel='linear'),CLUSTER_1,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_1
encode_df,pandas.DataFrame(enc.fit_transform(tele_df[tele_cat]),CLUSTER_1,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_1
tele_df,pandas.read_csv('bank_telemarketing.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_1
df1,"pandas.DataFrame({'A':['A0','A1','A2','A3'],
'B':['B0','B1','B2','B3'],
'C':['C0','C1','C2','C3'],
'D':['D0','D1','D2','D3']},
index=[0,1,2,3])",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df2,"pandas.DataFrame({'A':['A4','A5','A6','A7'],
'B':['B4','B5','B6','B7'],
'C':['C4','C5','C6','C7'],
'D':['D4','D5','D6','D7']},
index=[4,5,6,7])",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df3,"pandas.DataFrame({'A':['A8','A9','A10','A11'],
'B':['B8','B9','B10','B11'],
'C':['C8','C9','C10','C11'],
'D':['D8','D9','D10','D11']},
index=[8,9,10,11])",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
left,"pandas.DataFrame({'key':['K0','K1','K2','K3'],
'A':['A0','A1','A2','A3'],
'B':['B0','B1','B2','B3']})",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
right,"pandas.DataFrame({'key':['K0','K1','K2','K3'],
'C':['C0','C1','C2','C3'],
'D':['D0','D1','D2','D3']})",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
left,"pandas.DataFrame({'key1':['K0','K0','K1','K2'],
'key2':['K0','K1','K0','K1'],
'A':['A0','A1','A2','A3'],
'B':['B0','B1','B2','B3']})",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
right,"pandas.DataFrame({'key1':['K0','K1','K1','K2'],
'key2':['K0','K0','K0','K0'],
'C':['C0','C1','C2','C3'],
'D':['D0','D1','D2','D3']})",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
left,"pandas.DataFrame({'A':['A0','A1','A2'],
'B':['B0','B1','B2']},
index=['K0','K1','K2'])",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
right,"pandas.DataFrame({'C':['C0','C2','C3'],
'D':['D0','D2','D3']},
index=['K0','K2','K3'])",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
labka3,pandas.read_csv('response.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
last_rating,pandas.DataFrame(reviews.groupby('movie_id'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
rating_count_df,"pandas.DataFrame({'avg_rating':avg_ratings,'num_ratings':num_ratings})",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
movies,pandas.read_csv('movies_clean.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
reviews,pandas.read_csv('reviews_clean.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df.columns,"pandas.Series(['Country','Good','Value'])",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
df,pandas.read_excel('enduse_imports.xlsx'),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
vetor2,"numpy.arange(0.,4.5,.5)",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
x,"numpy.arange(1,10,0.25)",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
d,"numpy.arange(1,10)",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
b,numpy.arange(10),CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
vetor1,"numpy.array([0,1,2,3,4,5,6,7,8])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
c,"numpy.array([1+2j,3+4j,5+6*1j])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
b,"numpy.array([True,False,False,True])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
s,"numpy.array(['Python','R','Julia'])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
matriz,"numpy.array([[1,2,3],[4,5,6]])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
x,"numpy.array([1,2])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y,"numpy.array([1.0,2.0])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
z,"numpy.array([1,2],dtype=np.float64)",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
matriz3,"numpy.array([[24,76],[35,89]],dtype=float)",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
A,"numpy.array([15,23,63,94,75])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
a,"numpy.array([1,2,3,4])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
b,"numpy.array([4,2,2,4])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
a,"numpy.array([1.2,1.5,1.6,2.5,3.5,4.5])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
B,"numpy.array([1,2,3,4])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
v,"numpy.array([1,2,3])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
w,"numpy.array([5,6])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
matriz1,"numpy.ones((2,3)",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
b,numpy.around(a),CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
matriz2,numpy.matrix(lista),CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
r,numpy.copy(v),CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
d,"numpy.diag(np.array([1,2,3,4])",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
a,numpy.diag(np.arange(3),CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
z,numpy.eye(3),CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
arquivo,"numpy.loadtxt(filename,delimiter=',',usecols=(0,1,2,3)",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"var1,var2","numpy.loadtxt(filename,delimiter=',',usecols=(0,1)",CLUSTER_23,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
boston_df,pandas.read_csv('data/boston.csv'),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
xmean,numpy.mean(xs),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
xstd,numpy.std(xs),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
boston_df['lstat^4'],"numpy.power(boston_df['lstat'],4)",CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
boston_df['lstat^3'],"numpy.power(boston_df['lstat'],3)",CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
polyline,"numpy.poly1d(np.polyfit(fitted,residuals,2)",CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
reg,sklearn.linear_model.LinearRegression(),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
reg3,sklearn.linear_model.LinearRegression(),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
reg3,sklearn.linear_model.LinearRegression(),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
reg4,sklearn.linear_model.LinearRegression(),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
reg5,sklearn.linear_model.LinearRegression(),CLUSTER_3,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
train_labels,numpy.array([0]*(train_samples//2),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
validation_labels,numpy.array([0]*(validation_samples//2),CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
train_data,"numpy.load(open('models/bottleneck_features_train.npy','rb')",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
validation_data,"numpy.load(open('models/bottleneck_features_validation.npy','rb')",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
grad,numpy.zeros_like(img),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
k,"numpy.outer(k,k)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
img_shift,"numpy.roll(numpy.roll(img,sx,1)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
hw,numpy.float32(img.shape[:2]),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
k,"numpy.float32([1,4,6,4,1])",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
hw,numpy.float32(img.shape[:2]),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
img0,numpy.float32(img0),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
a,"numpy.uint8(np.clip(a,0,1)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
df,"pandas.read_csv(filepath,encoding=""latin-1"")",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
Temp,numpy.arange(Data['Temp'].min(),CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
PAR,numpy.arange(Data['PPFD_Avg'].min(),CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
Area,"numpy.asanyarray([0.021764,0.378160,0.367951,0.105923,0.124064])",CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
Data,pandas.read_csv(DataPath),CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
Data2,pandas.read_csv(DataPath2),CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
Summary,pandas.read_csv(SummaryPath),CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
Summary2,pandas.read_csv(SummaryPath2),CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
"popt_r,pcov","scipy.optimize.curve_fit(R_func,Dark['Temp'],Dark['fco2'],p0=(4.59262144,0.5875255,0.27508822)",CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
"popt_p,pcov","scipy.optimize.curve_fit(P_func,P['PPFD_Avg'],P['GPP'],p0=(.003,12)",CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
Rsq_Resp,"sklearn.metrics.explained_variance_score(Dark['fco2'].values,R_func(Dark['Temp'],*popt_r)",CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
Rsq_GPP,"sklearn.metrics.explained_variance_score(P['GPP'].values,P_func(P['PPFD_Avg'],*popt_p)",CLUSTER_14,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
inc,"random.randrange(1,num_classes)",CLUSTER_2,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
prices,"pandas.DataFrame({""price"":train[""SalePrice""],""log(price+1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
preds,"pandas.DataFrame({""preds"":model_lasso.predict(X_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
predictions,"pandas.DataFrame({""xgb"":xgb_preds,""lasso"":lasso_preds})",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
solution,"pandas.DataFrame({""id"":test.Id,""SalePrice"":preds})",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_ridge,"pandas.Series(cv_ridge,index=alphas)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
coef,"pandas.Series(model_lasso.coef_,index=X_train.columns)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
all_data,"pandas.concat((train.loc[:,'MSSubClass':'SaleCondition'],
test.loc[:,'MSSubClass':'SaleCondition'])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
imp_coef,pandas.concat([coef.sort_values(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
all_data,pandas.get_dummies(all_data),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train,"pandas.read_csv(""../input/house-prices-advanced-regression-techniques/train.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test,"pandas.read_csv(""../input/house-prices-advanced-regression-techniques/test.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xgb_preds,numpy.expm1(model_xgb.predict(X_test),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lasso_preds,numpy.expm1(model_lasso.predict(X_test),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"train[""SalePrice""]","numpy.log1p(train[""SalePrice""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
all_data[skewed_feats],numpy.log1p(all_data[skewed_feats]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rmse,"numpy.sqrt(-cross_val_score(model,X_train,y,scoring=""neg_mean_squared_error"",cv=5)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model_ridge,sklearn.linear_model.Ridge(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model_lasso,"sklearn.linear_model.LassoCV(alphas=[1,0.1,0.001,0.0005])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.zeros((60,512,512,3)",CLUSTER_7,CLUSTER_11,CLUSTER_11,CLUSTER_0,CLUSTER_1
y,"numpy.zeros((60,256,256,1)",CLUSTER_7,CLUSTER_11,CLUSTER_11,CLUSTER_0,CLUSTER_1
target,"numpy.expand_dims(cv2.resize(cv2.imread(y_path+f""{i+1:04d}_gt.pgm"",cv2.IMREAD_GRAYSCALE)",CLUSTER_7,CLUSTER_11,CLUSTER_11,CLUSTER_0,CLUSTER_1
self.fig,matplotlib.pyplot.figure(),CLUSTER_7,CLUSTER_11,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,sharex=True)",CLUSTER_7,CLUSTER_11,CLUSTER_11,CLUSTER_0,CLUSTER_1
"fig,axes","matplotlib.pyplot.subplots(nrows=2,ncols=10,sharex=True,sharey=True,figsize=(20,4)",CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
snv_Table,"pandas.DataFrame(list(zip(n[""snv_vnt_fullname""],Gene_snv,WTAAsnv,s[""codon_snv""],vnt_AA_3code,s[""WTBsnv""],s[""Cdna_snv""],s[""vnt_Bsnv""])",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
FS_Table,"pandas.DataFrame(list(zip(n[""vnt_fullnameFS""],Gene_FS,WTAA_FS,s[""codonFS""],vnt_AA_3codeFS,WTBFS,s[""CdnaFS""],vnt_BFS)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
Splice_Table,"pandas.DataFrame(list(zip(s[""c_splice3""],Gene_spl,s[""WTBspl""],s[""Cdnaspl""],s[""vnt_Bspl""])",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
writer,"pandas.ExcelWriter('Yaeger2018_variants.xlsx',engine='xlsxwriter')",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.read_excel(""Yaeger2018.xlsx"",header=0)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.read_sql_query(sql,db_conn)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
V_name,"re.compile(r""""""c\.(?P<nucltide_pos>\d+)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
V_name1,"re.compile(r""""""c\..\S+"""""")",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
V_name2,"re.compile(r""""""c\.(?P<nucltide_pos>\d*)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
V_name3,"re.compile(r""""""p\.[a-zA-z]+(?P<codon>\d+)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df_feat,"pandas.DataFrame(cancer['data'],columns=cancer['feature_names'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_target,"pandas.DataFrame(cancer['target'],columns=['Cancer'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cancer,sklearn.datasets.load_breast_cancer(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(df_feat,np.ravel(df_target)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,sklearn.svm.SVC(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid,sklearn.model_selection.GridSearchCV(SVC(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
attention_matrix,"numpy.array(response[""matrix""])",CLUSTER_23,CLUSTER_0,CLUSTER_5,CLUSTER_0,CLUSTER_1
Body,json.dumps(payload),CLUSTER_23,CLUSTER_0,CLUSTER_5,CLUSTER_0,CLUSTER_1
Body,json.dumps(payload),CLUSTER_23,CLUSTER_0,CLUSTER_5,CLUSTER_0,CLUSTER_1
response,json.loads(response),CLUSTER_23,CLUSTER_0,CLUSTER_5,CLUSTER_0,CLUSTER_1
response,json.loads(response),CLUSTER_23,CLUSTER_0,CLUSTER_5,CLUSTER_0,CLUSTER_1
policy_sarsa,numpy.array([np.argmax(Q_sarsa[key]),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
policy_sarsamax,numpy.array([np.argmax(Q_sarsamax[key]),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
policy_expsarsa,numpy.array([np.argmax(Q_expsarsa[key]),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
V_opt,"numpy.zeros((4,12)",CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
Qsa_next,"numpy.dot(Q[next_state],policy_s)",CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
policy_s,numpy.ones(nA),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
Q,collections.defaultdict(lambda:np.zeros(nA),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
Q,collections.defaultdict(lambda:np.zeros(nA),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
Q,collections.defaultdict(lambda:np.zeros(nA),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
tmp_scores,collections.deque(maxlen=plot_every),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
avg_scores,collections.deque(maxlen=num_episodes),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
tmp_scores,collections.deque(maxlen=plot_every),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
avg_scores,collections.deque(maxlen=num_episodes),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
tmp_scores,collections.deque(maxlen=plot_every),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
avg_scores,collections.deque(maxlen=num_episodes),CLUSTER_7,CLUSTER_4,CLUSTER_9,CLUSTER_0,CLUSTER_7
chicago_socioeconomic_data,pandas.read_csv('https://data.cityofchicago.org/resource/jcxq-k9xf.csv'),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
plot,"seaborn.jointplot(x=""per_capita_income_"",y=""hardship_index"",data=income_vs_hardship.DataFrame()",CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
n_edges,numpy.count_nonzero(A),CLUSTER_23,CLUSTER_7,CLUSTER_6,CLUSTER_0,CLUSTER_1
n_edges,numpy.count_nonzero(A),CLUSTER_23,CLUSTER_7,CLUSTER_6,CLUSTER_0,CLUSTER_1
pick_idx,numpy.argmin(fc_vals_greedy),CLUSTER_23,CLUSTER_7,CLUSTER_6,CLUSTER_0,CLUSTER_1
delta_l,numpy.minimum(np.maximum(deg-np.max(deg),CLUSTER_23,CLUSTER_7,CLUSTER_6,CLUSTER_0,CLUSTER_1
admm_A,"numpy.minimum(admm_sol['opt_A'],admm_sol['opt_A'].T)",CLUSTER_23,CLUSTER_7,CLUSTER_6,CLUSTER_0,CLUSTER_1
delta_l,numpy.minimum(np.maximum(deg-np.max(deg),CLUSTER_23,CLUSTER_7,CLUSTER_6,CLUSTER_0,CLUSTER_1
delta_l,numpy.minimum(np.maximum(deg-np.max(deg),CLUSTER_23,CLUSTER_7,CLUSTER_6,CLUSTER_0,CLUSTER_1
admm_A,"numpy.minimum(admm_sol['opt_A'],admm_sol['opt_A'].T)",CLUSTER_23,CLUSTER_7,CLUSTER_6,CLUSTER_0,CLUSTER_1
image_id,random.choice(dataset.image_ids),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
ixs,numpy.arange(len(keep),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
roi_class_names,numpy.array(dataset.class_names),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
det_mask_specific,"numpy.array([mrcnn[""masks""][0,i,:,:,c]
fori,cinenumerate(det_class_ids)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
det_masks,"numpy.array([utils.unmold_mask(m,det_boxes[i],image.shape)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
positive_anchor_ix,numpy.where(target_rpn_match[:]==1),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
negative_anchor_ix,numpy.where(target_rpn_match[:]==-1),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
neutral_anchor_ix,numpy.where(target_rpn_match[:]==0),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
det_count,numpy.where(det_class_ids==0),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
roi_positive_ixs,numpy.where(roi_class_ids>0),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
visibilities,"numpy.where(roi_class_ids[ixs]>0,2,1)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
visibilities,"numpy.where(roi_class_ids[roi_positive_ixs][ids]>0,1,0)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
keep,numpy.where(roi_class_ids>0),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
ixs,numpy.where(pre_nms_class_ids==class_id),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
visibilities,"numpy.where(roi_class_ids[keep][ixs]>0,1,0)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
det_count,numpy.where(det_class_ids==0),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
roi_class_ids,"numpy.argmax(mrcnn[""probs""][0],axis=1)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
sorted_anchor_ids,"numpy.argsort(rpn['rpn_class'][:,:,1].flatten()",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
proposals,"numpy.around(mrcnn[""proposals""][0]*np.array([h,w,h,w])",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
keep,"numpy.intersect1d(keep,np.where(roi_scores>=config.DETECTION_MIN_CONFIDENCE)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
keep,"numpy.intersect1d(keep,nms_keep)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
nms_keep,"numpy.union1d(nms_keep,class_keep)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
_,"matplotlib.pyplot.imshow(modellib.unmold_image(activations[""input_image""][0],config)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
"_,ax","matplotlib.pyplot.subplots(rows,cols,figsize=(size*cols,size*rows)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_7,CLUSTER_7
train_horses_fnames,os.listdir(train_horses_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
train_humans_fnames,os.listdir(train_humans_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
validation_horses_fnames,os.listdir(validation_horses_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
validation_humans_fnames,os.listdir(validation_humans_dir),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
doc,pandas.read_csv('../Data(net),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
doc_net,pandas.read_csv('../Data(net),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
edge_creation_prob,numpy.log(n),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
xy,numpy.array(X),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
importances,numpy.sum(np.abs(estimator.coef_),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
x_data,"numpy.delete(X,1,axis=1)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
X_scaled,sklearn.preprocessing.StandardScaler(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
lsvc,"sklearn.svm.LinearSVC(C=0.01,penalty='l1',dual=False)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
model,"sklearn.feature_selection.SelectFromModel(lsvc,prefit=True)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
sfm,sklearn.feature_selection.SelectFromModel(LassoCV(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
kernel,"numpy.array([[0,1,0],[0,1,0],[0,1,0]])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
kernel,"numpy.array([11*[0],11*[1],11*[0]])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
meanValue,numpy.mean(img1_gray),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
res,"numpy.sum(mask,axis=1)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
a,"numpy.uint8(np.clip(a,0,255)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
h_img,"numpy.dstack((filtered_horizontal,filtered_horizontal,filtered_horizontal)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
color_image,"numpy.dstack((img1_gray,img1_gray,img1_gray)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
if((np.sign(svm_1.decision_function(X_test)[i]),=numpy.sign(svm_2.decision_function(X_test),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
and(np.sign(svm_2.decision_function(X_test)[i]),=numpy.sign(svm_3.decision_function(X_test),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_train,pandas.get_dummies(y_train),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
iris,seaborn.load_dataset('iris'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_1,"sklearn.svm.SVC(kernel='rbf',C=5,gamma=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_2,"sklearn.svm.SVC(kernel='rbf',C=5,gamma=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_3,"sklearn.svm.SVC(kernel='rbf',C=5,gamma=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_4,"sklearn.svm.SVC(kernel='rbf',C=5,gamma=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.2,random_state=48)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train_2,X_test_2,y_train_2,y_test_2","sklearn.model_selection.train_test_split(X,y,test_size=0.2,random_state=48)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scal,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
firm_clnd,"re.sub('(\.|,|corporation|incorporated|llc|inc|international|gmbh|ltd)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
file,"re.sub('\/','|',firm_clnd)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
regex,"re.findall(match_string,x)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
regex,"re.findall(r""(CDATA|return\s+true|return\s+false|getelementbyid|function|\w+\(.*?\)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
p,"re.compile(r""(\(\)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
remove_regex,"re.compile(r'^(3m|united|states|menu|en_us|algeternal|s\d+|sarepta|skygen|nexgen|abbott|adlens|errorpage|\d{1,3}|\d{5,}|\w+\d+|\d+\w+|asten|johnson|baker|hughes|ge|bhge|biocon|egfr|gcsf|biocon|pegfilgrastim|bostik|canon|chevron|phillips|coloplast|cyberonics|microsoft|evoqua|ford|hitachi|glucanbio|hunter|douglas|kimberly|clark|lextar|fisher|lockheed|martin|lux|nec|nanocopoeia|cisco|schlumberger|weccamerica|inanobio|nanocomposix|zoetis|zygo)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
header_in,re.compile('(about|company|corporate|who.we.are|(^|/),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
header_regex,re.compile(r'h[1-9]+'),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
strip_regex,"re.compile(r""(""+""\s|"".join(firm_name.split()",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
more_regex,"re.compile(r""([A-Z]\.?)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
df,"pandas.DataFrame(columns=('firm_name','url')",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
ubv_df,"pandas.DataFrame(ubv_matrix,columns=vocab)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
ubv_prediction_df,"pandas.DataFrame(ubv_prediction_matrix,columns=vocab)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
abouts,pandas.DataFrame(index=combined.index),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
df_about_labeled,pandas.read_csv(ABOUT_DIR+'about_pages_labeled_v4.csv'),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
avg_score,numpy.mean(scores),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
X['pages_in_domain_ftr'],numpy.reciprocal(labeled['pages_in_domain_ftr']),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
X_test['pages_in_domain_ftr'],numpy.reciprocal(unlabeled['pages_in_domain_ftr']),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
i,numpy.int64(0),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
eval_df['Accuracy'],numpy.float64(0),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
label_ids,"random.sample(range(1,df.gid.nunique()",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
counter,collections.Counter(df_predict.index),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.2,random_state=0)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
clf,"sklearn.neural_network.MLPClassifier(alpha=0.1,hidden_layer_sizes=(100,)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
scores,"sklearn.model_selection.cross_val_score(clf,X,y)",CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
clf_grid,sklearn.model_selection.GridSearchCV(MLPClassifier(),CLUSTER_9,CLUSTER_3,CLUSTER_9,CLUSTER_23,CLUSTER_7
vec_x,"numpy.array(vec_x,dtype='float64')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.array([1,6,40,5])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.array([1,39,16])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.array([1,c,Fly_ash,Water,Slag,Fine_Aggr,SP])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
D2,numpy.array(D2),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"current_score,best_new_score",numpy.ones(2),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Se_o,numpy.sqrt((1/n+D2_0/(n-1),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Se_p,numpy.sqrt((1+1/n+D2_0/(n-1),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Se_o,numpy.sqrt((1/n+D2/(n-1),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Se_p,numpy.sqrt((1+1/n+D2/(n-1),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cement,"numpy.linspace(130,180,200)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
vec,numpy.asmatrix((vec_x-vec_mean),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Sigma,"numpy.asmatrix(data[[""Walk"",""Size"",""Year""]].cov()",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
inv,numpy.linalg.inv(mat),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_scale_x,"pandas.DataFrame(X_scale,columns=[""x1"",""x2""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_scale_y,"pandas.DataFrame(y_scale,columns=[""y""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,"pandas.read_csv(""data/cl1/Ikebukuro.csv"",delimiter="","",comment=""
print(data.head()",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_scale,sklearn.preprocessing.scale(x),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_scale,sklearn.preprocessing.scale(y),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy_array,"numpy.zeros((1,1,1,1,TRUE_BOX_BUFFER,4)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_5,CLUSTER_3
dummy_array,"numpy.zeros((1,1,1,1,TRUE_BOX_BUFFER,4)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_5,CLUSTER_3
CLASS_WEIGHTS,"numpy.ones(CLASS,dtype='float32')",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_5,CLUSTER_3
size,numpy.prod(norm_layer.get_weights(),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_5,CLUSTER_3
input_image,"numpy.expand_dims(input_image,0)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_5,CLUSTER_3
input_image,"numpy.expand_dims(input_image,0)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_5,CLUSTER_3
position,numpy.cumsum(step),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y,numpy.sin(x),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
x,"numpy.logspace(-2,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
x,"numpy.linspace(-3,3)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
arr,numpy.array(im),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_9
imgA,"numpy.moveaxis(imgA,2,0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_9
imgB,"numpy.moveaxis(imgB,2,0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_9
int_X,"numpy.moveaxis(int_X.reshape(-1,3,imageSize,imageSize)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_9
int_X,"numpy.moveaxis(int_X.reshape(-1,3,imageSize,imageSize)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_9
dataA,numpy.float32(dataA),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_9
dataB,numpy.float32(dataB),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_9
t0,time.time(),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_9
IX1,numpy.array(dfx['PC1_2d'][dfx['outlier']==0]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
IX2,numpy.array(dfx['PC2_2d'][dfx['outlier']==0]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
n_outliers,numpy.count_nonzero(y_pred==1),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_act[cols[0]],numpy.log(df_act[cols[0]]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_act[cols[2]],numpy.log(df_act[cols[2]]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_act[cols[4]],numpy.log(df_act[cols[4]]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_act[cols[6]],numpy.log(df_act[cols[6]]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_act[cols[9]],numpy.log(df_act[cols[9]]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_act[cols[10]],numpy.log(df_act[cols[10]]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_act[cols[11]],numpy.log(df_act[cols[11]]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.linspace(0,1,200)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_final,pandas.DataFrame(scaler.fit_transform(df_act),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
PCs_2d,pandas.DataFrame(pca_2d.fit_transform(df_final),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
dfx,"pandas.concat([dfx,PCs_2d],axis=1,join='inner')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('AirQualityUCI.csv',sep=';',decimal=',',parse_dates=[['Date','Time']])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
threshold,"scipy.stats.scoreatpercentile(scores_pred,100*outliers_fraction)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca_2d,sklearn.decomposition.PCA(n_components=2),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
epochs_hist,"numpy.arange(1,epochs+1)",CLUSTER_18,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(path,delim_whitespace=True,header=None)",CLUSTER_18,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(12,6)",CLUSTER_18,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_0
ensemble,pandas.DataFrame(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"ensemble[""log_output_one""]",pandas.DataFrame(clf1_logreg_fit.predict_proba(x_train),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"ensemble[""dtr_output_one""]",pandas.DataFrame(clf2_dt_fit.predict_proba(x_train),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"ensemble[""rf_output_one""]",pandas.DataFrame(clf3_rf_fit.predict_proba(x_train),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"ensemble[""adb_output_one""]",pandas.DataFrame(clf4_adabst_fit.predict_proba(x_train),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ensemble_test,pandas.DataFrame(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"ensemble_test[""log_output_one""]",pandas.DataFrame(clf1_logreg_fit.predict_proba(x_test),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"ensemble_test[""dtr_output_one""]",pandas.DataFrame(clf2_dt_fit.predict_proba(x_test),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"ensemble_test[""rf_output_one""]",pandas.DataFrame(clf3_rf_fit.predict_proba(x_test),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"ensemble_test[""adb_output_one""]",pandas.DataFrame(clf4_adabst_fit.predict_proba(x_test),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
hrattr_data_new,"pandas.concat([dummy_busnstrvl,dummy_dept,dummy_edufield,dummy_gender,dummy_jobrole,
dummy_maritstat,dummy_overtime,hrattr_continuous,hrattr_data['Attrition_ind']],axis=1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ensemble,"pandas.concat([ensemble,pd.DataFrame(y_train)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ensemble_test,"pandas.concat([ensemble_test,pd.DataFrame(y_test)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy_busnstrvl,"pandas.get_dummies(hrattr_data['BusinessTravel'],prefix='busns_trvl')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy_dept,"pandas.get_dummies(hrattr_data['Department'],prefix='dept')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy_edufield,"pandas.get_dummies(hrattr_data['EducationField'],prefix='edufield')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy_gender,"pandas.get_dummies(hrattr_data['Gender'],prefix='gend')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy_jobrole,"pandas.get_dummies(hrattr_data['JobRole'],prefix='jobrole')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy_maritstat,"pandas.get_dummies(hrattr_data['MaritalStatus'],prefix='maritalstat')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy_overtime,"pandas.get_dummies(hrattr_data['OverTime'],prefix='overtime')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
hrattr_data,"pandas.read_csv(""WA_Fn-UseC_-HR-Employee-Attrition.csv"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"x_train,x_test,y_train,y_test","sklearn.model_selection.train_test_split(hrattr_data_new.drop(['Attrition_ind'],axis=1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dtree,"sklearn.tree.DecisionTreeClassifier(criterion='gini',max_depth=1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf2_dt_fit,"sklearn.tree.DecisionTreeClassifier(criterion=""gini"",max_depth=5,min_samples_split=2,
min_samples_leaf=1,random_state=42,class_weight=clwght)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf4_dtree,"sklearn.tree.DecisionTreeClassifier(criterion='gini',max_depth=1,class_weight=clwght)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
eoe_dtree,"sklearn.tree.DecisionTreeClassifier(criterion='gini',max_depth=1,class_weight=clwght)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
adabst_fit,"sklearn.ensemble.AdaBoostClassifier(base_estimator=dtree,
n_estimators=5000,learning_rate=0.05,random_state=42)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf4_adabst_fit,"sklearn.ensemble.AdaBoostClassifier(base_estimator=clf4_dtree,
n_estimators=5000,learning_rate=0.05,random_state=42)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
eoe_adabst_fit,"sklearn.ensemble.AdaBoostClassifier(base_estimator=eoe_dtree,
n_estimators=500,learning_rate=0.05,random_state=42)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbc_fit,"sklearn.ensemble.GradientBoostingClassifier(loss='deviance',learning_rate=0.05,n_estimators=5000,
min_samples_split=2,min_samples_leaf=1,max_depth=1,random_state=42)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf1_logreg_fit,"sklearn.linear_model.LogisticRegression(fit_intercept=True,class_weight=clwght)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
meta_logit_fit,sklearn.linear_model.LogisticRegression(fit_intercept=False),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf3_rf_fit,"sklearn.ensemble.RandomForestClassifier(n_estimators=10000,criterion=""gini"",max_depth=6,
min_samples_split=2,min_samples_leaf=1,class_weight=clwght)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
bag_fit,"sklearn.ensemble.BaggingClassifier(base_estimator=eoe_adabst_fit,n_estimators=50,
max_samples=1.0,max_features=1.0,
bootstrap=True,
bootstrap_features=False,
n_jobs=-1,
random_state=42)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
n,"numpy.arange(0,N)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
K,"numpy.arange(2,31,1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X,numpy.array([image2act[img]forimginsorted(image2act.keys(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X,numpy.array([image2act[img]forimginsorted(image2subcat.keys(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X,numpy.array([image2act[img]forimginsorted(image2supcat.keys(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
table,numpy.array([sorted(image2emb.keys(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X,numpy.array([x[2]forxinX_all]),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
Y_all,"numpy.argmax(onehot_all,axis=1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
errsum,numpy.cumsum(error),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
stimlist,"numpy.loadtxt(stimlistfile,dtype=str)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
activations,"numpy.load(actfile,allow_pickle=True)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X_all,numpy.load('X_all.npy'),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
onehot_all,numpy.load('Y_all.npy'),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(20,20)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(20,20)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(20,20)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(6,4)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(6,4)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(20,20)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(10,10)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X_emb,"sklearn.manifold.TSNE(n_components=2,verbose=1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X_emb,"sklearn.manifold.TSNE(n_components=2,verbose=1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X_emb,"sklearn.manifold.TSNE(n_components=2,verbose=1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
X_emb,"sklearn.manifold.TSNE(n_components=2,verbose=1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
catcount,collections.Counter(image2subcat.values(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
catcount,collections.Counter(image2supcat.values(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
kmeans,sklearn.cluster.KMeans(n_clusters=k),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
kmeans,sklearn.cluster.KMeans(n_clusters=bestK),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
df,"pandas.DataFrame(data=table,columns=['ImgName','ClusterNum','Category'])",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_6,CLUSTER_0
dframe_efTekme,"pandas.read_excel(""eintrachtFrankfurtTekme.xls"")",CLUSTER_0,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
dframe_ef,"pandas.read_excel(""efPlayers.xls"")",CLUSTER_0,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
data,pandas.read_csv(PATH_TO_W_DATA),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
Z,numpy.arange(8),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
data,"numpy.array([0,1,2,3,4,5,6,7,8,9,5])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
training_inputs,numpy.array(tr_d[0][:]),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
training_results,numpy.array(tr_d[1][:]),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
validation_inputs,numpy.array(va_d[0][:]),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
validation_results,numpy.array(va_d[1][:]),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
test_inputs,numpy.array(te_d[0][:]),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
test_results,numpy.array(te_d[1][:]),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Z,"numpy.array([1,3,-1,-4,-5,7,9,18])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Z,"numpy.array([[11,19,10],[12,21,23]])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
H_prev,"numpy.array([[1,0,5,10,2],[2,5,3,10,2]])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
W_sample,"numpy.array([[10,5],[2,0],[1,0]])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
b_sample,"numpy.array([10,5,0])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
dZ,"numpy.array(dH,copy=True)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
H_prev,"numpy.array([[1,0,5,10,2],[2,5,3,10,2]])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
W_sample,"numpy.array([[10,5],[2,0],[1,0]])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
b_sample,"numpy.array([10,5,0])",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
new_array,"numpy.zeros((10,n)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
parameters['b'+str(l)],"numpy.zeros((dimensions[l],1)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Z,"numpy.dot(W,H_prev)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Z,"numpy.dot(W,H_prev)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Z,"numpy.dot(W,H_prev)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
t1,"numpy.dot(W_sample,H_prev)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
t2,"numpy.dot(parameters[""W1""],x_sample)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
dH_prev,numpy.matmul((W.T),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
dH_prev,numpy.matmul((W.T),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"gradients[""dH""+str(L-1)]","numpy.matmul(W.T,dZ)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"gradients[""dW""+str(L)]","numpy.matmul(dZ,H_prev.T)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
p,"numpy.argmax(probas,axis=0)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
act,"numpy.argmax(y,axis=0)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
loss,numpy.squeeze(loss),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Z_sum,"numpy.sum(Z_exp,axis=0,keepdims=True)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Z_exp,numpy.exp(Z),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
H,"numpy.maximum(0,Z)",CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
y,pandas.DataFrame(train_set_y),CLUSTER_3,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Xval,"numpy.arange(0,7)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
T,"numpy.arange(self.Lrange,self.Urange)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
data,"pandas.DataFrame(self.samples,columns=['omega0','omega1','omega2','omega3','Lam'])",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
msk,"numpy.where(msk==255,1,np.nan)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
inventario,"numpy.where(inventario==1,0,inventario)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
inventario,"numpy.where(inventario==2,1,inventario)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
pendiente,"numpy.where(pendiente==-3.4028234663852886e+38,np.nan,pendiente)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
geologia,"numpy.where(geologia==-9999.,np.nan,geologia)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
geologia_c,"numpy.where(geologia==15,cont,geologia)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
geologia_c,"numpy.where(geologia_c==18,cont,geologia_c)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wp_a,numpy.log((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wn_a,numpy.log((x2/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
c,numpy.log(((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wp_a,numpy.log((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wn_a,numpy.log((x2/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cont,numpy.log(((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wp_a,numpy.log((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wn_a,numpy.log((x2/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cont,numpy.log(((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wp_a,numpy.log((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wn_a,numpy.log((x2/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cont,numpy.log(((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wp_a,numpy.log((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wn_a,numpy.log((x2/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cont,numpy.log(((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wp_a,numpy.log((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wn_a,numpy.log((x2/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cont,numpy.log(((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wp_a,numpy.log((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
wn_a,numpy.log((x2/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cont,numpy.log(((x1/(x1+x2),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
geologia,"numpy.loadtxt('G:/MyDrive/ANALISISESPACIALAPLICADO/datos/raster/gamma.asc',skiprows=6)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,pandas.DataFrame({'geologia':geologia_vector}),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
pendiente_serie,pandas.Series(pendiente_vector_MenM),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
im,numpy.load('/media/ubuntu/DATA/PARKING_239/WORK/mean.npy'),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
im,numpy.load('/media/ubuntu/DATA/PARKING_239/WORK/std.npy'),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
plo,"pandas.crosstab(df['Churn'],df['Customerservicecalls'])",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('C:\\Users\\m1043057\\Documents\\PythonScripts\\DataSets\\telecom_churn.csv'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
batch_x,"numpy.ndarray(shape=(5,32,32,3)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
labels,"numpy.array([0,40,9,38,41])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
total_accuracy,numpy.sum(predicted==labels),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
n_classes,numpy.unique(y_train),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
index,"random.randint(0,n_train)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
index,"random.randint(0,n_train)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
ax,"matplotlib.pyplot.subplot(N/5,5,i+1)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
ax,"matplotlib.pyplot.subplot(2,3,i+1)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
files,os.listdir(directory),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_2,CLUSTER_3
"v[""dW""+str(l+1)]","numpy.zeros_like(parameters[""W""+str(l+1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"v[""db""+str(l+1)]","numpy.zeros_like(parameters[""b""+str(l+1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"v[""dW""+str(l+1)]","numpy.zeros_like(parameters[""W""+str(l+1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"v[""db""+str(l+1)]","numpy.zeros_like(parameters[""b""+str(l+1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"s[""dW""+str(l+1)]","numpy.zeros_like(parameters[""W""+str(l+1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"s[""db""+str(l+1)]","numpy.zeros_like(parameters[""b""+str(l+1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
axes,matplotlib.pyplot.gca(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
axes,matplotlib.pyplot.gca(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
axes,matplotlib.pyplot.gca(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
num_complete_minibatches,math.floor(m/mini_batch_size),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
M_bins,"numpy.arange(M[12],M[-1],.1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
x,"numpy.arange(0,hdr['NAXIS1'],1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mags,"numpy.array([18.06,16.88,16.23,15.81,15.69])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mag_errs,"numpy.array([0.02,0,0,0,0.01])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
cents,"numpy.array([3551,4686,6165,7481,8931])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
spec,numpy.array(data[0]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
spec_err,numpy.array(data[2]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
corrs,numpy.zeros(len(M_bins),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
idx,numpy.where((M_tab['MEDIAN']>0),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
idx,numpy.where((M>M_bins[i]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
good,numpy.where(corrs!=0),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
L_L,"numpy.logspace(-2,1,100)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
corrs[i],"numpy.corrcoef(Z[idx],S[idx])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"[[a],[u]]","numpy.dot(numpy.dot(np.linalg.inv(numpy.dot(B.T,B)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
B,"numpy.append(-z1,np.ones_like(z1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
r,"pandas.DataFrame(r,index=['Min','Max','Mean','STD'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,pandas.read_csv(inputfile),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,pandas.read_csv(inputfile),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
data2,"pandas.read_excel(inputfile2,index_col=0)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,"sklearn.linear_model.Lasso(alpha=0.1,max_iter=100000)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
tw_avg_wd,pandas.DataFrame(aver['wd']),CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
zms_grids_per,pandas.concat(zms_grids_per),CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
zms_agebs_persistence,pandas.concat(zms_agebs_persistence),CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
mun_agebs_persistence,pandas.concat(mun_agebs_persistence),CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
arr_thres,numpy.mean(arr),CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/'
'housing/housing.data',
header=None,
sep='\s+')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('https://raw.githubusercontent.com/rasbt/python-machine-learning-book/master/code/datasets/housing/housing.data',
header=None,sep='\s+')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
hm,"seaborn.heatmap(cm,
cbar=True,
annot=True,
square=True,
fmt='.2f',
annot_kws={'size':15},
yticklabels=cols,
xticklabels=cols)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
line_X,"numpy.arange(3,10,1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_fit,"numpy.arange(250,600,10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_fit,numpy.arange(X.min(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_fit,numpy.arange(X_log.min(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.array([258.0,270.0,294.0,
320.0,342.0,368.0,
396.0,446.0,480.0,586.0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y,"numpy.array([236.4,234.4,252.8,
298.6,314.2,342.2,
360.8,368.0,391.2,
390.8])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
self.w_,numpy.zeros(1+X.shape[1]),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
w,numpy.zeros(X.shape[1]),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
w,"numpy.dot(z,numpy.dot(Xb.T,y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_log,numpy.log(X),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
outlier_mask,numpy.logical_not(inlier_mask),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_sqrt,numpy.sqrt(y),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Xb,"numpy.hstack((np.ones((X.shape[0],1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,numpy.corrcoef(df[cols].values.T),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
z,"numpy.linalg.inv(np.dot(Xb.T,Xb)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc_x,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc_y,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
slr,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
slr,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lr,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pr,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
regr,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ransac,sklearn.linear_model.RANSACRegressor(LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ransac,sklearn.linear_model.RANSACRegressor(LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(
X,y,test_size=0.3,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(
X,y,test_size=0.4,random_state=1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
linear_r2,"sklearn.metrics.r2_score(y,regr.predict(X)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
quadratic_r2,"sklearn.metrics.r2_score(y,regr.predict(X_quad)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cubic_r2,"sklearn.metrics.r2_score(y,regr.predict(X_cubic)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
linear_r2,"sklearn.metrics.r2_score(y_sqrt,regr.predict(X_log)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lasso,sklearn.linear_model.Lasso(alpha=0.1),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
quadratic,sklearn.preprocessing.PolynomialFeatures(degree=2),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
quadratic,sklearn.preprocessing.PolynomialFeatures(degree=2),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cubic,sklearn.preprocessing.PolynomialFeatures(degree=3),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
tree,sklearn.tree.DecisionTreeRegressor(max_depth=3),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
forest,"sklearn.ensemble.RandomForestRegressor(n_estimators=1000,
criterion='mse',
random_state=1,
n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(os.path.join(data_path,'Train.csv')",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
IX1,numpy.array(dfx['Item_MRP'][dfx['outlier']==0]),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
IX2,numpy.array(dfx['Item_Outlet_Sales'][dfx['outlier']==0]),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
n_outliers,numpy.count_nonzero(y_pred==1),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
X,"numpy.concatenate((X1,X2)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
"plt.contourf(xx,yy,Z,levels",numpy.linspace(Z.min(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.linspace(0,1,200)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
threshold,"scipy.stats.scoreatpercentile(scores_pred,100*outliers_fraction)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
a,"matplotlib.pyplot.contour(xx,yy,Z,levels=[threshold],linewidths=2,colors='red')",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
b,"matplotlib.pyplot.scatter(IX1,IX2,c='white',s=20,edgecolor='k')",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
c,"matplotlib.pyplot.scatter(OX1,OX2,c='black',s=20,edgecolor='k')",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
scaler,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
village,pandas.DataFrame({'Person':['Person_{}'.format(i),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('train.csv',index_col='id')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cumulative_index,"numpy.arange(1,len(cumulative_actual)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cumulative_index,"numpy.arange(1,len(cumulative_actual)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
village['Cum_population'],numpy.cumsum(np.ones(10),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
village['Cum_Income_Village_1'],numpy.cumsum(village['Income_Village_1']/100),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
village['Cum_Income_Village_2'],numpy.cumsum(village['Income_Village_2']/100),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
village['Cum_Income_Village_3'],numpy.cumsum(village['Income_Village_3']/100),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cumulative_actual,numpy.cumsum(sorted_actual),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cumulative_actual_perfect,"numpy.cumsum(sorted(actual,reverse=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cumulative_actual,numpy.cumsum(sorted_actual),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cumulative_actual_perfect,"numpy.cumsum(sorted(actual,reverse=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
curve_area,"numpy.trapz(np.insert(village['Cum_Income_Village_3'].values,0,0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"plt.fill_between(np.insert(X_k,0,0),np.insert(X_k,0,0),y2","numpy.insert(village['Cum_Income_Village_3'].values,0,0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(nrows=1,ncols=2,sharey=True,figsize=(14,7)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(nrows=1,ncols=3,sharey=True,figsize=(15,5)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(nrows=1,ncols=3,sharey=True,figsize=(18,6)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"f1,f2","scipy.interpolate.interp1d(x_values,y_values)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
S_pred,"scipy.integrate.quad(f1,0,1,points=x_values)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
S_actual,"scipy.integrate.quad(f2,0,1,points=x_values)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr,tpr,t","sklearn.metrics.roc_curve(actual,predict)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr,tpr,t","sklearn.metrics.roc_curve(actual,predict)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
aucroc,"sklearn.metrics.roc_auc_score(actual,predict)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
aucroc,"sklearn.metrics.roc_auc_score(actual,predict)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"train,test","sklearn.model_selection.train_test_split(df,stratify=df.target,test_size=0.25,random_state=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
movies,"pandas.read_csv(os.path.join(MOVIELENS,'movies.csv')",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
ratings,"pandas.read_csv(os.path.join(MOVIELENS,'ratings.csv')",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
ratings['parsed_time'],"pandas.to_datetime(ratings['timestamp'],unit='s')",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
data_list,random.sample(range(100),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
all_words,"numpy.concatenate(poll_data['intro'].apply(lambdas:
s.strip()",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
words_series,pandas.Series(list(all_words),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
poll_data,"pandas.read_csv('../../data/mlcourse_open_first_survey_parsed.csv',
index_col='id')",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.concat([df,pd.get_dummies(df['employ_type'],prefix='emp')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.concat([df,pd.get_dummies(df['gender'],prefix='gen')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.concat([df,pd.get_dummies(df['race'],prefix='rac')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.concat([df,pd.get_dummies(df['edu_level'],prefix='edu')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.concat([df,pd.get_dummies(df['relation'],prefix='rel')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.concat([df,pd.get_dummies(df['marital'],prefix='mar')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.concat([df,pd.get_dummies(df['occ'],prefix='occu')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('adult.csv',names=col_names,header=None)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
var1,"numpy.cumsum(np.round(pca.explained_variance_ratio_,decimals=4)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca,sklearn.decomposition.PCA(n_components=49),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca,sklearn.decomposition.PCA(n_components=40),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,sklearn.preprocessing.scale(X),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
skf,sklearn.model_selection.StratifiedKFold(n_splits=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lr_clf,"sklearn.linear_model.LogisticRegression(penalty='l2',C=0.05,class_weight=None)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sss,"sklearn.model_selection.StratifiedShuffleSplit(n_splits=2,test_size=0.5,train_size=0.5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sss,"sklearn.model_selection.StratifiedShuffleSplit(n_splits=5,test_size=0.5,train_size=0.5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.neighbors.KNeighborsClassifier(n_neighbors=8,weights='uniform',metric='euclidean')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.neighbors.KNeighborsClassifier(n_neighbors=8,weights='distance',metric='euclidean')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
acc,"sklearn.metrics.accuracy_score(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
acc,"sklearn.metrics.accuracy_score(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf,"sklearn.metrics.confusion_matrix(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf,"sklearn.metrics.confusion_matrix(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
precision,"sklearn.metrics.precision_score(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
precision,"sklearn.metrics.precision_score(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
f1,"sklearn.metrics.f1_score(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
f1,"sklearn.metrics.f1_score(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
recall,"sklearn.metrics.recall_score(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
recall,"sklearn.metrics.recall_score(y_test,y_hat)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
normalized_X,sklearn.preprocessing.normalize(X),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
a,"numpy.array([1.0,2.0,3.0,4.0],np.float32)",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
my_data,"numpy.array([(1,1)",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
people,"numpy.empty((3,4)",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
my_dtype,"numpy.dtype([('mass','float32')",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
person_dtype,"numpy.dtype([('name','S10')",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
person_dtype,"numpy.dtype([('name','S10')",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
particle_dtype,"numpy.dtype([('position',[('x','float')",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
people,"numpy.loadtxt('people.txt',
skiprows=1,
dtype=person_dtype)",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
data,"numpy.loadtxt('data.txt',dtype=particle_dtype)",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
data,"numpy.genfromtxt('wood.csv',
delimiter=',',
dtype=np.int,
names=True,
converters={1:convert}
)",CLUSTER_23,CLUSTER_6,CLUSTER_6,CLUSTER_0,CLUSTER_1
survey,"pandas.concat([all_survey,d75_survey],axis=0)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
d,"pandas.read_csv(r""C:\Users\USER\Downloads\TheUltimatePlan\JupyterNotebook\Datasets\schools/{0}"".format(f)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
all_survey,"pandas.read_csv(r""C:\Users\USER\Downloads\TheUltimatePlan\JupyterNotebook\Datasets\schools/survey_all.txt"",delimiter=""\t"",encoding='windows-1252')",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
d75_survey,"pandas.read_csv(r""C:\Users\USER\Downloads\TheUltimatePlan\JupyterNotebook\Datasets\schools/survey_d75.txt"",delimiter=""\t"",encoding='windows-1252')",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"data[""sat_results""][c]","pandas.to_numeric(data[""sat_results""][c],errors=""coerce"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"data[""hs_directory""][""lat""]","pandas.to_numeric(data[""hs_directory""][""lat""],errors=""coerce"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"data[""hs_directory""][""lon""]","pandas.to_numeric(data[""hs_directory""][""lon""],errors=""coerce"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"data[""ap_2010""][col]","pandas.to_numeric(data[""ap_2010""][col],errors=""coerce"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
coords,"re.findall(""\(.+,.+\)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
coords,"re.findall(""\(.+,.+\)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
missing_vars,pandas.DataFrame(train_test.isnull(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
variable_summary,pandas.DataFrame(columns=numeric_variables),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fine_classing_data,"pandas.DataFrame(train_test[""loan_default""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
categorical_variable_summary,"pandas.DataFrame(columns=['No_Of_Records','Levels','Variable_Name'])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.DataFrame(categorical_variable_data[i].value_counts(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
feature_importances,"pandas.DataFrame(rf.feature_importances_,
index=x_train.columns,
columns=['importance'])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
categorical_variable_data,"pandas.concat([categorical_variable_data,categorial_numeric_data],axis=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
categorical_variable_data,"pandas.concat([categorical_variable_data,df[""Credit_hist_len_Month""]],axis=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
final_model_data,"pandas.concat([numeric_variable_data_new_1,fine_classing_data,cate_ohe],axis=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cate_ohe,pandas.get_dummies(categorical_variable_data_new),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train,"pandas.read_csv(""D:/Statastics/AnalyticsVidhya/L&T-VehicleLoanDefault/train.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test,"pandas.read_csv(""D:/Statastics/AnalyticsVidhya/L&T-VehicleLoanDefault/test_bqCt9Pv.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"categorical_variable_data[""Date.of.Birth""]","pandas.to_datetime(categorical_variable_data[""Date.of.Birth""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"categorical_variable_data[""DisbursalDate""]","pandas.to_datetime(categorical_variable_data[""DisbursalDate""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf,"sklearn.ensemble.RandomForestClassifier(n_estimators=30,
criterion='entropy',
max_features=6,
max_depth=8,
bootstrap=True,
oob_score=True,
class_weight='balanced_subsample')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf_trimmed,"sklearn.ensemble.RandomForestClassifier(n_estimators=30,
criterion='entropy',
max_features=6,
max_depth=8,
bootstrap=True,
oob_score=True,
class_weight='balanced_subsample')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pipeline,"sklearn.pipeline.Pipeline([('clf',RandomForestClassifier(random_state=42)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid_search,"sklearn.model_selection.GridSearchCV(pipeline,parameters,n_jobs=-1,verbose=1,scoring='accuracy')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gsearch1,"sklearn.model_selection.GridSearchCV(estimator=XGBClassifier(learning_rate=0.1,n_estimators=140,max_depth=8,
min_child_weight=6,gamma=0.2,subsample=0.7,colsample_bytree=0.3,
objective='binary:logistic',nthread=4,scale_pos_weight=1,seed=27)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gsearch2,"sklearn.model_selection.GridSearchCV(estimator=XGBClassifier(learning_rate=0.1,n_estimators=140,max_depth=8,
min_child_weight=6,gamma=0.2,subsample=0.7,colsample_bytree=0.3,
objective='binary:logistic',nthread=4,scale_pos_weight=1,seed=27)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gsearch3,"sklearn.model_selection.GridSearchCV(estimator=XGBClassifier(learning_rate=0.1,n_estimators=140,max_depth=7,
min_child_weight=5,gamma=0.2,subsample=0.7,colsample_bytree=0.3,
objective='binary:logistic',nthread=4,scale_pos_weight=1,seed=27)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gsearch4,"sklearn.model_selection.GridSearchCV(estimator=XGBClassifier(learning_rate=0.1,n_estimators=140,max_depth=7,
min_child_weight=5,gamma=0.4,subsample=0.6,colsample_bytree=0.1,
objective='binary:logistic',nthread=4,scale_pos_weight=1,seed=27)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"x_train,x_test,y_train,y_test","sklearn.model_selection.train_test_split(x_train_test,y_train_test,test_size=0.3,
stratify=y_train_test.loan_default,random_state=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
accuracy_score,"sklearn.metrics.accuracy_score(y_test,predictions_test)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
accuracy_score,"sklearn.metrics.accuracy_score(y_test,predictions_test)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
F1_Score,"sklearn.metrics.f1_score(y_test,predictions_test)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
F1_Score,"sklearn.metrics.f1_score(y_test,predictions_test)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
XGB_roc_auc_score_test,"sklearn.metrics.roc_auc_score(y_test,pred_proba_test)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
XGB_roc_auc_score_train,"sklearn.metrics.roc_auc_score(y_train,pred_proba_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
XGB_roc_auc_score_test,"sklearn.metrics.roc_auc_score(y_test,pred_proba_test)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
XGB_roc_auc_score_train,"sklearn.metrics.roc_auc_score(y_train,pred_proba_train)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
var_idx,"sklearn.feature_selection.SelectFromModel(rf,threshold=0.006684,prefit=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,sklearn.preprocessing.StandardScaler(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
x,numpy.arange(kclusters),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
neighborhoods,pandas.DataFrame(data=torontodata),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
nearby_venues,pandas.DataFrame([itemforvenue_listinvenues_listforiteminvenue_list]),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
neighborhoods_venues_sorted,pandas.DataFrame(columns=columns),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
toronto_onehot,"pandas.get_dummies(toronto_venues[['VenueCategory']],prefix="""",prefix_sep="""")",CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
torontodata,pandas.read_csv('/home/leo/Downloads/neighborhoods.csv'),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
results,requests.get(url),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
results,requests.get(url),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
kmeans,"sklearn.cluster.KMeans(n_clusters=kclusters,random_state=0)",CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
cll,"pandas.crosstab(dados_2013.AguaCanalizada,dados_2013.AcessoaInternetnoDomicílio)",CLUSTER_18,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
dados,"pandas.read_csv('DOM2013.csv',sep=',')",CLUSTER_18,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
faixa,"numpy.arange(0,17000,400)",CLUSTER_18,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
faixa,"numpy.arange(0,17000,400)",CLUSTER_18,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
faixa,"numpy.arange(0,6000,400)",CLUSTER_18,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
X_train_scaled,pandas.DataFrame(scaler.transform(df_train),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_test_scaled,pandas.DataFrame(scaler.transform(df_test),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(url,sep='\s+',header=None,names=['CRIM','ZN','INDUS','CHAS','NOX','RM','AGE','DIS','RAD','TAX','PTRATIO','B','LSTAT','MEDV'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mse_cv,numpy.mean(cvscores),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mse_cv,numpy.mean(cvscores),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
lear_decay,"numpy.logspace(-6,0,n_decay)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
learn_rate,"numpy.linspace(0,0.01,n_lr)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
momentum,"numpy.linspace(0,1,n_decay)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mfcc,"numpy.load(os.path.join(pardir,x)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
M,"numpy.array([
[0,0,0,1./3.,0.5],
[0,0,0,1./3.,0],
[0,0,0,1./3.,0.5],
[0.5,1,0.5,0,0],
[0.5,0,0.5,0,0]
])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
v,"numpy.array([1.,.0,.0,.0,.0])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
v,"numpy.dot(M,v)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
df_train,pandas.read_csv(data_path+'house_train.csv.gz'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_Y,numpy.log1p(df_train['SalePrice']),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
MMEncoder,sklearn.preprocessing.MinMaxScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
estimator,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Profit_bucket,"pandas.qcut(orders[""Profit""].values,10)",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
"orders[""Profit_bucket""]","pandas.qcut(orders[""Profit""],10,labels=False)",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
orders,"pandas.read_excel(""sales.xls"")",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
"n,bins,patches","matplotlib.pyplot.hist(orders.Profit,100,facecolor='blue',alpha=0.5)",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('states_all.csv'),CLUSTER_0,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
img_data,"numpy.reshape(img_data,(eval_minibatch_size,1,28,28)",CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_10,CLUSTER_1
start,time.time(),CLUSTER_11,CLUSTER_0,CLUSTER_5,CLUSTER_10,CLUSTER_1
data,"pandas.concat([data1,data2],axis=0)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
data,pandas.get_dummies(data),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
data1,pandas.read_csv('/home/mynasino/kaggle_houseprice/data/train.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
data2,pandas.read_csv('/home/mynasino/kaggle_houseprice/data/test.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
conf_mat_df,"pandas.DataFrame(conf_mat,index=svc.classes_,columns=svc.classes_)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat_df,"pandas.DataFrame(conf_mat,index=svc.classes_,columns=svc.classes_)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_train,pandas.read_csv('../Data/Khan_xtrain.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_train,pandas.read_csv('../Data/Khan_ytrain.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_test,pandas.read_csv('../Data/Khan_xtest.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_test,pandas.read_csv('../Data/Khan_ytest.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Heart,"pandas.read_csv('../Data/Heart.csv',index_col=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y,"numpy.concatenate((y,np.repeat(0,50)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y,"numpy.repeat([-1,1],10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y,"numpy.repeat([0,1],[150,50])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y,"numpy.repeat([1,2],[150,50])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.vstack((X,np.random.randn(50,2)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.arange(x_min,x_max,h)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,(ax1,ax2)","matplotlib.pyplot.subplots(nrows=1,ncols=2,figsize=(14,6)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,"sklearn.svm.SVC(C=10,kernel='linear',probability=True)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,"sklearn.svm.SVC(C=0.1,kernel='linear',probability=True)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,"sklearn.svm.SVC(C=c,kernel='linear',probability=False)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,sklearn.svm.SVC(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc_best,"sklearn.svm.SVC(C=0.001,kernel='linear',probability=True)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc_C_big,"sklearn.svm.SVC(C=100000,kernel='linear',probability=True)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc_C_small,"sklearn.svm.SVC(C=0.1,kernel='linear',probability=True)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rbf_svc,"sklearn.svm.SVC(kernel='rbf',gamma=1,C=1.0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rbf_svc,"sklearn.svm.SVC(kernel='rbf',gamma=1,C=1e5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_opt,"sklearn.svm.SVC(kernel='rbf',C=10,gamma=2,probability=True)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_flex,"sklearn.svm.SVC(kernel='rbf',C=10,gamma=100,probability=True)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_multi_clf,"sklearn.svm.SVC(kernel='rbf',C=10,gamma=1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_multi_clf,"sklearn.svm.SVC(kernel='rbf',C=1,gamma=0.1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,"sklearn.svm.SVC(kernel='linear',C=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc_best,"sklearn.svm.SVC(kernel='linear',C=0.01)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,sklearn.svm.SVC(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,sklearn.svm.SVC(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,sklearn.svm.SVC(kernel='poly'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y,svc.predict(X)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y_test,pred_test)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y_test,pred_grid)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y,svc_C_big.predict(X)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y,svc_C_small.predict(X)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y_train,rbf_svc.predict(X_train)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y_test,y_pred_best)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y_train,pred_train)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y_test,pred_test)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y_test,pred_test)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
conf_mat,"sklearn.metrics.confusion_matrix(y_test,y_pred_th)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
auc_opt_train,"sklearn.metrics.roc_auc_score(y_train,y_pred_prob_opt[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
auc_flex_train,"sklearn.metrics.roc_auc_score(y_train,y_pred_prob_flex[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
auc_opt_test,"sklearn.metrics.roc_auc_score(y_test,y_pred_prob_opt[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
auc_flex_test,"sklearn.metrics.roc_auc_score(y_test,y_pred_prob_flex[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
auc_test,"sklearn.metrics.roc_auc_score(y_test,y_pred_prob[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr_opt,tpr_opt,thresholds_opt","sklearn.metrics.roc_curve(y_train,y_pred_prob_opt[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr_flex,tpr_flex,thresholds_flex","sklearn.metrics.roc_curve(y_train,y_pred_prob_flex[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr_opt,tpr_opt,thresholds_opt","sklearn.metrics.roc_curve(y_test,y_pred_prob_opt[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr_flex,tpr_flex,thresholds_flex","sklearn.metrics.roc_curve(y_test,y_pred_prob_flex[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(y_test,y_pred_prob[:,1])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,train_size=100,random_state=1234)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,train_size=0.6,random_state=123)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score_s,"sklearn.model_selection.cross_val_score(svc,X,y,cv=10,scoring='accuracy')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc_GridCV,"sklearn.model_selection.GridSearchCV(svc,param_grid,cv=10,scoring='accuracy',n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf_grid,sklearn.model_selection.GridSearchCV(SVC(kernel='rbf'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_multi_clf_grid,sklearn.model_selection.GridSearchCV(SVC(kernel='rbf'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svm_multi_clf_grid,sklearn.model_selection.GridSearchCV(SVC(kernel='linear'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
GB_clf_gridCV_accuracy,"sklearn.model_selection.GridSearchCV(GB_clf,param_grid,cv=7,scoring='accuracy',n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
GB_clf_gridCV_AUC,"sklearn.model_selection.GridSearchCV(GB_clf,param_grid,cv=7,scoring='roc_auc',n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
GB_clf_gridCV_accuracy,"sklearn.model_selection.GridSearchCV(GB_clf,param_grid,cv=7,scoring='accuracy',n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
GB_clf_gridCV_AUC,"sklearn.model_selection.GridSearchCV(GB_clf,param_grid,cv=7,scoring='roc_auc',n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
le,sklearn.preprocessing.LabelEncoder(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_scaled,sklearn.preprocessing.scale(X),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
GB_clf,"sklearn.ensemble.GradientBoostingClassifier(min_samples_split=1,max_features='sqrt',subsample=0.9,
learning_rate=0.02,loss='exponential',random_state=123)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
GB_clf,"sklearn.ensemble.GradientBoostingClassifier(min_samples_split=1,max_features='sqrt',subsample=0.9,
learning_rate=0.02,loss='exponential',random_state=123)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
GB_clf_best,"sklearn.ensemble.GradientBoostingClassifier(n_estimators=95,max_depth=2,min_samples_split=1,max_features='sqrt',subsample=0.9,
learning_rate=0.02,loss='exponential',random_state=123)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
SVM_clf_randCV_accuracy,"sklearn.model_selection.RandomizedSearchCV(svc,param_dist,cv=7,scoring='accuracy',
n_iter=20,n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
SVM_clf_randCV_AUC,"sklearn.model_selection.RandomizedSearchCV(svc,param_dist,cv=7,scoring='roc_auc',
n_iter=20,n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
SVM_clf_randCV_accuracy,"sklearn.model_selection.RandomizedSearchCV(svc,param_dist,cv=7,scoring='accuracy',
n_iter=20,n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
SVM_clf_randCV_AUC,"sklearn.model_selection.RandomizedSearchCV(svc,param_dist,cv=7,scoring='roc_auc',
n_iter=20,n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
SVM_clf_randCV_accuracy,"sklearn.model_selection.RandomizedSearchCV(svc,param_dist,cv=7,scoring='accuracy',
n_iter=30,n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
SVM_clf_randCV_AUC,"sklearn.model_selection.RandomizedSearchCV(svc,param_dist,cv=7,scoring='roc_auc',
n_iter=30,n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
text,re.sub('\[\.\.\.\]|\(\.\.\.\),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(regimentointerno|ri),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('constituiçãofederal/1988','constituiçãofederal',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('dacf','daconstituiçãofederal',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('c/c','combinadocom',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('[ve]\.g\.','porexemplo',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('exvi(d[aeo]),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('exvi','porforçade',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('sras\.','senhoras',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('sra\.','senhora',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('srs\.','senhores',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('sr\.','senhor',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('/(ac|al|ap|am|ba|ce|df|es|go|ma|mt|ms|mg|pa|pb|pr|pe|pi|rj|rn|rs|ro|rr|sc|sp|se|to),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('
text=re_transform_url.sub('XXURL',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('""','',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(\(|\[),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(\(|\[),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('0?0/0?0/00(00),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('tc-000.000/0000-0','XXPROCESSO',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(nº),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('XXNUMERACAOXXUF','XXNUMERACAO',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('(0{1,3}(\.000)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('\(0+(,0+)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('(0{1,3}(\.000)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(nº\s*),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(0ª?|primeira|segunda),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('(XXNUMERACAO[,;]?\s+)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('XXNUMERACAO\s*(-|,\s*d[ao]|\s)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('XXNUMERACAO\s+e\s+XXNUMERACAO\s*,\s*(ambos\s+)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('((XXACORDAOS?|XXNUMERACAO),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(lei|decreto),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('art(\.|igo),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(0+),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('art(\.|igo),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('art(s\.|igos),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('art(s\.|igos),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(parágrafo|§),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('inciso(i?v|v?(iii|ii|i),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('alínea[a-z]','alíneaXXITEM',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('alíneas[a-z]e[a-z]','alíneasXXITEM',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(0º|0+),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('0+,caput','XXITEM,caput',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('r\$(0{1,3}([.,]000)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(desde|em|de),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(\W),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('XXMES\s+de\s+XXDATA','XXDATA',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('0000\s*(-|a),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('XXDATA\s*(-|a),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('0+\.0+\.0+\.0+\.?\s+','XXSUBITEM',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('0+\.0+\.0+\.?\s+','XXSUBSUBSECAO',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('0+\.0+\.?\s+','XXSUBSECAO',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('0+\.\s+','XXSECAO',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(i?v|v?(iii|ii),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('XXNUMERACAO\s+evi(\s|\.|,)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('nºXXNUMERACAO','XXNUMERACAO',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('0+\s*\(.+?\),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('(0{1,3}(\.000)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('XXNUMERACAO\s*.XXNUMERO','XXNUMERACAO',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('[a-z]+/[a-z]+/[a-z]+-[a-z]+','XXSIGLA',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('XXNUMERACAO-XXSIGLA','XXNUMERACAO',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('ms-(stf|sft),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('ms(\s+|\s*-\s*),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('súmulavinculantedo(stf|sft),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('súmulavinculante(n(º|o),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('are(n(º|o),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('re(n(º|o),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('ns?\.\s*(XXNUMERO|XXNUMERACAO|XXACORDAO),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('n(º|s?\.|os?\.),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('(\s*XXNUMERACAO\s*(,|;|e)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('(mandado\s+de\s+segurança\s+XXNUMERACAO\s*,\s+)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('ins+(XXNUMERO),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(\w),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('á\s?-\s?(l[ao]s?),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('ê\s?-\s?(l[ao]s?),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('ô\s?-\s?(l[ao]s?),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('-\s?(lhes?|[ln]?[ao]s?|se),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('(\.|:|;|-|/),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,"re.sub('\(','(',text)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
text,re.sub('\),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_remove_brackets,re.compile(r'\{.*\}'),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_remove_html,re.compile(r'<(\/|\\),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_transform_numbers,"re.compile(r'\d',re.UNICODE)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_transform_emails,"re.compile(r'[^\s]+@[^\s]+',re.UNICODE)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_transform_url,re.compile(r'(http|https),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_quotes_1,"re.compile(r""(?u)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_quotes_2,"re.compile(r""(?u)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_quotes_3,re.compile(r'(?u),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_dots,re.compile(r'(?<!\.),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_punctuation,"re.compile(r'([,"";:])",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_hiphen,re.compile(r'-(?=[^\W\d_]),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_tree_dots,"re.compile(u'…',re.UNICODE)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_punkts,re.compile(r'(\w+),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_punkts_b,re.compile(r'([%s]),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_punkts_c,re.compile(r'(\w+),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_changehyphen,re.compile(u'–'),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_doublequotes_1,"re.compile(r'(\""\"")",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_doublequotes_2,re.compile(r'(\'\'),CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
re_trim,"re.compile(r'+',re.UNICODE)",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
punctuations,"re.escape('!""




re_remove_brackets=re.compile(r'\{.*\}')",CLUSTER_30,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
indices,numpy.arange(df_train.shape[0]),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
col_names,numpy.sort(df_train['Category'].unique(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_train['Category'],pandas.Categorical(df_train['Category']),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_train['DayOfWeek'],pandas.Categorical(df_train['DayOfWeek']),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_train['PdDistrict'],pandas.Categorical(df_train['PdDistrict']),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_test['DayOfWeek'],pandas.Categorical(df_test['DayOfWeek']),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_test['PdDistrict'],pandas.Categorical(df_test['PdDistrict']),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_pred,"pandas.DataFrame(data=predict_probs,columns=col_names)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_pred,"pandas.DataFrame(data=predict_probs_adaboosttree,columns=col_names)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_pred,"pandas.DataFrame(data=predict_probs,columns=col_names)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_train,"pandas.read_csv('../input/train.csv',parse_dates=['Dates'])",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df_test,"pandas.read_csv('../input/test.csv',parse_dates=['Dates'])",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
adaboosttree,sklearn.ensemble.AdaBoostClassifier(DecisionTreeClassifier(max_depth=2),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
randforest,sklearn.ensemble.RandomForestClassifier(n_estimators=11),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
logistic,sklearn.linear_model.LogisticRegression(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
norm,numpy.array(x/255),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
n,numpy.array(x),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
onehotEncoder,sklearn.preprocessing.OneHotEncoder(n_values=10),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_3
averages,json.loads(averages),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
avgStateFatalities,json.loads(averages),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
stateDict,json.loads(states),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
genderList,"re.split(""\d*[:|]\s*"",df['participant_gender'][i])",CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
typeList,"re.split(""\d*[:|]"",df['participant_type'][i])",CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
U,math.sqrt(n),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
incident_points,"pandas.concat([city_incident_count,mean_lat_long_cities],axis=1)",CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
suicide_incident_points,"pandas.concat([suicide_incident_count,suicide_lat_long_group],axis=1)",CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
non_suicide_incident_points,"pandas.concat([city_incident_count,mean_lat_long_cities],axis=1)",CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('./city-data/fully_merged_data.csv'),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.gcf(),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.gcf(),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
df2,"pandas.DataFrame({""shootings_per_population"":list(averages.values()",CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
states_df,pandas.DataFrame(index=df['state'].unique(),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
rv,scipy.stats.norm(),CLUSTER_14,CLUSTER_3,CLUSTER_7,CLUSTER_0,CLUSTER_0
"plt.imshow(x_test[0].reshape((28,28)),cmap",matplotlib.pyplot.get_cmap('gray'),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"plt.imshow(x_test[1].reshape((28,28)),cmap",matplotlib.pyplot.get_cmap('gray'),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"plt.imshow(x_test[2].reshape((28,28)),cmap",matplotlib.pyplot.get_cmap('gray'),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
eeg_data,numpy.concatenate(np.array(eeg_data),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame(iris.data,columns=iris.feature_names)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
"y,_",pandas.factorize(train['species']),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
y,numpy.log(x),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
iris,sklearn.datasets.load_iris(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
clf,sklearn.ensemble.RandomForestClassifier(n_jobs=2),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
top_ch,numpy.arange(len(self.chars),CLUSTER_10,CLUSTER_7,CLUSTER_0,CLUSTER_0,CLUSTER_1
encoded,numpy.array([char2int[ch]forchintext]),CLUSTER_10,CLUSTER_7,CLUSTER_0,CLUSTER_0,CLUSTER_1
x,numpy.array([[self.char2int[char]]]),CLUSTER_10,CLUSTER_7,CLUSTER_0,CLUSTER_0,CLUSTER_1
one_hot,numpy.zeros((np.multiply(*arr.shape),CLUSTER_10,CLUSTER_7,CLUSTER_0,CLUSTER_0,CLUSTER_1
y,numpy.zeros_like(x),CLUSTER_10,CLUSTER_7,CLUSTER_0,CLUSTER_0,CLUSTER_1
t,"numpy.arange(0,aitv.shape[0])",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
t,"numpy.arange(0,aitv.shape[0])",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
t,"numpy.arange(0,aitv.shape[0])",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
_alpha,"numpy.linspace(0.1,0.9,10)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
ait,"pandas.read_csv(csvf,skiprows=2)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(16,4)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(16,8)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(16,8)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(file_,low_memory=False,encoding=""ISO-8859-1"")",CLUSTER_1,CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_1
df_decoder,"pandas.read_csv(decode_path+decodefile,delimiter='|',encoding=""ISO-8859-1"")",CLUSTER_1,CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_1
"fig,ax",matplotlib.pyplot.gcf(),CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,ax",matplotlib.pyplot.subplots(),CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(bin_df[stable_col],bin_df['predicted_probabilities'].values)",CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds",sklearn.metrics.roc_curve(np.array(temp_df[stable_col]),CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(bin_df[stable_col],bin_df['predicted_probabilities'].values)",CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(temp_df[stable_col],temp_df['predicted_probabilities'].values)",CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_4,CLUSTER_2,CLUSTER_1,CLUSTER_0,CLUSTER_0
k1,numpy.arange(n1+1),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
k2,numpy.arange(n2+1),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
die_bins,"numpy.arange(-0.5,6.6,1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
combined_df,"pandas.concat([routes_df,pd.DataFrame(columns=IP_df.columns[1:])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
routes_df,pandas.read_csv('routes_df.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
IP_df,pandas.read_csv('IP_df.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
merged,"pandas.merge(df,coverage_df,how='left',on=['chr','start','stop'],suffixes=('',f'_{suffix}')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
temp_merged,"pandas.merge(promoter_df,promoter_5UTR_df,how='left',on='AGI',suffixes=('','_promsUTR')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
merged,"pandas.merge(variable_of_interest_df,promoter_df,on='AGI',how='left',suffixes=('','_wholeprom')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
merged2,"pandas.merge(pos,neg,how='outer')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
merged,"pandas.merge(select_genes,df,on='AGI',how='left')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
coverage_df,"pandas.read_table(bp_covered,sep='\t',header=None)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
coverage_df,"pandas.read_table(coverage_bed,sep='\t',header=None)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
promoter_df,"pandas.read_table(promoter_bed,sep='\t',header=None)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
promoter_5UTR_df,"pandas.read_table(promoter_5UTR_bed,sep='\t',header=None)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
select_genes,"pandas.read_table(gene_categories,sep='\t',header=None)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fills,numpy.zeros(nu),CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
dist_plot_fig,seaborn.distplot(dist_plot),CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
l1,"seaborn.lineplot(y=merged2[merged2.gene_type==genetype][variable_of_interest],x=merged2[merged2.gene_type==genetype].position,
ax=variableofinterestplot,label=genetype,estimator=new_estimator,ci=ci,n_boot=n_boot)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
l2,"seaborn.lineplot(y=merged2[merged2.gene_type==genetype2][variable_of_interest],x=merged2[merged2.gene_type==genetype2].position,
ax=variableofinterestplot,label=genetype2,estimator=new_estimator,ci=ci,n_boot=n_boot)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
l1,"seaborn.lineplot(y=merged2[merged2.gene_type==genetype][variable_of_interest],x=merged2[merged2.gene_type==genetype].position,
ax=variableofinterestplot,label=genetype,estimator=new_estimator,ci=ci,n_boot=n_boot)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
l2,"seaborn.lineplot(y=merged2[merged2.gene_type==genetype2][variable_of_interest],x=merged2[merged2.gene_type==genetype2].position,
ax=variableofinterestplot,label=genetype2,estimator=new_estimator,ci=ci,n_boot=n_boot)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
l3,"seaborn.lineplot(y=merged2[merged2.gene_type==genetype3][variable_of_interest],x=merged2[merged2.gene_type==genetype3].position,
ax=variableofinterestplot,label=genetype3,estimator=new_estimator,ci=ci,n_boot=n_boot)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
"f,axes","matplotlib.pyplot.subplots(subplots,figsize=(10,8)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
"f,axes","matplotlib.pyplot.subplots(subplots,figsize=(10,8)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
sample,random.random(),CLUSTER_6,CLUSTER_7,CLUSTER_5,CLUSTER_28,CLUSTER_8
screen,"numpy.ascontiguousarray(screen,dtype=np.float32)",CLUSTER_6,CLUSTER_7,CLUSTER_5,CLUSTER_28,CLUSTER_8
Transition,"collections.namedtuple('Transition',
('state','action','next_state','reward')",CLUSTER_6,CLUSTER_7,CLUSTER_5,CLUSTER_28,CLUSTER_8
"fig,axes","matplotlib.pyplot.subplots(2,1,sharex=True)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
ax,"pandas.concat([ser_p,ser_smd_dmax],axis=1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df_x,"pandas.concat([ser_smd,ser_rs],
axis=1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df_x,"pandas.concat(
[ser_lai,
ser_rs.between_time('1000','1600')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df_x,"pandas.concat([ser_kdown,ser_rs],axis=1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df_x,"pandas.concat([ser_ta,ser_rs],axis=1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df_x,"pandas.concat([ser_rh,ser_rs],axis=1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
sub,pandas.read_csv('../input/whats-cooking-kernels-only/sample_submission.csv'),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
train,pandas.read_json('../input/whats-cooking-kernels-only/train.json'),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
test,pandas.read_json('../input/whats-cooking-kernels-only/test.json'),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
M,numpy.array(M),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
xtrain_glove,numpy.array(xtrain_glove),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
xvalid_glove,numpy.array(xvalid_glove),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
coefs,"numpy.asarray(values[1:],dtype='float32')",CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
actual2,"numpy.zeros((actual.shape[0],predicted.shape[1])",CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clip,"numpy.clip(predicted,eps,1-eps)",CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
vsota,numpy.sum(actual*np.log(clip),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
lbl_enc,sklearn.preprocessing.LabelEncoder(),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clf,sklearn.linear_model.LogisticRegression(C=1.0),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clf,sklearn.linear_model.LogisticRegression(C=1.0),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
"xtrain,xvalid,ytrain,yvalid",sklearn.model_selection.train_test_split(train.ingredients.str.join(''),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
clf,sklearn.naive_bayes.MultinomialNB(),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
idxs,numpy.flatnonzero(y_train==y),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
mean_image,"numpy.mean(X_train,axis=0)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
train_acc,numpy.mean(y_train_temp==y_train_predict),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
val_acc,numpy.mean(y_val==y_val_predict),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
test_accuracy,numpy.mean(y_test==y_test_pred),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_train,"numpy.reshape(X_train,(X_train.shape[0],-1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_val,"numpy.reshape(X_val,(X_val.shape[0],-1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_test,"numpy.reshape(X_test,(X_test.shape[0],-1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_dev,"numpy.reshape(X_dev,(X_dev.shape[0],-1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_train,"numpy.hstack([X_train,np.ones((X_train.shape[0],1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_val,"numpy.hstack([X_val,np.ones((X_val.shape[0],1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_test,"numpy.hstack([X_test,np.ones((X_test.shape[0],1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_dev,"numpy.hstack([X_dev,np.ones((X_dev.shape[0],1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
difference,"numpy.linalg.norm(grad_naive-grad_vectorized,ord='fro')",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv(‘train.csv’,sep=‘|’,names=[‘stars’,‘text’],error_bad_lines=False)",CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
X_embedded,sklearn.manifold.TSNE(n_components=2),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
y_training,"numpy.array(X_forest_sample.shape[0]*[forest_label_value]+\
X_road_sample.shape[0]*[road_label_value])",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
X_training,"numpy.concatenate((X_forest_sample,X_road_sample)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
X,numpy.swapaxes(np.stack(all_valid_pixels),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
total_forest_mask,"numpy.logical_or(total_mask,forest_mask)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
total_road_mask,"numpy.logical_or(total_mask,road_mask)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
rgb_bands,numpy.rint(bgr_bands[::-1]),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
npzfile,numpy.load(training_data_file),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
band,"numpy.ma.array(band,mask=None)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
edges1,"numpy.ma.array(feature.canny(green_band_lr,
low_threshold=0.0,high_threshold=0.01,
sigma=2)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
blurred,"numpy.ma.array(filters.gaussian(edges1,sigma=2)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
blurred2,"numpy.ma.array(filters.gaussian(edges1,sigma=6)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
masked_band,"numpy.ma.array(band,mask=mask)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
band,numpy.ma.array(np.zeros(mask.shape),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
overlapping_scenes,pandas.read_pickle(overlapping_scenes_filename),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
mbk,sklearn.cluster.MiniBatchKMeans(n_clusters=2),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
clf,sklearn.ensemble.RandomForestClassifier(),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
winedf,pandas.read_csv('../input/winemag-data_first150k.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(25,10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig2,ax2","matplotlib.pyplot.subplots(figsize=(30,15)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kmeans,"sklearn.cluster.KMeans(n_clusters=15,n_init=5,n_jobs=-1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
weather2,pandas.DataFrame(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df2,"pandas.get_dummies(df2,""Month"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df4,"pandas.get_dummies(df4,""wd"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df2_int,"pandas.get_dummies(df2_int,""wd"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_int,"pandas.merge(weather2,df,how='inner',on=['Year','Month','Day'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
weather,"pandas.read_csv(""allweather_cp2.csv"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(""Day_Month_Year_Count.csv"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(""Day_Month_Year_Count_wd.csv"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
a,numpy.array(a),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_int[newcol],"numpy.roll(df_int[""count""],i)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df[newcol],"numpy.roll(df[""count""],i)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
indices,numpy.argsort(importances),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
indices,numpy.argsort(importances),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
indices,numpy.argsort(importances),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
indices,numpy.argsort(importances),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
indices,numpy.argsort(importances),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
std,"numpy.std([tree.feature_importances_fortreeinrg.estimators_],
axis=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
std,"numpy.std([tree.feature_importances_fortreeinrg1.estimators_],axis=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
std,"numpy.std([tree.feature_importances_fortreeinrg2.estimators_],axis=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
std,"numpy.std([tree.feature_importances_fortreeinrg3.estimators_],axis=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
std,"numpy.std([tree.feature_importances_fortreeinrg4.estimators_],axis=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rms,"numpy.sqrt(mean_squared_error(actuals,preds)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
current_palette,"seaborn.color_palette(""Set2"",10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rg,"sklearn.ensemble.RandomForestRegressor(n_jobs=-1,n_estimators=trees,random_state=1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
response,"requests.get(url,headers=headers)",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
p1,"matplotlib.pyplot.bar(ind,df_genres.loc[[0]].values[0],width,color='
p2=matplotlib.pyplot.bar(ind,df_genres.loc[[1]].values[0],width,bottom=df_genres.loc[[0]].values[0])",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.heatmap(df_new[['budget','popularity','revenue','runtime','vote_average','vote_count']].corr()",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(budget0,legend=True,shade=True,color='r',label='non-nominated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(budget1,legend=True,shade=True,color='b',label='nonminated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(revenue0,legend=True,shade=True,color='r',label='non-nominated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(revenue1,legend=True,shade=True,color='b',label='nonminated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(vc0,legend=True,shade=True,color='r',label='non-nominated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(vc1,legend=True,shade=True,color='b',label='nonminated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(va0,legend=True,shade=True,color='r',label='non-nominated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(va1,legend=True,shade=True,color='b',label='nonminated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(popularity0,legend=True,shade=True,color='r',label='non-nominated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(popularity1,legend=True,shade=True,color='b',label='nonminated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(runtime0,legend=True,shade=True,color='r',label='non-nominated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
g,"seaborn.kdeplot(runtime1,legend=True,shade=True,color='b',label='nonminated')",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
genres,"json.loads(df_new.loc[i,'genres'])",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
group,json.loads(item),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
group,json.loads(item),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
crew,json.loads(item),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
crew,json.loads(item),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
ind,numpy.arange(N),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
np_item,numpy.zeros((len(df),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
np_crew,numpy.zeros((len(df2),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
avg,numpy.mean(sumAccuracy),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_genres,"pandas.DataFrame(genres_all,columns=list(genres_set)",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_item,"pandas.DataFrame(np_item,columns=list(final.keys()",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_crew,"pandas.DataFrame(np_crew,columns=list(final_crew.keys()",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_subset,"pandas.concat([df_subset_0,df_subset_1],ignore_index=True)",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_output,"pandas.concat([df,df_item],axis=1)",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df3,"pandas.concat([df2,df_crew],axis=1)",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_awards,"pandas.read_csv('database.csv',skiprows=1,names=['year','ceremony','award','winner','movieName','filmInfo'])",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_movies,pandas.read_csv('movies.csv'),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_credits,pandas.read_csv('credits.csv'),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
df_credits_movies['release_date'],pandas.to_datetime(df_credits_movies['release_date']),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=1/7.0,random_state=0)",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
pca,sklearn.decomposition.PCA(0.95),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
logisticRegr,sklearn.linear_model.LogisticRegression(solver='liblinear'),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
"tn,fp,fn,tp","sklearn.metrics.confusion_matrix(y_test,predicted)",CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
skf,sklearn.model_selection.StratifiedKFold(n_splits=4),CLUSTER_24,CLUSTER_2,CLUSTER_3,CLUSTER_32,CLUSTER_0
y,"numpy.arange(0,FLAGS.y_dim,1)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
y,"numpy.arange(0,FLAGS.y_dim,1)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
a,"numpy.array([1.2,1.4,1.6,1.8,2.])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
a,"numpy.asarray(a,dtype=np.uint8)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
y_one_hot,"numpy.zeros((num_samples,FLAGS.y_dim)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
y_one_hot,numpy.zeros((len(y),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
dist_info,"numpy.empty((num_samples,len(alphas[0,:])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
dist_trained_info,"numpy.empty((num_samples,len(alphas[0,:])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
b,numpy.concatenate(b),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
xaxis,"numpy.mean([alphas[0,:-1],alphas[0,1:]],axis=0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
mu,"numpy.mean(dist_info,axis=0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
xaxis,"numpy.mean([alphas[0,:],alphas[0,:]],axis=0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
mu,"numpy.mean(dist_trained_info,axis=0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
sd,"numpy.std(dist_info,axis=0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
sd,"numpy.std(dist_trained_info,axis=0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
alphas,numpy.log(alphas),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
alphas,numpy.log(alphas),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
alpha,"numpy.tile(b,[num_samples,1])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
y_one_hot,"numpy.tile(y_one_hot,[num_samples,1])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
xscatter,"numpy.tile(xaxis,(20,1)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
xscatter,"numpy.tile(xaxis,(20,1)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
imarray,"numpy.pad(imarray,pad_arg,'constant',constant_values=255)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
"f,ax","matplotlib.pyplot.subplots(figsize=(6,3)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
"f,ax","matplotlib.pyplot.subplots(figsize=(6,3)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_10,CLUSTER_7
states,numpy.array(states),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
actions,numpy.array(actions),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
rewards,"numpy.array(rewards,dtype=np.float32)",CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
next_states,numpy.array(next_states),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
dones,"numpy.array(dones,dtype=np.uint8)",CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
sum_payoffs+,numpy.mean(payoffs_window),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
sum_payoffs+,numpy.mean(payoffs_window),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
self.buffer,collections.deque(maxlen=buffer_size),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
payoffs_window,collections.deque(maxlen=100),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
img,matplotlib.pyplot.imshow(env.render(mode='rgb_array'),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
start_time,time.time(),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
end_time,time.time(),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
random_num,random.random(),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
self.seed,random.seed(seed),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
self.seed,random.seed(seed),CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
self.experience,"collections.namedtuple(""Experience"",field_names=[""state"",""action"",""reward"",""next_state"",""done""])",CLUSTER_5,CLUSTER_4,CLUSTER_5,CLUSTER_9,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(dummies,target,random_state=42)",CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
dummies,"pandas.get_dummies(features,columns=categorical_col)",CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
dtree,sklearn.tree.DecisionTreeRegressor(),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
dtree,sklearn.tree.DecisionTreeRegressor(max_depth=1),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
svc,sklearn.svm.SVC(),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
Lasso,sklearn.pipeline.make_pipeline(Lasso(),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
Ridge,sklearn.pipeline.make_pipeline(StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
KNeighborsRegressor,sklearn.pipeline.make_pipeline(StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
dtree,sklearn.ensemble.RandomForestRegressor(max_depth=2),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
dtree,sklearn.ensemble.RandomForestRegressor(max_depth=depth),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
dtree,sklearn.ensemble.GradientBoostingRegressor(),CLUSTER_4,CLUSTER_2,CLUSTER_10,CLUSTER_0,CLUSTER_0
arr1,"numpy.array([[1,2,3,4],[8,9,10,11]])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
data,"pandas.read_csv(""CustomerChurnModel.txt"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
statinfo,os.stat(dest_filename),CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
changes,"json.load(open(os.path.join(path,'problem-'+str(i)",CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
df,pandas.DataFrame(columns=['different_author']),CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
val,pandas.DataFrame(columns=['different_author']),CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
model,sklearn.linear_model.LogisticRegression(),CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
dvec2_lreg_model,sklearn.linear_model.LogisticRegression(),CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
ngrams,collections.defaultdict(int),CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
ngrams,collections.defaultdict(int),CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
token_counter,collections.Counter(tok.upper(),CLUSTER_16,CLUSTER_3,CLUSTER_9,CLUSTER_3,CLUSTER_0
match,"pandas.DataFrame(columns=['originalcompanynames','cleancompanyname','companymatches','fuzzratio'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
dna,"pandas.read_csv(""../data/working/dna_clean.csv"",index_col=[0])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
x,"pandas.read_csv(""../data/working/ndc_dna_matching.csv"",index_col=[0])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ndc,"pandas.read_csv(""../data/working/ndc_clean.csv"",index_col=[0])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
writer,pandas.ExcelWriter('OUTPUT_MainAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_CrcyAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_FLAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_REAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_REITAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_EqAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_CommAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_PublicAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_PrivateAsset_ExcessRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_CrcyAsset_FullRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_FLAsset_FullRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_REAsset_FullRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_REITAsset_FullRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_CommAsset_FullRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_EqAsset_FullRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_PublicAsset_FullRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
writer,pandas.ExcelWriter('OUTPUT_PrivateAsset_FullRetAnalysis.xlsx'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
x,"pandas.concat([IndicatorUniv['TFP_dUtil'].value,
IndicatorUniv['TFP_dTfp'].value,
IndicatorUniv['TFP_dTfpUtil'].value,
IndicatorUniv['RGDPG_QSurprise'].value,
IndicatorUniv['RGDPG_Quarterly'].value,
IndicatorUniv['RGDPG_Quarterly'].quarterlyDiff,
IndicatorUniv['Inf_QSurprise'].value,
IndicatorUniv['Inf_Quarterly'].quarterlyDiff],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_EqBond,pandas.concat([SP500.excessQuarterlyRet.shift(2),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_EqBondFull,pandas.concat([SP500.quarterlyRet.shift(2),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_RGDPGSur,pandas.concat([RGDPGSur.shift(3),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_InfQ,pandas.concat([InfQ.shift(3),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_InfChg,pandas.concat([InfChg.shift(3),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_InfSur,pandas.concat([InfSur.value.shift(3),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_dUtil,pandas.concat([dUtil.value.shift(3),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_dTfpUtil,pandas.concat([dTfpUtil.value.shift(3),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_LiqChgQ,pandas.concat([LiqChgQ.shift(2),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_LiqChgQEqBond,"pandas.concat([X_LiqChgQ,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_LiqChgQEqBondFull,"pandas.concat([X_LiqChgQ,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_InfSurRGDPGSur,"pandas.concat([X_InfSur,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_InfSurdUtil,"pandas.concat([X_InfSur,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_InfSurdTfpUtil,"pandas.concat([X_InfSur,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_InfSurInfQ,"pandas.concat([X_InfSur,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
X_dUtildTfpUtil,"pandas.concat([X_dUtil,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp.append(regAnalysis(data_df,"pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp.append(regAnalysis(data_df,"pandas.concat([ast_excessQuarterlyRet,X_EqBond])",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp.append(regAnalysis(data_df,"pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp.append(regAnalysis(data_df,"pandas.concat([ast_quarterlyRet,X_EqBondFull])",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp.append(regAnalysis(data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp.append(regAnalysis(data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp.append(regAnalysis(data_df,"pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp.append(regAnalysis(data_df,"pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_LiqChgQEqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_LiqChgQEqbondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_LiqChgQEqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_LiqChgQEqbondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurRGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurRGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurRGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurRGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurdUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurdUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurdTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurdTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurdTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurdTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_dUtildTfpUitlAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Main_dUtildTfpUitlAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_dUtildTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
MainFull_dUtildTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FL_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
FLFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
RE_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REIT_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
REITFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Eq_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
EqFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Comm_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CommFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Crcy_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
CrcyFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Public_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PublicFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_EqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_EqBondAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_EqBondAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_EqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_RGDPGSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_RGDPGSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_RGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfSurAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfSurAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfChgAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfChgAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfChg],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_dUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_dUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_dTfpUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_dTfpUtilAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_dTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_LiqChgQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_LiqChgQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_LiqChgQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_LiqChgQEqBond],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_LiqChgQEqBondFull],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurRGDPGSur],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfSurdUtilAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_InfSurdTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
Private_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfSurInfQAnalysis_common[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
PrivateFull_InfSurInfQAnalysis_longest[ast],"regAnalysis(data_df=pandas.concat([ast_quarterlyRet,X_InfSurInfQ],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_excessQuarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
data_df,"pandas.concat([ast_quarterlyRet,X_dUtildTfpUtil],axis=1)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
tmp_df,"pandas.concat(tmp_list,axis=0)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_18,CLUSTER_0
J_history,numpy.zeros(iterations),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
theta,"pandas.DataFrame([0,0,0])",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,"pandas.read_csv(""E:/Study/Python/Assignments/machine-learning-ex1/ex1data2.txt"",names=['Size','Beds','Price'])",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax,"seaborn.lineplot(data=costJ,palette=""tab10"",linewidth=2.5)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
geo,"pandas.read_csv('geo.csv',sep=';',encoding='latin-1')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
effectifs,"pandas.read_csv('effectifs.csv',sep=';')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
density_cantons,"pandas.read_csv(fname,delimiter=';')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cantons_geo,json.load(open('cantons.json'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
coord,numpy.array(canton['geometry']['coordinates'][0]),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
ret,numpy.zeros(x.size),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
v_tilde,numpy.zeros(nu.shape),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
v_tilde,numpy.zeros(nu.shape),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
all_pts,"numpy.concatenate((x.reshape(-1,1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
gt,numpy.zeros_like(nu),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
density_cantons['population'],"numpy.fromiter(map(lambdax:x.replace('','')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
j,numpy.argmin(c-v_tilde),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
self.sortindex,"numpy.argsort(self.pdf,axis=None)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
self.cdf,numpy.cumsum(self.pdf),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,"numpy.searchsorted(self.cdf,choice)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
expo,numpy.exp((v-all_dists),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
f,numpy.exp((v-all_dists),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
all_dists,"numpy.sqrt(np.sum((np.concatenate((x.reshape(-1,1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,numpy.vstack(index),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
index,"numpy.unravel_index(index,self.shape)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"x,y","numpy.meshgrid(np.linspace(min_x,
max_x,N)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"x,y","numpy.meshgrid(np.linspace(m[:,0].min()",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cont,"ax.contourf(x,y,np.argmax(f,axis=1).reshape(200,200)*vem[::2,::2],636,alpha=0.5,cmap=matplotlib.pyplot.get_cmap('gist_earth')",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(15,10)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(15,10)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(20,10)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(6,4)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(6,4)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(15,15)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(15,15)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(40,40)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
source,requests.get('https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv('toronto.csv',header=None)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
Z1,"numpy.dot(W1,X)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z2,"numpy.dot(W2,A1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z1,"numpy.dot(W1,X)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z2,"numpy.dot(W2,A1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z1,"numpy.dot(W1,X)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z2,"numpy.dot(W2,A1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z1,"numpy.dot(W1,X)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z2,"numpy.dot(W2,A1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
idx,numpy.argmax(yhat),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
max_idx,numpy.argmax(yhat),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
max_index,numpy.argmax(yhat),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
data,"pandas.read_csv('LengthScoreComments.csv',sep=',')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Unbias,"pandas.read_csv('FilteredSubLengthScore.csv',sep=',')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
timeScore,"pandas.read_csv('TimeVsScore.csv',sep=',')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
plot,"matplotlib.pyplot.scatter(x=X,y=Y,s=Size)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(15,15)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
poly_reg,sklearn.preprocessing.PolynomialFeatures(degree=2),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
linear_regression,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
linear_regression2,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
actual,numpy.array(y_test),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('SMSSpamCollection',sep='\t',names=['Status','SMS'])",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
model,sklearn.naive_bayes.MultinomialNB(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
outid,"re.findall(bomid,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
outname,"re.findall(stname,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
mmtemp,"re.findall(temptype,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
outid,"re.findall(bomid,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
outname,"re.findall(stname,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
mmtemp,"re.findall(temptype,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
lat,"re.findall(relat,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
long,"re.findall(relong,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
st,"re.findall(restate,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
outid,"re.findall(bomid,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
outname,"re.findall(stname,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
mmtemp,"re.findall(temptype,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
lat,"re.findall(relat,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
long,"re.findall(relong,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
st,"re.findall(restate,txt)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
bomid,"re.compile(""stationnumber:[\d]*"")",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
stname,"re.compile(""Stationname:[\w]*"")",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
temptype,"re.compile(""[\w]{3}imumTemp"")",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
relat,"re.compile(r""(Latitude)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
relong,"re.compile(r""(Longitude)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
restate,"re.compile(r""State:(.*)",CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
result,requests.get(url),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
x,"numpy.linspace(0,4,10001)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
indices_hold_out,numpy.flatnonzero(x>1980),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
x_valid,"numpy.take(x,indices_hold_out,axis=0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
y_valid,"numpy.take(y,indices_hold_out,axis=0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
x_train,"numpy.delete(x,indices_hold_out,axis=0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
y_train,"numpy.delete(y,indices_hold_out,axis=0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
sol,"scipy.integrate.odeint(sys,ics,t)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t,"numpy.linspace(0,100,10000)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
padded_image,"numpy.zeros((padded_height,padded_width,channels)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
channel_dct_quantized,"numpy.zeros(channel_size,dtype=quantization_table_data_type)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
image_YCrCb_decoded,"numpy.zeros(image_size,dtype=np.uint8)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
decoded_channel,"numpy.zeros(channel_size,dtype=channel_dct_quantized.dtype)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
lena_image_original_size,numpy.shape(lena_image_original),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
lena_image_cropped_size,numpy.shape(lena_image_cropped),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
lena_image_size,numpy.shape(lena_image),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
assertnp.shape(macroblock),=numpy.shape(quantization_table),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
channel_size,numpy.shape(channel),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
channel_size,numpy.shape(channel_dct_quantized),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
number_of_channels,numpy.shape(image0),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
quantized_macroblock_dct,"numpy.divide(macroblock_dct,quantization_table)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv('winequality-red.csv',sep=';')",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.merge(mf,alpha_PD,left_index=True,right_index=True)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
mf,"pandas.read_csv('../data/mapping_MrOS_add.txt',sep='\t',dtype=str,index_col='
mf.head()",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
alpha_PD,"pandas.read_csv('../data/57316-alpha_PD/alpha-diversity.tsv',sep='\t',index_col=0)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
bean,sklearn.datasets.load_boston(),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
boston,sklearn.datasets.load_boston(),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
clf,sklearn.linear_model.LinearRegression(),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
COMP['Date'],pandas.DatetimeIndex(COMP['Date']),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
COMP,pandas.read_csv('data/COMP.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
COMP['Date'],pandas.to_datetime(COMP.Year),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
daterange,"pandas.DataFrame(pd.date_range('2017-01-01','2019-05-10')",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
sims,pandas.DataFrame(sims),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
data,"pandas.concat([daterange,data],1)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
data,"pandas.crosstab(data.date,data.vg_rider,values=data.vg_points,aggfunc=sum)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
data,pandas.read_pickle('vg_points.pkl'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
vg_riders,pandas.read_pickle('vg_rider_list.pkl'),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
returns,numpy.log(data.cumsum(),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
sigma,numpy.sqrt(C.sum(),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
p,"numpy.asmatrix(np.mean(ret,axis=1)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
C,numpy.asmatrix(np.cov(ret),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
features,"numpy.array(data.iloc[:,2:13])",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
targets,"numpy.where(targets=='kontrol',0,1)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
indices,numpy.argsort(f_values),CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
targets,"numpy.ravel(data.iloc[:,0])",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
texts,"numpy.hstack((srtd_importances,srtd_fvalues,srtd_pvalues)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
decimal_features,pandas.DataFrame(features),CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
dummies_data_a,"pandas.get_dummies(data.iloc[:,2:13])",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
dummies_data_b,"pandas.get_dummies(imputed_decimal_b,sparse=True,columns=columns)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
dummies_columns_b,"pandas.get_dummies(imputed_decimal_b,sparse=True,columns=columns)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
dummies_data_b2,"pandas.get_dummies(imputed_categorical_b2,sparse=True,columns=columns)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
dummies_columns_b2,"pandas.get_dummies(imputed_categorical_b2,sparse=True,columns=columns)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
dummies_data_b3,"pandas.get_dummies(imputed_decimal_b3,sparse=True,columns=columns)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
dummies_columns_b3,"pandas.get_dummies(imputed_decimal_b3,sparse=True,columns=columns)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
data,"pandas.read_csv('colon_cancer.txt',sep=""\t"",encoding=""ISO-8859-1"")",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(nrows=1,ncols=3,figsize=(15,5)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(nrows=1,ncols=2,figsize=(15,5)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(nrows=1,ncols=1,figsize=(7,5)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(nrows=1,ncols=3,figsize=(15,5)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(nrows=1,ncols=3,figsize=(15,5)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
table_,"matplotlib.pyplot.table(cellText=texts,rowLabels=srtd_columns,colLabels=collabels,loc='center')",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X_train_a,X_test_a,y_train_a,y_test_a","sklearn.model_selection.train_test_split(imputed_knn_a,targets,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X_train_b,X_test_b,y_train_b,y_test_b","sklearn.model_selection.train_test_split(imputed_decimal_b,targets,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X_train_b,X_test_b,y_train_b,y_test_b","sklearn.model_selection.train_test_split(dummies_data_b,
targets,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X_train_b2,X_test_b2,y_train_b2,y_test_b2","sklearn.model_selection.train_test_split(dummies_data_b2,
targets,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X_train_b3,X_test_b3,y_train_b3,y_test_b3","sklearn.model_selection.train_test_split(dummies_data_b3,
targets,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X_train_c,X_test_c,y_train_c,y_test_c","sklearn.model_selection.train_test_split(imputed_decimal_b.values,
targets,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X_train_c2,X_test_c2,y_train_c2,y_test_c2","sklearn.model_selection.train_test_split(imputed_decimal_b3.values,
targets,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(y_test,y_prob)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(y_test,y_prob)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(estimator=classifier,
X=X,
y=y,
cv=5,
scoring='f1')",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
gs,"sklearn.model_selection.GridSearchCV(estimator=classifier,
param_grid=param_grid,
scoring='f1',
cv=5,
n_jobs=-1)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
pipe_lr,"sklearn.pipeline.Pipeline([['clf',LogisticRegression(random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
pipe_rf,"sklearn.pipeline.Pipeline([['clf',RandomForestClassifier()",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
pipe_svm,"sklearn.pipeline.Pipeline([['clf',SVC(probability=True)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"f_a,p_a","sklearn.feature_selection.f_classif(imputed_knn_a,targets)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"f_b,p_b","sklearn.feature_selection.f_classif(dummies_data_b,targets)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"f_b2,p_b2","sklearn.feature_selection.f_classif(dummies_data_b2,targets)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"f_b3,p_b3","sklearn.feature_selection.f_classif(dummies_data_b3,targets)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"f_c,p_c","sklearn.feature_selection.f_classif(imputed_decimal_b.values,targets)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"f_c2,p_c2","sklearn.feature_selection.f_classif(imputed_decimal_b3.values,targets)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
forest,"sklearn.ensemble.RandomForestClassifier(n_estimators=10000,
random_state=0,
n_jobs=-1)",CLUSTER_3,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
files,os.listdir(directory),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
ax,matplotlib.pyplot.gca(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
ax,matplotlib.pyplot.gca(),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(2,2,figsize=(16,32)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
i,"random.randint(0,positive-1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
j,"random.randint(0,len(words[i])",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
i,"random.randint(0,positive-1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
j,"random.randint(0,len(words[i])",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
lda_tfidf,"sklearn.decomposition.LatentDirichletAllocation(n_components=4,max_iter=300,n_jobs=16,
evaluate_every=10,random_state=12)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
actions,pandas.DataFrame(topic_actions),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
weights_df,"pandas.DataFrame({'term':ft,'weight':weights})",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
weights,numpy.asarray(transformed_weights.mean(axis=0),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
df2,"pandas.DataFrame(merge.groupby(['SERVD_MSISDN','Date'])",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
df2,"pandas.DataFrame(merge.groupby(['SERVD_MSISDN','hour'])",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
a,"pandas.DataFrame(merge.groupby(['SERVD_MSISDN','CHRG_ID'])",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
df,"pandas.DataFrame({""Sess"":[0],""Loc"":[0]})",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
main,"pandas.concat([main,main2])",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
los,"pandas.concat([los,los2])",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
Session_location,"pandas.concat([df,pd.Series(merge.Time_LD_OP_DTM.unique()",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
merge,"pandas.merge(los_merge,main_merge,on=['CHRG_ID','GRP_CD'])",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
main,"pandas.read_csv('2190715_inputMAIN-5GSOFCS_MDN10-samAllc_0711-0712.txt',delimiter='|')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
main2,"pandas.read_csv('2190718_inputMAIN-5GSOFCS_MDN10-samAllc_0713-0717.txt',delimiter='|')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
los,"pandas.read_csv('2190715_inputLOS-5GSOFCS_MDN10-samAllc_0711-0712.txt',delimiter='|')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
los2,"pandas.read_csv('2190718_inputLOS-5GSOFCS_MDN10-samAllc_0713-0717.txt',delimiter='|')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(25,5)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(25,5)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(30,15)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(30,15)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(30,8)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(30,45)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(25,10)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(25,45)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(25,10)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(25,10)",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
ax,"seaborn.regplot(x=""Loc"",y=""Sess"",data=Session_location,color='r')",CLUSTER_14,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
dataset,pandas.read_csv('C:/Users/Adinath/Desktop/Data_Science/Assignments/SupportVectorMachines/forestfires.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"f,ax","matplotlib.pyplot.subplots(figsize=(18,18)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rfe,"sklearn.feature_selection.RFE(extraTreesRegressor,5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
extraTreesRegressor,sklearn.ensemble.ExtraTreesRegressor(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Lreg,sklearn.linear_model.LinearRegression(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lasso,sklearn.linear_model.Lasso(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge,sklearn.linear_model.Ridge(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.explained_variance_score(Y,prediction)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.explained_variance_score(Y,prediction_lasso)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.explained_variance_score(Y,prediction_ridge)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.explained_variance_score(Y,prediction_knreg)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.explained_variance_score(Y,prediction_rfreg)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.explained_variance_score(Y,prediction_svr)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mae,"sklearn.metrics.mean_absolute_error(prediction,Y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mae,"sklearn.metrics.mean_absolute_error(prediction_lasso,Y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mae,"sklearn.metrics.mean_absolute_error(prediction_ridge,Y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mae,"sklearn.metrics.mean_absolute_error(prediction_knreg,Y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mae,"sklearn.metrics.mean_absolute_error(prediction_rfreg,Y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mae,"sklearn.metrics.mean_absolute_error(prediction_svr,Y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knreg,sklearn.neighbors.KNeighborsRegressor(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rfreg,sklearn.ensemble.RandomForestRegressor(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svr,sklearn.svm.SVR(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
missing_data,pandas.DataFrame({'MissingRatio':houses_na}),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
skewness,"pandas.DataFrame(houses.skew(axis=0,skipna=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
output,"pandas.DataFrame({'Id':test2.Id,'SalePrice':preds})",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
houses,"pandas.concat([train,test],sort=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
houses,pandas.get_dummies(houses),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train,"pandas.read_csv(""train.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test,"pandas.read_csv(""test.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test2,"pandas.read_csv(""test.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mask,"numpy.zeros_like(corrmat,dtype=np.bool)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
preds,numpy.exp(pred),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train['SalePrice'],numpy.log(train['SalePrice']),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,numpy.corrcoef(train[cols].values.T),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax,"seaborn.heatmap(corrmat,mask=mask,cmap='RdYlGn',linewidths=0.2,annot_kws={'size':20})",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax,"seaborn.heatmap(cm,cbar=True,annot=True,cmap='RdYlGn',square=True,fmt='.2f',annot_kws={'size':12},yticklabels=cols.values,xticklabels=cols.values)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
houses[feat],"scipy.special.boxcox1p(houses[feat],lam)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,sklearn.preprocessing.StandardScaler(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lbl,sklearn.preprocessing.LabelEncoder(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
g_boost,"sklearn.ensemble.GradientBoostingRegressor(n_estimators=6000,learning_rate=0.01,
max_depth=5,max_features='sqrt',
min_samples_leaf=15,min_samples_split=10,
loss='ls',random_state=42
)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kf,sklearn.model_selection.KFold(n_splits=5),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kf,sklearn.model_selection.KFold(n_splits=5),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kf,sklearn.model_selection.KFold(n_splits=5),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
kf,sklearn.model_selection.KFold(n_splits=5),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
g_boost_pred,"sklearn.model_selection.cross_val_score(g_boost,X_train,y_train,cv=kf,n_jobs=-1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge_pred,"sklearn.model_selection.cross_val_score(ridge,X_train,y_train,cv=kf,n_jobs=-1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lasso_pred,"sklearn.model_selection.cross_val_score(lasso,X_train,y_train,cv=kf,n_jobs=-1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
elnet_pred,"sklearn.model_selection.cross_val_score(elnet,X_train,y_train,cv=kf,n_jobs=-1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid1,"sklearn.model_selection.GridSearchCV(g_boost,param_grid,cv=10,verbose=1,scoring='neg_mean_squared_error',n_jobs=-1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid2,"sklearn.model_selection.RandomizedSearchCV(g_boost,param_grid,cv=10,verbose=1,scoring='neg_mean_squared_error',n_jobs=-1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge,"sklearn.kernel_ridge.KernelRidge(alpha=0.6,kernel='polynomial',degree=2,coef0=2.5)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lasso,"sklearn.linear_model.Lasso(alpha=0.001,random_state=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
elnet,"sklearn.linear_model.ElasticNet(alpha=0.0005,l1_ratio=.9,random_state=3)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
f,numpy.fft.fft2(norm_image),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fshift,numpy.fft.fftshift(f),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(10,5)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2,ax3,ax4)","matplotlib.pyplot.subplots(1,4,figsize=(20,10)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(20,10)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
wb,"pandas.read_csv(path+'Quad_Regression_1.tab',sep='\t')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('train.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
vals,numpy.array(vals),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
new_vals,"numpy.unique(vals[:,1],return_counts=True)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"return(100.0*np.sum(np.argmax(predictions,1)","=numpy.argmax(labels,1)",CLUSTER_10,CLUSTER_11,CLUSTER_0,CLUSTER_0,CLUSTER_1
"return(100.0*np.sum(np.argmax(predictions,1)","=numpy.argmax(labels,1)",CLUSTER_10,CLUSTER_11,CLUSTER_0,CLUSTER_0,CLUSTER_1
extra_signs_org,numpy.array(extra_signs),CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
extra_signs_label,numpy.array(extra_signs_label),CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
top5,numpy.array(top5),CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
index,"random.randint(0,len(X_train)",CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
"fig,sign","matplotlib.pyplot.subplots(nrows=3,ncols=4,figsize=(10,10)",CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
"fig,ax","matplotlib.pyplot.subplots(1,1,figsize=(10,5)",CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
"fig,sign","matplotlib.pyplot.subplots(nrows=3,ncols=4,figsize=(10,10)",CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
"fig,sign","matplotlib.pyplot.subplots(nrows=12,ncols=2,figsize=(15,52)",CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
signs_train_label,"pandas.merge(signs_train,signs_label)",CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
signs_train,pandas.DataFrame(Series(y_train),CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
signs_label,pandas.DataFrame(Series(signname),CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
dirs,os.listdir(path),CLUSTER_29,CLUSTER_3,CLUSTER_11,CLUSTER_9,CLUSTER_3
rssi,numpy.array(fnew[rssi_code_traj].tolist(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
trans,numpy.array(manhattan_ls),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
p0,"numpy.array([0.6,0.4])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
emi,"numpy.array([[0.5,0.1],
[0.4,0.3],
[0.1,0.6]])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
trans,"numpy.array([[0.7,0.3],
[0.4,0.6]])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
obs_seq,"numpy.array([0,0,1,2,2])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
error_mean,numpy.mean(ls),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_data[traj_sum],numpy.sqrt(((fnewMatrix-patternMatrix),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
trans_matrix,"pandas.DataFrame(trans,index=emission_matrix.columns,columns=emission_matrix.columns)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_p0,"pandas.DataFrame(p0,index=['Healthy','Fever'],columns=['Prob'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_emi,"pandas.DataFrame(emi,index=['Normal','Cold','Dizzy'],columns=['Healthy','Fever'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_trans,"pandas.DataFrame(trans,index=['fromHealthy','fromFever'],columns=['toHealthy','toFever'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
timeCol,"pandas.Series(map(lambdax:x[1],merge_data['MRTime'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
station,"pandas.merge(file_2g,gong_can,left_on=[RNCID,CellID],right_on=['LAC','CI'],how='inner')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
file_2g,pandas.read_csv(filename),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
gong_can,"pandas.read_csv(""final_2g_gongcan.csv"",encoding='gbk')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_data,"pandas.read_csv('train_data_after_process.csv',index_col=""Unnamed:0"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
trace,"pandas.read_csv('newtrace.csv',index_col=""Unnamed:0"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
timeCol,"pandas.to_datetime(timeCol,format=""%H:%M:%S.%f"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
trace['MRTime'],"pandas.to_datetime(trace['MRTime'],format=""%Y-%m-%d%H:%M:%S.%f"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
a,math.sin(dlat/2),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,pandas.DataFrame(),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
X['sex'],pandas.get_dummies(X.sex),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv(""../data/train.csv"")",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
model,"sklearn.linear_model.LogisticRegression(penalty='l2',C=1)",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
base_roc_auc,"sklearn.metrics.roc_auc_score(y_test,base_rate_model(X_test)",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
logit_roc_auc,"sklearn.metrics.roc_auc_score(y_test,model.predict(X_test)",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(y_test,model.predict_proba(X_test)",CLUSTER_1,CLUSTER_10,CLUSTER_10,CLUSTER_0,CLUSTER_1
P,"numpy.zeros((y_test.shape[0],len(model_list)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
P_proba,numpy.zeros((len(model_list),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
P,"numpy.zeros((inp.shape[0],10,len(pred_base_learners)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pre_data,"numpy.matmul(data,W.T)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
PCA_project,"numpy.matmul(pre_data,W.T)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_average,"numpy.argmax(P_ave,axis=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
P_ave,"numpy.mean(P_proba,axis=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
P,pandas.DataFrame(P),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.manifold.MDS(n_components=2,n_init=1,max_iter=100)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(final_data,target,random_state=RS,test_size=0.25)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"xtrain_base,xpred_base,ytrain_base,ypred_base","sklearn.model_selection.train_test_split(
X_train,y_train,test_size=0.5,random_state=RS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.accuracy_score(y_test,P.loc[:,m])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
iso_proj,sklearn.manifold.Isomap(n_components=2),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
digits_proj,"sklearn.manifold.TSNE(n_components=2,random_state=RS)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lle_proj,sklearn.manifold.LocallyLinearEmbedding(n_components=2),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca,sklearn.decomposition.PCA(n_components=50),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca,sklearn.decomposition.PCA(n_components=2),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc,"sklearn.svm.SVC(C=1,kernel='rbf')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,sklearn.naive_bayes.GaussianNB(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,sklearn.neighbors.KNeighborsClassifier(n_neighbors=10),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,sklearn.linear_model.LogisticRegression(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,sklearn.ensemble.RandomForestClassifier(n_estimators=200),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf,sklearn.ensemble.RandomForestClassifier(n_estimators=200),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.ensemble.GradientBoostingClassifier(learning_rate=0.1,n_estimators=100,max_depth=6,subsample=1.0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gb,"sklearn.ensemble.GradientBoostingClassifier(learning_rate=0.1,n_estimators=100,max_depth=6,subsample=1.0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
meta_learner,"sklearn.ensemble.GradientBoostingClassifier(
n_estimators=1000,
max_features=4,
max_depth=3,
subsample=0.5,
learning_rate=0.005,
random_state=RS
)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
trainArray,numpy.array(trainWindow),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
validArray,numpy.array(validWindow),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
predArray,numpy.array(predWindow),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
realpredArray,numpy.array(realpredArray),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_train,"numpy.concatenate((day[:,np.newaxis],
true_kor[:,np.newaxis],
pred_kor[:,np.newaxis],
week[:,np.newaxis])",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_train,"numpy.concatenate((day[:,np.newaxis],
true_kor[:,np.newaxis],
pred_kor[:,np.newaxis],
week[:,np.newaxis])",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_test,"numpy.concatenate((day_val[:,np.newaxis],
true_kor_val[:,np.newaxis],
pred_kor_val[:,np.newaxis],
week_val[:,np.newaxis])",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_submit,"numpy.concatenate((numpy.concatenate(day_ar,1)",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_val,"numpy.concatenate((day_val.reshape(-1,1)",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
predResult1,"numpy.concatenate([firstResult[:,[1]],secondResult[:,[1]],thirdResult[:,[1]]],1)",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
predResult0,"numpy.concatenate([firstResult[:,[0]],secondResult[:,[0]],thirdResult[:,[0]]],1)",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
predResult1,"numpy.concatenate([firstResult[:,[1]],secondResult[:,[1]],thirdResult[:,[1]]],1)",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
predResult0,"numpy.concatenate([firstResult[:,[0]],secondResult[:,[0]],thirdResult[:,[0]]],1)",CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_train_df,pandas.DataFrame(pred_train),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_valid_df,pandas.DataFrame(pred_train),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_test_df,pandas.DataFrame(pred_test),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_submit_df,pandas.DataFrame(pred_submit),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
pred_val_df,pandas.DataFrame(pred_val),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
enc,sklearn.preprocessing.OneHotEncoder(n_values=7),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
enc,sklearn.preprocessing.OneHotEncoder(n_values=7),CLUSTER_22,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
radial_mean,"ndimage.mean(f,labels=rbin,index=numpy.arange(1,rbin.max()",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
x,"numpy.arange(0,5,1)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
x,"numpy.arange(0,5,1)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
ecm_around_spot_bgsub,numpy.array(deepcopy(ecm_around_spot),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
synapse_around_spot_bgsub,numpy.array(deepcopy(original_synapse_at_single_spot),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
ecm_around_spot_bgsub,numpy.array(deepcopy(ecm_around_spot),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
synapse_around_spot_bgsub,numpy.array(deepcopy(original_synapse_at_single_spot),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
"dfmeans[""meanvglutintinbinoverall""]","numpy.around(dfmeans[""meanvglutintinbinoverall""],1)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
mean_intensty_original_synapse,numpy.mean(original_synapse_at_single_spot),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
bg_ecm,"numpy.mean(ndi.median_filter(ecm_around_spot_bgsub,size=5)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
bg_synapse,"numpy.mean(ndi.median_filter(synapse_around_spot_bgsub,size=5)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
mean_intensty_original_synapse,numpy.mean(original_synapse_at_single_spot),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
bg_ecm,"numpy.mean(ndi.median_filter(ecm_around_spot_bgsub,size=5)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
bg_synapse,"numpy.mean(ndi.median_filter(synapse_around_spot_bgsub,size=5)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
y,numpy.sum(x),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
ecm_around_spot_bgsub,"numpy.divide(ecm_around_spot_bgsub,255)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
synapse_around_spot_bgsub,"numpy.divide(synapse_around_spot_bgsub,255)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
ecm_around_spot_bgsub,"numpy.divide(ecm_around_spot_bgsub,255)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
synapse_around_spot_bgsub,"numpy.divide(synapse_around_spot_bgsub,255)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
r,"numpy.hypot(X-sx/2,Y-sy/2)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
ecm_around_spot_bgsub,"numpy.subtract(ecm_around_spot_bgsub,bg_ecm)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
synapse_around_spot_bgsub,"numpy.subtract(synapse_around_spot_bgsub,bg_synapse)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
ecm_around_spot_bgsub,"numpy.subtract(ecm_around_spot_bgsub,bg_ecm)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
synapse_around_spot_bgsub,"numpy.subtract(synapse_around_spot_bgsub,bg_synapse)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
"a,b,c,d,e","numpy.split(df3,[int(.2*len(df3)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
"m,b","numpy.polyfit(x,y,1)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
"m,b","numpy.polyfit(x,y,1)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
figure,"matplotlib.pyplot.figure(figsize=(15,15)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
fig,"matplotlib.pyplot.figure(figsize=(20,10)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
fig,"matplotlib.pyplot.figure(figsize=(20,10)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
fig,"matplotlib.pyplot.figure(figsize=(20,20)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
fig,"matplotlib.pyplot.figure(figsize=(8,4)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
fig,"matplotlib.pyplot.figure(figsize=(5,5)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
fig,"matplotlib.pyplot.figure(figsize=(5,5)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
fig,"matplotlib.pyplot.figure(figsize=(12,4)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
"spots_labeled,cc_num",scipy.ndimage.label(spots_mask),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
"spots_labeled,cc_num",scipy.ndimage.label(spots_mask),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
df,pandas.DataFrame(ecm_distribution_around_synapses),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
dfmeans,pandas.DataFrame(means_in_bins_exps),CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
dfnew,"pandas.concat([a,b,c,d,e],axis=0,ignore_index=True)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
'''g,"seaborn.barplot(x=""meanvglutintinbinoverall"",y=""meantnr"",
data=dfmeans,alpha=0.3,ci=None,color='magenta')",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
'''g,"seaborn.barplot(x=""meanvglutintinbinoverall"",y=""meantnr"",
data=dfmeans,alpha=0.3,ci=None,color='magenta')",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
g,"seaborn.scatterplot(x=""ecmmeanintnorm2med"",
y=""vglutmeanintnorm2med"",data=df2,
color=""magenta"",alpha=0.3,s=80)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
g,"seaborn.scatterplot(x=""vglutmeanintnorm2med"",
y=""ecmmeanintnorm2med"",data=df2plot,
color=""magenta"",alpha=0.3,s=80)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
g,"seaborn.swarmplot(x=""meanvglutintinbinoverall"",y=""meantnr"",
data=dfmeans,size=10,color='magenta',linewidth=1,)",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
g,"seaborn.swarmplot(x=""meanvglutintinbinoverall"",y=""meantnr"",
data=dfmeans,size=10,linewidth=1,hue=""Expname"")",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
radial_mean,"scipy.ndimage.mean(f,labels=rbin,index=np.arange(1,rbin.max()",CLUSTER_14,CLUSTER_3,CLUSTER_11,CLUSTER_24,CLUSTER_8
x,"numpy.arange(0,img1_gray.shape[1],16)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y,"numpy.arange(0,img1_gray.shape[0],16)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
p0,"numpy.concatenate([xv.reshape(-1,1,1)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lines,numpy.int32(lines+0.5),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lines,"numpy.vstack([x,y,x+fx,y+fy])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"xv,yv","numpy.meshgrid(x,y)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
x,"numpy.array([-.86,-.3,-.05,.73])",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
d,"pymc.Binomial('d',n=n,p=theta,value=numpy.array([0.,1.,3.,5.])",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
y,"pre_poll_train['inclusion'];N=len(y);M=numpy.empty((1000,4)",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
pre_poll['inclusion'],numpy.where(pd.isnull(pre_poll['bush']),CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
"M[b,:]",numpy.matrix(result.params),CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
BB,"pandas.DataFrame({'constant':M[:,0],'edu':M[:,1],'state':M[:,2],'age':M[:,3]})",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
pre_poll,pandas.read_csv('F:/Bayesianlab/polls.csv'),CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
encode,sklearn.preprocessing.LabelEncoder(),CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(test['inclusion'],y_pred)",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fpr,tpr,_","sklearn.metrics.roc_curve(test['inclusion'],random_pred[:,1])",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(test['inclusion'],knn_pred)",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
knn_impute,sklearn.neighbors.KNeighborsClassifier(n_neighbors=5),CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
random_for,sklearn.ensemble.RandomForestClassifier(n_estimators=1000),CLUSTER_22,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
X1,"numpy.array([""funnylol"",""letsplaybaseball"",""foodisreadyforyou""])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
x_test,numpy.array(['Iamnothappy']),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
X_indices,"numpy.zeros((m,max_len)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
emb_matrix,"numpy.zeros((vocab_len,emb_dim)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
num,numpy.argmax(pred[i]),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
y_test_oh,numpy.eye(C),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,Y,random_state=0,test_size=0.3)",CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('../data/cleaned/cancer.csv'),CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sel_chi2,"sklearn.feature_selection.SelectKBest(chi2,k='all')",CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sel_f,"sklearn.feature_selection.SelectKBest(f_classif,k='all')",CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_new,"sklearn.feature_selection.SelectFpr(chi2,alpha=0.01)",CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_new,"sklearn.feature_selection.SelectFpr(f_classif,alpha=0.01)",CLUSTER_20,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Ytrain,pandas.DataFrame(encoder.transform(Ytrain),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
Ytest,pandas.DataFrame(encoder.transform(Ytest),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
prob,pandas.DataFrame(svc.decision_function(Xtest),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
valuec,pandas.Series(Ytest),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
df,"pandas.read_csv(""./data/weatherAUS5000.csv"",index_col=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
city11,"pandas.read_csv(""./data/cityll.csv"",index_col=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
city_climate,"pandas.read_csv(""./data/Cityclimate.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
samplecity,"pandas.read_csv(""./data/samplecity.csv"",index_col=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
city_index,numpy.argsort(dist),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
irange,"numpy.linspace(0.01,0.05,10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
irange,"numpy.linspace(1.0277,1.0366,10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
crange,"numpy.linspace(0.01,20,20)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
"Xtrain,Xtest,Ytrain,Ytest","sklearn.model_selection.train_test_split(X,Y,test_size=0.3,random_state=10)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
encoder,sklearn.preprocessing.LabelEncoder(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
si,"sklearn.impute.SimpleImputer(missing_values=np.nan,strategy=""most_frequent"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
si_mean,"sklearn.impute.SimpleImputer(missing_values=np.nan,strategy=""mean"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
oe,sklearn.preprocessing.OrdinalEncoder(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
ss,sklearn.preprocessing.StandardScaler(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
t0,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=kernel
,degree=1
,gamma=""auto""
,cache_size=5000)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=kernel
,degree=1
,gamma=""auto""
,class_weight=""balanced""
,cache_size=5000
)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=""linear""
,degree=1
,gamma=""auto""
,class_weight={1:10}
,cache_size=5000)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=""linear""
,degree=1
,gamma=""auto""
,class_weight={1:10}
,cache_size=5000)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=""linear""
,gamma=""auto""
,class_weight={1:1+i}
,cache_size=5000)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=""linear""
,gamma=""auto""
,class_weight={1:1+i}
,cache_size=5000)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=""linear""
,C=c
,gamma=""auto""
,class_weight=""balanced""
,cache_size=5000)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=""linear""
,C=1.0621052631578947
,gamma=""auto""
,class_weight=""balanced""
,cache_size=5000)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
svc,"sklearn.svm.SVC(kernel=""linear""
,C=1.0621052631578947
,gamma=""auto""
,class_weight=""balanced""
,cache_size=5000)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
area,"sklearn.metrics.roc_auc_score(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
"FPR,recall,thresholds","sklearn.metrics.roc_curve(Ytest,svc.decision_function(Xtest)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
recall,"sklearn.metrics.recall_score(Ytest,result)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
recall,"sklearn.metrics.recall_score(Ytest,result)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
recall,"sklearn.metrics.recall_score(Ytest,result)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
recall,"sklearn.metrics.recall_score(Ytest,result)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
recall,"sklearn.metrics.recall_score(Ytest,result)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
recall,"sklearn.metrics.recall_score(Ytest,result)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
recall,"sklearn.metrics.recall_score(Ytest,result)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
recall,"sklearn.metrics.recall_score(Ytest,prob.ypred,labels=1)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
score,"sklearn.metrics.accuracy_score(Ytest,prob.ypred)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_9,CLUSTER_0
tick_marks,numpy.arange(len(target_names),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
c_vals,"numpy.arange(0.05,1.5,0.05)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
accuracy,numpy.trace(cm),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm_df,"pandas.DataFrame(cm,
columns=['pred_1','pred_0'],
index=['true_1','true_0']
)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df_train_data,"pandas.read_csv('http://archive.ics.uci.edu/ml/machine-learning-databases/statlog/shuttle/shuttle.tst',header=None,sep='')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(6,6)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(6,6)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(8,4)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cmap,matplotlib.pyplot.get_cmap('Blues'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,"sklearn.linear_model.LogisticRegression(solver='lbfgs',penalty='none',max_iter=500)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,"sklearn.linear_model.LogisticRegression(solver='lbfgs',penalty='l2',C=c,max_iter=1000)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,"sklearn.linear_model.LogisticRegression(solver='lbfgs',max_iter=1000)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.3,random_state=36)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cv_scores,"sklearn.model_selection.cross_val_score(model,X_train,y_train,cv=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
dummy,sklearn.dummy.DummyClassifier(strategy='uniform'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
accuracy,"sklearn.metrics.accuracy_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
precision,"sklearn.metrics.precision_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
recall,"sklearn.metrics.recall_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
f1,"sklearn.metrics.f1_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fbeta_precision,"sklearn.metrics.fbeta_score(y_test,y_pred,0.5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fbeta_recall,"sklearn.metrics.fbeta_score(y_test,y_pred,2)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cr,"sklearn.metrics.classification_report(y_test,y_pred,target_names=['Negative','Positive'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fpr,tpr,thresholds","sklearn.metrics.roc_curve(y_test,probs)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"pres,rec,thresholds","sklearn.metrics.precision_recall_curve(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
auc,"sklearn.metrics.roc_auc_score(y_test,probs)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,sklearn.neighbors.KNeighborsClassifier(n_neighbors=7),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model,"sklearn.ensemble.RandomForestClassifier(n_estimators=22,random_state=36)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
Xdumm,"pandas.get_dummies(data=Xqual,drop_first=True,columns=['SEX',""EDUCATION"",""MARRIAGE""])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
testdumm,"pandas.get_dummies(data=test_set_qual,drop_first=True,columns=['SEX',""EDUCATION"",""MARRIAGE""])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(""train.csv"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_set,"pandas.read_csv(""test.csv"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_prep,"numpy.concatenate((normalized_X,Xdumm)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_test,"numpy.concatenate((normalized_test_set,testdumm)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mask,"numpy.zeros_like(corr,dtype=np.bool)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_val,y_train,y_val","sklearn.model_selection.train_test_split(X_prep,y,test_size=.2,random_state=42,stratify=y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train_rs,X_val_rs,y_train_rs,y_val_rs","sklearn.model_selection.train_test_split(X_prep,y,test_size=.2,random_state=42,stratify=y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train_us,X_val_us,y_train_us,y_val_us","sklearn.model_selection.train_test_split(X_prep,y,test_size=.1,random_state=42,stratify=y)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_val,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm_rs,"sklearn.metrics.confusion_matrix(y_val_rs,y_pred_rs)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm_us,"sklearn.metrics.confusion_matrix(y_val_us,y_pred_us)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
prf,"sklearn.metrics.precision_recall_fscore_support(y_val,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
prf_rs,"sklearn.metrics.precision_recall_fscore_support(y_val_rs,y_pred_rs)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
prf_us,"sklearn.metrics.precision_recall_fscore_support(y_val_us,y_pred_us)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
caffe_input,"numpy.asarray([net.transformer.preprocess('data',in_)",CLUSTER_23,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_1
mean,numpy.load(caffe_root+'python/caffe/imagenet/ilsvrc_2012_mean.npy'),CLUSTER_23,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_1
"X1,X2","numpy.meshgrid(np.arange(start=X_set[:,0].min()",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X1,X2","numpy.meshgrid(np.arange(start=X_set[:,0].min()",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dataset,pandas.read_csv('Wine.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,sklearn.preprocessing.StandardScaler(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca,sklearn.decomposition.PCA(n_components=2),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,sklearn.linear_model.LogisticRegression(random_state=0),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
data_ZP4,pandas.read_csv('/home/jan/Documents/Trainingsdaten/ZPs/ZP4/grid_size=874_threshold_porosity=125.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data_ZP1,pandas.read_csv('/home/jan/Documents/Trainingsdaten/ZPs/ZP1/grid_size=874_threshold_porosity=125.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data_ZP2,pandas.read_csv('/home/jan/Documents/Trainingsdaten/ZPs/ZP2/grid_size=874_threshold_porosity=125.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data_ZP3,pandas.read_csv('/home/jan/Documents/Trainingsdaten/ZPs/ZP3/grid_size=874_threshold_porosity=125.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data_ZP5,pandas.read_csv('/home/jan/Documents/Trainingsdaten/ZPs/ZP5/grid_size=874_threshold_porosity=125.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data_ZP6,pandas.read_csv('/home/jan/Documents/Trainingsdaten/ZPs/ZP6/grid_size=874_threshold_porosity=125.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data_ZP7,pandas.read_csv('/home/jan/Documents/Trainingsdaten/ZPs/ZP7/grid_size=874_threshold_porosity=125.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
data_ZP9,pandas.read_csv('/home/jan/Documents/Trainingsdaten/ZPs/ZP9/grid_size=874_threshold_porosity=125.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
image,"numpy.array(ndimage.imread(fname,flatten=False)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
start,"datetime.datetime(2015,1,1)",CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
end,"datetime.datetime(2017,1,1)",CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
start,"datetime.datetime(2010,1,1)",CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
end,"datetime.datetime(2017,1,1)",CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
df,pandas.read_csv(path.format('Feedback_evento.csv'),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df['data_hora'],pandas.to_datetime(df['data_hora']),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"f,ax","matplotlib.pyplot.subplots(1,2,figsize=(20,5)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(5,5)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(10,10)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(10,10)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
iris_df,"pandas.DataFrame(iris_data.data,columns=iris_data.feature_names)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
iris_data,sklearn.datasets.load_iris(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
logistic_model,sklearn.linear_model.LogisticRegression(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"w,b,X,Y","numpy.array([[1.],[2.]])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
w,"numpy.array([[0.1124579],[0.23106775]])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
X,"numpy.array([[1.,-1.1,-3.2],[1.2,2.,0.1]])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
image,"numpy.array(ndimage.imread(fname,flatten=False)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
Y_prediction,"numpy.zeros((1,m)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
cost,numpy.squeeze(cost),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
costs,numpy.squeeze(d['costs']),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
legend,"matplotlib.pyplot.legend(loc='uppercenter',shadow=True)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
statinfo,"os.stat(rootdir+""/""+Dir+""/""+subDir+""/""+file+""/""+inside_file)",CLUSTER_1,CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_1
self.shape,numpy.array(shape),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
acc,"numpy.zeros((50,)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
acc,"numpy.zeros((7,500)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X,Y","numpy.meshgrid(np.linspace(0,500,500)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
iden,numpy.eye(10),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
iden,numpy.eye(10),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
f,"matplotlib.pyplot.figure(figsize=(15,50)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(15,10)",CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
digits,sklearn.datasets.load_digits(),CLUSTER_20,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
Sum,numpy.sum((log(y+1),CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
holidays,"pandas.DataFrame({
'holiday':'holiday',
'ds':pd.to_datetime(days.values)",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
air_visit_data,"pandas.read_csv(""data/air_visit_data.csv"")",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
air_visit_data,"pandas.read_csv(""data/air_visit_data_totals.csv"")",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
day_info,"pandas.read_csv(""data/date_info.csv"")",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
air_data,"pandas.read_csv(""data/air_store_info.csv"")",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_0,CLUSTER_0
url_page,"requests.get(readurl,verify=False)",CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_23,CLUSTER_0
amazon_rev,"pandas.DataFrame(filtered_sent,columns=['Reviews'])",CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_23,CLUSTER_0
amazonReviews,"pandas.read_csv(""/Users/shwetatatiya/Desktop/AssignmentTextAnalytics/amazon_reviews.csv"")",CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_23,CLUSTER_0
amazon_rev['Sentiment_Polarity'],numpy.array([sentimental_analyze(word),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_23,CLUSTER_0
"x_train,x_test,y_train,y_test","sklearn.model_selection.train_test_split(x,y,test_size=0.2)",CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_23,CLUSTER_0
nb,sklearn.naive_bayes.MultinomialNB(),CLUSTER_16,CLUSTER_1,CLUSTER_10,CLUSTER_23,CLUSTER_0
J_plus,"numpy.zeros((num_parameters,1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
J_minus,"numpy.zeros((num_parameters,1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
gradapprox,"numpy.zeros((num_parameters,1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z1,"numpy.dot(W1,X)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z2,"numpy.dot(W2,A1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
Z3,"numpy.dot(W3,A2)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
dA2,"numpy.dot(W3.T,dZ3)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
dA1,"numpy.dot(W2.T,dZ2)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
logprobs,numpy.multiply(-np.log(A3),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
dZ2,"numpy.multiply(dA2,np.int64(A2>0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
dZ1,"numpy.multiply(dA1,np.int64(A1>0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
thetaplus,numpy.copy(parameters_values),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
thetaminus,numpy.copy(parameters_values),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
numerator,numpy.linalg.norm(grad-gradapprox),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
denominator,numpy.linalg.norm(grad),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
numerator,numpy.linalg.norm(grad-gradapprox),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
denominator,numpy.linalg.norm(grad),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
features_df,pandas.DataFrame(np.transpose(all_features),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
merged_df,"pandas.concat([complete_df,features_df],axis=1,sort=False)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
df,pandas.concat([pd.DataFrame(list(y),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
plagiarism_df,pandas.read_csv(csv_file),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
df,pandas.read_csv(csv_file),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
fake_df,"pandas.read_csv('test_csv/to_delete.csv',header=None)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
all_features,numpy.zeros((len(ngram_range),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
"df[""Category""]","numpy.where(df[""Category""].str.contains(""non"")",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
df['Class'],"numpy.where(df['Category']>0,1,(numpy.where(df['Category']<0,-1,0)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
intersection_list,"numpy.amin(ngram_array,axis=0)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
all_features[i],"numpy.squeeze(create_containment_features(complete_df,n)",CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
all_features[i],numpy.squeeze(create_lcs_features(complete_df),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
intersection,numpy.sum(intersection_list),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
answer_count,numpy.sum(ngram_array[answer_idx]),CLUSTER_29,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_0
result,json.loads(resp.decode('utf-8'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
result,json.loads(resp.decode('utf-8'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
result,json.loads(resp.decode('utf-8'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
result,json.loads(resp.decode('utf-8'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
result,json.loads(resp.decode('utf-8'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
result,json.loads(resp.decode('utf-8'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
table_ekf_output,"pandas.read_table(f,sep='\t',header=None,names=my_cols,lineterminator='\n')",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
index,"numpy.arange(10,60,10)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame(data=np.random.randint(1,101,20)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
image_predict,"requests.get('https://d17h27t6h515a5.cloudfront.net/topher/2017/August/599fd2ad_image-predictions/image-predictions.tsv',allow_redirects=True)",CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
tweets_without_retweet,pandas.DataFrame(tweets_without_retweet.tolist(),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
predict_clean,pandas.DataFrame(),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
temp,pandas.DataFrame(),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
temp,pandas.DataFrame(),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
all_columns,pandas.Series(list(api_clean),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
twitter_archive_df_clean,"pandas.merge(api_clean,twitter_archive_df_clean,
left_on='id',right_on='tweet_id',how='right')",CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
twitter_archive_df_clean,"pandas.merge(twitter_archive_df_clean,image_predict_clean,left_on='id',right_on='tweet_id',how='left')",CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
twitter_archive_df,pandas.read_csv('twitter-archive-enhanced.csv'),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
image_predict_df,pandas.read_csv(BytesIO(image_predict.content),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
predict_mappings,pandas.read_csv('predictions_mapping_master.csv'),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
twitter_archive_master,pandas.read_csv('twitter_archive_master.csv'),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
predictions_mapping_master,pandas.read_csv('predictions_mapping_master.csv'),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
twitter_archive_master['created_at'],pandas.to_datetime(twitter_archive_master.created_at),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.figure(),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
json_dict,json.loads(json_tweet),CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
twitter_archive_master.name.value_counts()[:10].sort_values(ascending,"True).plot.barh(width=0.9,color=seaborn.color_palette('deep',10)",CLUSTER_27,CLUSTER_9,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X,y","sklearn.datasets.make_moons(n_samples=200,noise=0.05,random_state=0)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(8,3)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
ac,"sklearn.cluster.AgglomerativeClustering(n_clusters=2,
affinity='euclidean',
linkage='complete')",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
km,"sklearn.cluster.KMeans(n_clusters=2,random_state=0)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
db,"sklearn.cluster.DBSCAN(eps=0.2,min_samples=5,metric='euclidean')",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
model,"sklearn.cluster.DBSCAN(eps=0.5,min_samples=5)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
iris,sklearn.datasets.load_iris(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_1
data,pandas.read_csv('student_data.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
X,"numpy.array(data[[""gre"",""gpa""]])",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
y,"numpy.array(data[""admit""])",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
del_w,numpy.zeros(weights.shape),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
loss,numpy.mean((out-targets),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
accuracy,numpy.mean(predictions==targets_test),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
nan_count,pandas.DataFrame(mortality.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
nan_count['mortality'],pandas.DataFrame(mortality.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
nan_count['income'],pandas.DataFrame(income.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
nan_count['growth_rate'],pandas.DataFrame(growth_rate.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
nan_count['gdp'],pandas.DataFrame(gdp.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
nan_count['food'],pandas.DataFrame(food.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
nan_count['hdi'],pandas.DataFrame(hdi.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
nan_count['unemployment'],pandas.DataFrame(unemployment.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
nan_count['policy'],pandas.DataFrame(policy.isnull(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_year,"pandas.DataFrame(growth_rate.iloc[:,0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_year,"pandas.DataFrame(gdp.iloc[:,0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_year,"pandas.DataFrame(gdp.iloc[:,0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_year,"pandas.DataFrame(food.iloc[:,0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_year,"pandas.DataFrame(income.iloc[:,0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_year,"pandas.DataFrame(unemployment.iloc[:,0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_year,"pandas.DataFrame(unemployment.iloc[:,0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_year,"pandas.DataFrame(food.iloc[:,0])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_dataset,"pandas.DataFrame(growth_rate.iloc[:,[0,1]])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
growth_rate2,"pandas.concat([growth_rate2,new_year])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gdp2,"pandas.concat([gdp2,new_year])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
child_mortality,"pandas.concat([child_mortality,new_year])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
food2,"pandas.concat([food2,new_year])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
income2,"pandas.concat([income2,new_year])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
unemployment2,"pandas.concat([unemployment2,new_year])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
unemployment2,"pandas.concat([unemployment2,new_year])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
food2,"pandas.concat([food,new_year])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
final_data,"pandas.merge(growth_rate2,gdp2,how='left',on=['country','year'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
final_data,"pandas.merge(final_data,child_mortality,how='left',on=['country','year'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
final_data,"pandas.merge(final_data,food2,how='left',on=['country','year'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
final_data,"pandas.merge(final_data,income2,how='left',on=['country','year'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
final_data,"pandas.merge(final_data,unemployment2,how='left',on=['country','year'])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
growth_rate,pandas.read_csv('/Users/RHedg/Desktop/project1/datasets/population_growth_annual_percent.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mortality,pandas.read_csv('/Users/RHedg/Desktop/project1/datasets/child_mortality_0_5_year_olds_dying_per_1000_born.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
food,pandas.read_csv('/Users/RHedg/Desktop/project1/datasets/food_supply_kilocalories_per_person_and_day.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
income,pandas.read_csv('/Users/RHedg/Desktop/project1/datasets/income_per_person_gdppercapita_ppp_inflation_adjusted.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gdp,pandas.read_csv('/Users/RHedg/Desktop/project1/datasets/gdppercapita_us_inflation_adjusted.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
hdi,pandas.read_csv('/Users/RHedg/Desktop/project1/datasets/hdi_human_development_index.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
unemployment,pandas.read_csv('/Users/RHedg/Desktop/project1/datasets/long_term_unemployment_rate_percent.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
policy,pandas.read_csv('/Users/RHedg/Desktop/project1/datasets/population_policies_aid_given_percent_of_aid.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scoreCardDF,"pandas.read_csv(""CollegeScorecard_Raw_Data/MERGED2013_14_PP.csv"",index_col=""INSTNM"",usecols=colsToLoad)",CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
dataFrame[colName],pandas.to_numeric(dataFrame[colName]),CLUSTER_0,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
matrix1,"numpy.array([[1,1],[2,2],[3,3]])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_10
matrix2,"numpy.array([[0],[0],[0]])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_10
vector1D,"numpy.array([1,1])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_10
vector2D,"numpy.array([[1],[1]])",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_10
a_prev,"numpy.zeros((n_a,1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_10
plot_df,"pandas.DataFrame(
pca.pca_comps[:,:2],columns=['pc1','pc2']
)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
plot_df,"pandas.DataFrame(
pca.pca_comps[:,:2],columns=['pc1','pc2']
)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
pca_df,"pandas.DataFrame(
pca.pca_comps[:,:5],
columns=['pc1','pc2',""pc3"",'pc4','pc5']
)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mfccs_standard,"pandas.DataFrame(standardizer.fit_transform(mfccs.iloc[:,:-3])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mfccs,"pandas.read_pickle(""../data/processed/mfcc_training_data.pickle"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
euc_distances,"sklearn.metrics.pairwise_distances(mean_mfcc_per_speaker.iloc[:,1:])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
euc_distances,"sklearn.metrics.pairwise_distances(mean_mfcc_standard_per_speaker.iloc[:,1:])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
standardizer,sklearn.preprocessing.StandardScaler(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
x,"numpy.expand_dims(x,axis=0)",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
losses_arr,numpy.array(losses),CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_0,CLUSTER_1
"|python-c""importjson;importsys;response",json.load(sys.stdin),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_0,CLUSTER_1
data,scipy.io.loadmat('faces.mat'),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(1,figsize=[scale*20.0/H*W,scale*20.0/cols*rows],dpi=300)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
fig,"plt.imshow(np.reshape(D[i,:],[H,W]),cmap=matplotlib.pyplot.get_cmap('gray')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.imshow(np.reshape(D[i,:],[H,W])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,(im_input,im_output)","matplotlib.pyplot.subplots(1,2,figsize=(15,35)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,axh","matplotlib.pyplot.subplots(1,4,figsize=(15,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,axr","matplotlib.pyplot.subplots(2,2,figsize=(15,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,axr","matplotlib.pyplot.subplots(2,2,figsize=(15,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,axmse","matplotlib.pyplot.subplots(2,2,figsize=(15,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,axs","matplotlib.pyplot.subplots(2,2,figsize=(15,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,axs","matplotlib.pyplot.subplots(2,2,figsize=(15,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,axx","matplotlib.pyplot.subplots(1,5,figsize=(15,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fig,axxs","matplotlib.pyplot.subplots(2,5,figsize=(15,5)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
autocorr_seq1,numpy.array(list(signal),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
autocorr_seq2,numpy.array([signal[0]]+list(np.zeros(signal.shape[0]-1),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
motion_kernel,"numpy.array([0.2,0.2,0.2,0.2,0.2])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
transformed,"numpy.zeros((data.shape[0],n_components)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
autocorr_seq,"numpy.correlate(signal,signal,mode='full')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
n,numpy.shape(D),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
H_conj,numpy.conj(H),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
wiener,"numpy.divide(P,P+np.ones_like(P)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
wiener,"numpy.divide(H_conj,np.power(np.abs(H)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
P,numpy.power(np.abs(np.fft.fft2(g),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
convolved,"numpy.stack([convolved0,convolved1,convolved2],axis=2)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image_h,numpy.asscalar(data['H']),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image_w,numpy.asscalar(data['W']),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sig,numpy.copy(snd[interval[0]:interval[1]]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
g,numpy.copy(img_as_float(image),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
image,numpy.copy(img_as_float(image),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
g,numpy.copy(img_as_float(g),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
g,numpy.copy(img_as_float(g),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
g,"numpy.pad(g,img_pad,mode='constant')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
h,"numpy.pad(h,ker_pad,mode='constant')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
g,"numpy.pad(g,img_pad,mode='constant')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
h,"numpy.pad(h,ker_pad,mode='constant')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
a_opt,"numpy.linalg.pinv(autocorr_mat[:-1,:-1])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
G,numpy.fft.fft2(g),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
G,numpy.fft.fft2(g),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
G,numpy.fft.fft2(g),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
H,numpy.fft.fft2(h),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
G,numpy.fft.fft2(g),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
G,numpy.fft.fft2(g),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
H,numpy.fft.fft2(h),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
denoised,"numpy.fft.ifft2(np.multiply(wiener,G)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
inversedb,"numpy.fft.ifft2(np.divide(G,H)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
wiener_db,"numpy.fft.ifft2(np.multiply(wiener,G)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
T,"scipy.linalg.toeplitz(autocorr_seq2,autocorr_seq1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
autocorr_mat,scipy.linalg.toeplitz(autocorr_M),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
restored_lpc5,"scipy.signal.lfilter(A5,[1],sig)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
restored_lpc10,"scipy.signal.lfilter(A10,[1],sig)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
restored_lpc50,"scipy.signal.lfilter(A50,[1],sig)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
restored_lpc100,"scipy.signal.lfilter(A100,[1],sig)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
convolved,"scipy.signal.convolve2d(in1=image,in2=kernel,boundary=boundary,mode=mode)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
convolved0,"scipy.signal.convolve2d(in1=d1,in2=kernel,boundary=boundary,mode=mode)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
convolved1,"scipy.signal.convolve2d(in1=d2,in2=kernel,boundary=boundary,mode=mode)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
convolved2,"scipy.signal.convolve2d(in1=d3,in2=kernel,boundary=boundary,mode=mode)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
script_path,os.getcwd(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sample_class_labels,numpy.array(sample_class_labels),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sample_class_values,numpy.array(sample_class_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
all_coefs,"numpy.zeros((n_splits,dat.shape[1])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
orphancols,numpy.where(abs(cnv_data),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mean_fpr,"numpy.linspace(0,1,100)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"feature_table.loc[agene,'aggPos']","numpy.apply_along_axis(
lambdax:'__'.join(x)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
min_class_count,"numpy.unique(dat_target,return_counts=True)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
all_coefs,"pandas.DataFrame(all_coefs,columns=dat.columns.values)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
feature_table,pandas.DataFrame(index=fset),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
remaining_features,pandas.DataFrame(index=sorted(list(features_sets[key].difference(new_features_sets[key]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
writer,pandas.ExcelWriter(fpath),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
writer,pandas.ExcelWriter(fpath),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
writer,pandas.ExcelWriter(fpath),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_train_predictions,pandas.Series(index=y.index),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_test_predictions,"pandas.Series(y_test_predictions,index=X_test.index)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
performance,pandas.concat(perf_reports),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
data_uniq,"pandas.concat([cnv_data_uniq,var_data],axis=1,join='inner')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
labels_to_check,"pandas.concat([ground_truth,sample_info[sample_dataset_column]],axis=1,sort=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
feature_table,"pandas.concat([feature_table,genes_info.set_index(gene_id_col)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.concat(
[df,remaining_features.loc[list(remaining_uniq_gene_set)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_performance,"pandas.concat([all_aucs,all_f1_scores],axis=1,sort=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cnv_data,"pandas.read_csv(cnv_data_fpath,sep='\t',header=0,index_col=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
var_data,"pandas.read_csv(var_data_fpath,sep='\t',header=0,index_col=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(fpath,sep='\t',header=0,index_col=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
data_train,"pandas.read_csv(os.path.join(output_directory_split,'data_train.csv')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_train,"pandas.read_csv(os.path.join(output_directory_split,'y_train.csv')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
data_test,"pandas.read_csv(os.path.join(output_directory_split,'data_test.csv')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_test,"pandas.read_csv(os.path.join(output_directory_split,'y_test.csv')",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(fpaths_dict[key],sep='\t',header=0,index_col=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
k_fold,sklearn.model_selection.StratifiedKFold(n_splits=n_splits),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"data_train,data_test,y_train,y_test","sklearn.model_selection.train_test_split(
data_uniq,ground_truth,
train_size=split_train_size,
test_size=None,
random_state=split_random_state,
stratify=stratify_by
)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
roc_auc,"sklearn.metrics.auc(fpr,tpr)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fs_f1scores[key],"sklearn.metrics.f1_score(y_test,y_test_predictions)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fs_precisions[key],fs_recalls[key],_","sklearn.metrics.precision_recall_curve(y_test,y_proba)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"),palette","seaborn.color_palette(""colorblind"",n_colors=2)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
image,"numpy.array(ndimage.imread(fname,flatten=False)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
result_max,"numpy.argmax(result,axis=1)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
test_max,"numpy.argmax(Y_test,axis=1)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
true_num,numpy.sum(result_bool),CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
result_bool,"numpy.equal(result_max,test_max)",CLUSTER_2,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
x,"pandas.DataFrame(cancer['data'],columns=cancer['feature_names'])",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
target,"pandas.DataFrame(cancer['target'],columns=['target'])",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
result,"pandas.concat([x,target],axis=1)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
cancer,sklearn.datasets.load_breast_cancer(),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,random_state=0)",CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=1),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
bars,matplotlib.pyplot.bar(np.arange(4),CLUSTER_3,CLUSTER_1,CLUSTER_10,CLUSTER_0,CLUSTER_0
mean_duration,numpy.mean(no_rand_action),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
mean_duration,numpy.mean(rand_action),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
embedding,"pandas.DataFrame(data=data,index=keys)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
bag2d,numpy.array([vec(word),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
bag2d,numpy.array([vec(word),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
i,numpy.argmin(delta),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
delta,"numpy.sum(diff*diff,axis=1)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
doc2vec,"numpy.sum(vdoc,axis=0)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,10)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(10,10)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
grad,numpy.zeros_like(img),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
k,"numpy.outer(k,k)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
img_shift,"numpy.roll(numpy.roll(img,sx,1)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
hw,numpy.float32(img.shape[:2]),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
k,"numpy.float32([1,4,6,4,1])",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
hw,numpy.float32(img.shape[:2]),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
img0,numpy.float32(img0),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
a,"numpy.uint8(np.clip(a,0,1)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
a,"numpy.uint8(np.clip(a,0,1)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
a,"numpy.uint8(np.clip(a,0,1)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_6
master,pandas.read_csv('master.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
master['Type'],numpy.where(master['gdp_per_capita($),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,sharey=True)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('../data/titanic.csv'),CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
grid_search_acc,"sklearn.model_selection.GridSearchCV(estimator=ANN,param_grid=params,scoring='accuracy',cv=5,n_jobs=-1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid_search_rec,"sklearn.model_selection.GridSearchCV(estimator=ANN_rec,param_grid=params,scoring=rec_avg,cv=5,n_jobs=-1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid_search_prec_avg,"sklearn.model_selection.GridSearchCV(estimator=ANN_rec_prec_avg,param_grid=params,scoring=prec_avg,cv=5,n_jobs=-1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,Y_train,Y_test","sklearn.model_selection.train_test_split(X,Y,test_size=0.30,random_state=123)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.DataFrame({'Accuracy':grid_search_acc.cv_results_['mean_test_score'],
'Precision(Avg)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
writer,pandas.ExcelWriter('Neural_Network.xlsx'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
data,pandas.read_csv('z_norm.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
rec_avg,"sklearn.metrics.make_scorer(recall_score,average='macro')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
prec_avg,"sklearn.metrics.make_scorer(precision_score,average='macro')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"_,ax","matplotlib.pyplot.subplots(1,1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"_,ax","matplotlib.pyplot.subplots(1,1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores_mean,numpy.array(scores_mean),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
senal,numpy.zeros(t.shape),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
bitsRx,numpy.zeros(bits.shape),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t,numpy.zeros(t_aten[-1]+t_serv[-1]+1),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Xt,numpy.zeros(t.shape),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Es,numpy.sum(sinus**2),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Ep,numpy.sum(Rx[k*p:(k+1),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
err,numpy.sum(np.abs(bits-bitsRx),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t_inte,numpy.ceil(X.rvs(N),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t_serv,numpy.ceil(Y.rvs(N),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sinus,numpy.sin(2*np.pi*f*tp),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sigma,numpy.sqrt(Pn),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
tp,"numpy.linspace(0,T,p)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t,"numpy.linspace(0,N*T,N*p)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
X,scipy.stats.bernoulli(0.5),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
X,scipy.stats.expon(scale=1/lam),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Y,scipy.stats.expon(scale=1/nu),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Xva,"scipy.stats.truncnorm(-2,2)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"a,b,c","matplotlib.pyplot.hist(X,20)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"a,b,c","matplotlib.pyplot.hist(Y,20)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Ps,"scipy.integrate.trapz(Pinst,t)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fw,PSD","scipy.signal.welch(senal,fs,nperseg=1024)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"fw,PSD","scipy.signal.welch(Rx,fs,nperseg=1024)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
response,requests.get(url),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
st_list,pandas.read_json('/Users/taj/GitHub/scraping/stayz/WebData/nsw_extract/stayz_nsw_extract_'+date_str+'.json'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
geo_list,pandas.read_json('/Users/taj/GitHub/scraping/stayz/WebData/nsw_geocoded/stayz_geocoded_full.json'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
geo_list,pandas.read_json('/Users/taj/GitHub/scraping/stayz/WebData/nsw_geocoded/stayz_geocoded_full.json'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
check_geo,pandas.read_json('/Users/taj/GitHub/scraping/stayz/WebData/nsw_geocoded/stayz_geocoded_full.json'),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
date_str,datetime.datetime.now(),CLUSTER_13,CLUSTER_5,CLUSTER_6,CLUSTER_33,CLUSTER_1
df,"pandas.read_csv('D:/Workspace/Deep-Learning/dataset/sonar.csv',header=None)",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
e,sklearn.preprocessing.LabelEncoder(),CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
"X_train,X_test,Y_train,Y_test","sklearn.model_selection.train_test_split(X,Y,test_size=0.3,
random_state=seed)",CLUSTER_3,CLUSTER_12,CLUSTER_10,CLUSTER_0,CLUSTER_0
data,pandas.read_csv('data.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
indices,numpy.argsort(feature_importances),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_df,pandas.DataFrame(test_df),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_df,"pandas.concat([data_1,data_2])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
total_df,"pandas.concat([train_df,test_df])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_df,"pandas.date_range('2016-10-01',periods=31,freq='D')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
data_1,pandas.read_csv('./input/zhenjiang_power.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
data_2,pandas.read_csv('./input/zhenjiang_power_9.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"train_df.loc[:,'record_date']",pandas.to_datetime(train_df['record_date']),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
rf,sklearn.ensemble.RandomForestRegressor(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid,"sklearn.model_selection.GridSearchCV(rf,param_grid=param_grid,cv=3,n_jobs=8)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
%timeC,"numpy.dot(A,B)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.dot(self.W,input)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
input_clamp,"numpy.clip(input,eps,1-eps)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
input_clamp,"numpy.clip(input,eps,1-eps)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.sum(np.power(input-target,2)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.maximum(input,0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
grad_input,"numpy.multiply(grad_output,input>0)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
self.output,"numpy.subtract(input,input.max(axis=1,keepdims=True)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
%timeC,"numpy.stack(np.dot(A[i].T,B)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
image,"numpy.array(ndimage.imread(fname,flatten=False)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
X_my_sentences,"numpy.array([""iadoreyou"",""iloveyou"",""funnylol"",""letsplaywithaball"",""foodisready"",""notfeelinghappy""])",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
Y_my_labels,"numpy.array([[0],[0],[2],[1],[4],[3]])",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
X1,"numpy.array([""funnylol"",""letsplaybaseball"",""foodisreadyforyou""])",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
x_test,numpy.array(['notfeelinghappy']),CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
Y,"numpy.asarray([5,0,0,5,4,4,4,6,6,4,1,1,5,6,6,3,6,3,4,4])",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
X,"numpy.asarray(['Iamgoingtothebartonight','Iloveyou','missyoumydear',
'Letsgopartyanddrinks','Congratsonthenewjob','Congratulations',
'Iamsohappyforyou','Whyareyoufeelingbad','Whatiswrongwithyou',
'Youtotallydeservethisprize','Letusgoplayfootball',
'Areyoudownforfootballthisafternoon','Workhardplayharder',
'Itissuprisinghowpeoplecanbedumbsometimes',
'Iamverydisappointed','Itisthebestdayinmylife',
'IthinkIwillendupalone','Mylifeissoboring','Goodjob',
'Greatsoawesome'])",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
b,"numpy.zeros((n_y,)",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
dW,"numpy.dot(dz.reshape(n_y,1)",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
num,numpy.argmax(pred[i]),CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
y_test_oh,numpy.eye(C),CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
nba,"pandas.read_csv(""nba.csv"")",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
load_pca_df,"pandas.DataFrame(data=load_pca5_sco,columns=['loadpc1','loadpc2','loadpc3','loadpc4','loadpc5'])",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
fnc2_pca_df,"pandas.DataFrame(data=fnc2_pca5_sco,columns=['fncpc1','fncpc2','fncpc3','fncpc4','fncpc5'])",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
test,pandas.DataFrame({'Id':Id_no}),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
load_pca_df,"pandas.concat([loading[['Id']],load_pca_df],axis=1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
fnc2_pca_df,"pandas.concat([fnc2[['Id']],fnc2_pca_df],axis=1)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
submit_df,"pandas.melt(test_pred_df,id_vars=[""Id""],value_name='Predicted')",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
train_scores,"pandas.read_csv(""data/train_scores.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
fnc,"pandas.read_csv(""data/fnc.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
loading,"pandas.read_csv(""data/loading.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
icn_no,"pandas.read_csv(""data/ICN_numbers.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
id_site2,"pandas.read_csv(""data/reveal_ID_site2.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
submission,"pandas.read_csv(""data/sample_submission.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
fnc2,"pandas.read_csv(""data/fnc.csv"")",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
load_pca5,sklearn.decomposition.PCA(n_components=5),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
fnc2_pca5,sklearn.decomposition.PCA(n_components=5),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
ypca_pred_train,"sklearn.model_selection.cross_val_predict(model,Xpca_train,ypca_train[col],cv=5,n_jobs=-1,verbose=2)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
y_pred_train,"sklearn.model_selection.cross_val_predict(model,X_train,y_train[col],cv=3,n_jobs=-1,verbose=10)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
model,"sklearn.ensemble.RandomForestRegressor(random_state=29,
n_estimators=20
)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
model,"sklearn.ensemble.RandomForestRegressor(random_state=29

)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
model,sklearn.ensemble.RandomForestRegressor(random_state=29),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
model,"sklearn.ensemble.RandomForestRegressor(
max_depth=10,
min_samples_split=10,
min_samples_leaf=5
)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
gs,"sklearn.model_selection.GridSearchCV(model,grid_params,n_jobs=-1,cv=cv,verbose=2,scoring='neg_mean_absolute_error')",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
gs,"sklearn.model_selection.GridSearchCV(model,grid_params,n_jobs=-1,cv=cv,verbose=2,scoring='neg_mean_absolute_error')",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
cv,"sklearn.model_selection.KFold(n_splits=5,shuffle=True,random_state=29)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
cv,"sklearn.model_selection.KFold(n_splits=5,shuffle=True,random_state=29)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
fit,"matplotlib.pyplot.plot(t,result.best_fit,'r-',label=r'$p(t)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(figsize=(w,h)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
dataSummaryTable,pandas.DataFrame({'PeakPData(psi),CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
shot_data,"pandas.read_csv(shot,index_col=""Time[s]"")",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
i,"scipy.integrate.simps(p,t)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
train_y,numpy.array(train_df['interest_level'].apply(lambdax:target_num_map[x]),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_blend_x,"numpy.zeros((train_x.shape[0],N_class*N_params)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_blend_x_mean,"numpy.zeros((test_x.shape[0],N_class*N_params)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_blend_x_gmean,"numpy.zeros((test_x.shape[0],N_class*N_params)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_blend_x_j,"numpy.zeros((test_x.shape[0],N_class*fold)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_total,"numpy.zeros((train_X.shape[0],3)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_total,"numpy.zeros((test_X.shape[0],3)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score_total+,numpy.mean(blend_scores_xgb),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_blend_x_xgb,pandas.DataFrame(train_total),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_blend_x_xgb_mean,pandas.DataFrame(test_total),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
out_df,"pandas.DataFrame(tmp_test_mean[:,:3])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_X_0322,pandas.read_csv(data_path+'train_BM_MB_add03052240.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_X_0322,pandas.read_csv(data_path+'test_BM_MB_add03052240.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_X,pandas.read_csv(data_path+'train_CV_MS_52571.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_X,pandas.read_csv(data_path+'test_CV_MS_52571.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
time_feature,pandas.read_csv(data_path+'listing_image_time.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_df,pandas.read_json('../input/train.json'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_df,pandas.read_json('../input/test.json'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
skf,"sklearn.model_selection.KFold(n_splits=fold,shuffle=True,random_state=randomseed)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
score,"sklearn.metrics.log_loss(val_y_fold,val_y_predict_fold)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fold_start,time.time(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
now,datetime.datetime.now(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xx,"numpy.arange(np.min(data[:,0])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
t,"numpy.ones([1,numPnt1])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
	Sw,"numpy.sum(Sw1,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
	mean1,"numpy.atleast_2d(np.mean(data1,0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
	mean2,"numpy.atleast_2d(np.mean(data2,0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
t,"numpy.hstack((t,np.zeros([1,numPnt0])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
data,"numpy.vstack((data,np.random.multivariate_normal(mean0,cov,numPnt0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
	Sw1,"numpy.dstack([(data1[i,:]-mean1)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
	Sw2,"numpy.dstack([(data2[i,:]-mean2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"	[l,v]",numpy.linalg.eig(np.linalg.inv(Sw),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"count,bin_edges",numpy.histogram(df_can['2013']),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"count,bin_edges",numpy.histogram(df_can['2013']),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"count,bin_edges","numpy.histogram(df_t,15)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"count,bin_edges","numpy.histogram(df_t,15)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
"count,bin_edges","numpy.histogram(df_cof,15)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df_can,"pandas.read_excel('https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/DV0101EN/labs/Data_Files/Canada.xlsx',
sheet_name='CanadabyCitizenship',
skiprows=range(20)",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df_hist,pandas.DataFrame(hist.history),CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
df_data,"pandas.DataFrame(data=data,columns=['identity','imagename','latent'])",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
df_cos_dist_out,"pandas.DataFrame(data_result,columns=['identity','imagename','total_images_identity','TP','TN','FP','FN','precision','recall','f1','accuracy','total_images','FP_List','FN_List'])",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
df_feat_classes,"pandas.DataFrame(columns=['features','LeftClasses','RightClasses'])",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
df_feat_sim_score,"pandas.DataFrame(columns=['features','featuresimilarityscore'])",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
csv_data,pandas.read_csv('15features.csv'),CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
train_images,os.listdir(train_path),CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
val_images,os.listdir(val_path),CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
feature_list,numpy.array(feature_list),CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
feature_wise_pred_y,numpy.array(feature_wise_pred_y),CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
latent_pred_y,numpy.array(latent_pred_y),CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
loaded_image_shifted,"numpy.roll(axis=0,a=loaded_image,shift=rand)",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
total,"numpy.sum((tp,tn,fp,fn)",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
fig,"matplotlib.pyplot.figure(figsize=(80,200)",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
fig,"matplotlib.pyplot.figure(figsize=(30,30)",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
"f,ax","matplotlib.pyplot.subplots(1,8)",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
"f,ax","matplotlib.pyplot.subplots(1,2)",CLUSTER_15,CLUSTER_3,CLUSTER_11,CLUSTER_5,CLUSTER_9
fig,matplotlib.pyplot.gcf(),CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
ax,"matplotlib.pyplot.subplot(5,5,1+i)",CLUSTER_2,CLUSTER_6,CLUSTER_4,CLUSTER_0,CLUSTER_1
Data,numpy.array(Data),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(1,facecolor='white')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(1,facecolor='white')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
createPlot.ax1,"matplotlib.pyplot.subplot(111,frameon=False)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
createPlot.ax1,"matplotlib.pyplot.subplot(111,frameon=False,**axprops)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,sklearn.tree.DecisionTreeClassifier(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,sklearn.tree.DecisionTreeClassifier(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dot_data,"sklearn.tree.export_graphviz(clf,feature_names=Data.columns[:-1],class_names=Data.columns[-1]
,filled=True
,rounded=True)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
Data,pandas.DataFrame(Data),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
tem,"pandas.concat([Data.iloc[:,0],pd.DataFrame(tem)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"Data.iloc[:,-1]",sklearn.preprocessing.LabelEncoder(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
encoder,sklearn.preprocessing.OrdinalEncoder(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
encoder2,sklearn.preprocessing.OneHotEncoder(categories='auto'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
hticks,"numpy.linspace(-1.5,1.5,101)",CLUSTER_3,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
vticks,"numpy.linspace(-1.5,1.5,101)",CLUSTER_3,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
"aa,bb","numpy.meshgrid(hticks,vticks)",CLUSTER_3,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
dstr,"scipy.signal.convolve2d(srcf[:,:,0],kernel_r,boundary='symm',mode='same')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dstg,"scipy.signal.convolve2d(srcf[:,:,1],kernel_r,boundary='symm',mode='same')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dstb,"scipy.signal.convolve2d(srcf[:,:,2],kernel_r,boundary='symm',mode='same')",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
kernel_r,"numpy.array([
[-1,-1,-1],
[-1,9,-1],
[-1,-1,-1]
])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
dst,numpy.zeros_like(srcf),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
srcf,numpy.float32(src),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
rho,"numpy.arange(dimension,dtype=float)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
mu,numpy.zeros(dimension),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
P_sample_array,"numpy.zeros([dimension,dimension,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
sig_array,"numpy.concatenate(
[[3],np.repeat([2],11)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
ensemble_array,"numpy.ones(
[dimension,ens_size,ens_ens_size,
])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
s_array,"numpy.ones([total_sig,rho_array.size,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
U_array,"numpy.ones([obs_size,total_sig,rho_array.size,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
V_array,"numpy.ones([dimension,total_sig,rho_array.size,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
V_average_angle_2_truth,"numpy.ones(
[sig_bin_num,rho_array.size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
V_average_angle,"numpy.ones(
[sig_bin_num,rho_array.size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
error_n2,"numpy.ones(
[sig_bin_num,rho_array.size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
exp_error_n2,"numpy.ones(
[sig_bin_num,rho_array.size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
opt_rho_array,numpy.ones(sig_bin_num),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
opt_s_array,"numpy.ones([total_sig,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
opt_U_array,"numpy.ones([obs_size,total_sig,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
opt_V_array,"numpy.ones([dimension,total_sig,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
reduced_array,"numpy.ones([obs_size,
dimension,
ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
angle_2_truth,numpy.ones(ens_ens_size),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
ens_error_n2,numpy.ones(ens_ens_size),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
angles,numpy.ones(comb_num),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
errors,numpy.ones(comb_num),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
sample_U_array,"numpy.ones([obs_size,total_sig,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
sample_s_array,"numpy.ones([total_sig,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
sample_V_array,"numpy.ones([dimension,total_sig,ens_ens_size])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
sample_angle,numpy.ones(sig_bin_num),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
angles,numpy.ones(ens_ens_size),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
eye_array,numpy.repeat(np.eye(dimension),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
dist,numpy.arccos(sigmas.min(),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
dist,numpy.arccos(sigmas),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
rho_array,"numpy.linspace(0.01,0.3,40)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
proj_array,"numpy.einsum('ij...,jk...->ik...',proj_array,this_proj)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
"P_sample_array[:,:,ens_ens_num]","numpy.cov(ensemble_array[:,:,ens_ens_num])",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
H,numpy.eye(dimension),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
R,numpy.eye(obs_size),CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
norm0,"scipy.linalg.norm(V0,ord=2,axis=0)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
norm1,"scipy.linalg.norm(V1,ord=2,axis=0)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
ens_error_n2[ens_count],"scipy.linalg.norm(
reduced_array[:,:,ens_count]-reduced_true,
ord=2)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
this_error,"scipy.linalg.norm(
reduced_array[:,:,ens_count]
-reduced_array[:,:,other_ens_count],
ord=2)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
sigmas,"scipy.linalg.svd(
IPs/np.sqrt(norm0*norm1)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
sigmas,"scipy.linalg.svd(
IPs,
compute_uv=False)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
im,"matplotlib.pyplot.imshow(X,vmin=vmin,vmax=vmax,cmap=cmap)",CLUSTER_2,CLUSTER_8,CLUSTER_5,CLUSTER_0,CLUSTER_11
bd,"pandas.read_csv(""train.csv"")",CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
corregida,pandas.read_csv('Nueva_BD.csv'),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(16,12)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(16,12)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(16,12)",CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('/Users/vijay/soil/train.csv'),CLUSTER_29,CLUSTER_3,CLUSTER_12,CLUSTER_0,CLUSTER_0
"'a',href",re.compile('^(/wiki/),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_33,CLUSTER_1
"returnbs.find('div',{'id':'bodyContent'}).find_all('a',href",re.compile('^(/wiki/),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_33,CLUSTER_1
"forlinkinbs.find_all('a',href",re.compile('^(/wiki/),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_33,CLUSTER_1
"forlinkinbs.find_all('a',href",re.compile('^(/wiki/),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_33,CLUSTER_1
"forlinkinbs.find_all('a',href",re.compile('^(/|.*'+includeUrl+'),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_33,CLUSTER_1
"forlinkinbs.find_all('a',href",re.compile('^(http|www),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_33,CLUSTER_1
credit_df,"pandas.read_csv('credit_data.txt',delimiter='\t',low_memory=False,parse_dates=[""issue_d""])",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
le[label],sklearn.preprocessing.LabelEncoder(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
le[label],sklearn.preprocessing.LabelEncoder(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cfm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cfm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cfm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cfm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cfm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
acc,"sklearn.metrics.accuracy_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
acc,"sklearn.metrics.accuracy_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
acc,"sklearn.metrics.accuracy_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
acc,"sklearn.metrics.accuracy_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
acc,"sklearn.metrics.accuracy_score(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model_DecisionTree,sklearn.tree.DecisionTreeClassifier(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
model_AdaBoost,(AdaBoostClassifier(base_estimator=sklearn.tree.DecisionTreeClassifier(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc_model,"sklearn.svm.SVC(kernel='rbf',C=1.0,gamma=0.1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
svc_model,"sklearn.svm.SVC(kernel='rbf',C=1.0,gamma=0.1)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
movies,pandas.DataFrame(imdb.top_250(),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
test2,pandas.DataFrame(movie1),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
colsRes,numpy.array(colsRes),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
cols,numpy.array(cols),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
colstest,numpy.array(cols),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
rf,sklearn.ensemble.RandomForestRegressor(n_estimators=100),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
html,requests.get(address),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
counter,collections.Counter(tokens),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
regex,re.compile('[^a-zA-Z]'),CLUSTER_9,CLUSTER_3,CLUSTER_12,CLUSTER_23,CLUSTER_4
text,"re.sub(r""[^a-zA-Z0-9]"","""",text.lower()",CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
val_X,pandas.DataFrame(train_X[:10000]),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
train_X,pandas.DataFrame(train_X[10000:]),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
val_y,pandas.DataFrame(train_y[:10000]),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
train_y,pandas.DataFrame(train_y[10000:]),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
new_val_X,pandas.DataFrame(new_XV[:10000]),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
new_train_X,pandas.DataFrame(new_XV[10000:]),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
new_val_y,pandas.DataFrame(new_Y[:10000]),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
new_train_y,pandas.DataFrame(new_Y[10000:]),CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
predictions,"pandas.read_csv(os.path.join(data_dir,'test.csv.out')",CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
predictions,"pandas.read_csv(os.path.join(data_dir,'new_data.csv.out')",CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
predictions,"pandas.read_csv(os.path.join(data_dir,'new_data.csv.out')",CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
predictions,"pandas.read_csv(os.path.join(data_dir,'test.csv.out')",CLUSTER_16,CLUSTER_3,CLUSTER_12,CLUSTER_2,CLUSTER_4
donut_kernel,"numpy.ones((3,3)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
new_grid,numpy.copy(grid),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
grid,numpy.copy(new_grid),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
fig,matplotlib.pyplot.figure(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
num_neighbours,"scipy.signal.convolve2d(grid,donut_kernel,mode=""same"",boundary=""wrap"")",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('grades.csv'),CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
output,"matplotlib.pyplot.hist([chi_squared_df2,chi_squared_df5],bins=50,histtype='step',
label=['2degreesoffreedom','5degreesoffreedom'])",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
df,"pandas.DataFrame({'start':times[0:2],'end':times[1:3]},index=['recursive','linear'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
bb,pandas.DataFrame(dis),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lang,pandas.DataFrame(harv_lang),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
art_track_view,"pandas.pivot_table(bb,index=['artist','track'],values=['peak_rank','bb_ratio'],aggfunc=(np.mean)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
track_view,"pandas.pivot_table(bb,index=['track','artist'],values=['peak_rank','bb_ratio'],aggfunc=(np.mean)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
artist_view,"pandas.pivot_table(bb,index=['artist'],values=['peak_rank','bb_ratio'],aggfunc=(np.mean)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
dis,"pandas.read_csv(""/Users/HudsonCavanagh/dsi-projects/projects/2nd/billboard.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
harv_lang,"pandas.read_csv(""/Users/HudsonCavanagh/dsi-projects/projects/2nd/inquirer_basic.csv"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"bb[""peak_date""]","pandas.to_datetime(bb[""date.peaked""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"bb[""entered_date""]","pandas.to_datetime(bb[""date.entered""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"bb[""track_length""]","pandas.to_timedelta(bb[""time""])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X1,"numpy.array(bb['track_pos'],bb['track_neg'])",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X2,numpy.array(bb['track_neg']),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax3,"seaborn.barplot('track_pos','weeks_on_bb100',data=bb,hue='track_neg',color=""orange"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax8,"seaborn.barplot('track_pos','bb_ratio',data=bb,hue='track_neg',color=""orange"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax9,"seaborn.barplot('track_neg','bb_ratio',data=bb,hue='track_neg',color=""orange"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax4,"seaborn.barplot('track_neg','weeks_on_bb100',data=bb,hue='track_pos',color=""orange"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig1,"seaborn.jointplot('avg_on_bb100','weeks_on_bb100',data=bb,kind='scatter',color=""orange"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig2,"seaborn.jointplot('track_pos','weeks_on_bb100',data=bb,kind='scatter',color=""orange"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax5,"seaborn.regplot('avg_on_bb100','weeks_on_bb100',data=bb,color=""orange"")",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax6,"seaborn.regplot('avg_on_bb100','weeks_on_bb100',data=bb,color=""orange"",fit_reg=1,x_jitter=10,y_jitter=5)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"t_stata,p_vala","scipy.stats.ttest_ind(cat3,cat4,equal_var=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"t_stat1,p_val1","scipy.stats.ttest_ind(cat1,cat2,equal_var=False)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
dfoutput,"pandas.Series(dftest[0:4],index=['TestStatistic','p-value','
forkey,valueindftest[4].items()",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dfoutput,"pandas.Series(dftest2[0:4],index=['TestStatistic','p-value','
forkey,valueindftest2[4].items()",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
reverse_test_diff_series,pandas.Series(reverse_test_diff),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
reverse_predictions_series,pandas.Series(reverse_test_diff),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
predicted_stock_price_revtrans_series,pandas.Series(predicted_stock_price_revtrans),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
new_test_series,"pandas.concat([train_last60,test_series])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(""IBM_2006-01-01_to_2018-01-01.csv"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(""IBM_2006-01-01_to_2018-01-01.csv"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df.index,pandas.to_datetime(df['Date']),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
df.index,pandas.to_datetime(df['Date']),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(10,6)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(10,6)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
orig,"matplotlib.pyplot.plot(train_series,color='blue',label='Original')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mean,"matplotlib.pyplot.plot(rolmean,color='red',label='RollingMean')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
std,"matplotlib.pyplot.plot(rolstd,color='black',label='RollingStd')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
orig,"matplotlib.pyplot.plot(train_diff,color='blue',label='Original')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
mean,"matplotlib.pyplot.plot(rolmean,color='red',label='RollingMean')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
std,"matplotlib.pyplot.plot(rolstd,color='black',label='RollingStd')",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(2,1,figsize=(12,8)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,ax","matplotlib.pyplot.subplots(2,1,figsize=(12,8)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,y_train",numpy.array(X_train),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_test,numpy.array(X_test),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_train,"numpy.reshape(X_train,(X_train.shape[0],X_train.shape[1],1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_test,"numpy.reshape(X_test,(X_test.shape[0],X_test.shape[1],1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
error,"sklearn.metrics.mean_squared_error(reverse_test_diff,reverse_predictions)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
error,"sklearn.metrics.mean_squared_error(test_series,predicted_stock_price_revtrans_series)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc,"sklearn.preprocessing.MinMaxScaler(feature_range=(0,1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
result,"re.match('^Hello\s\d\d\d\s\d{4}\s\w{10}.*Demo$',content)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,"re.match('^Hello.*Demo$',content)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,re.match('^Hello\s(\d+),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,re.match('^He.*(\d+),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,re.match('^He.*?(\d+),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,re.match('^He.*?(\d+),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,"re.match('priceis$5.00',content)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,"re.match('priceis\$5\.00',content)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,re.match('Hello.*?(\d+),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,"re.match(pattern,content)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,re.search('Hello.*?(\d+),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,"re.search('<li.*?active.*?singer=""(.*?)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,"re.search('<li.*?singer=""(.*?)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
result,"re.search('<li.*?singer=""(.*?)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
content,"re.sub('\d+','',content)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
content,"re.sub('\d+','Replacement',content)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
content,re.sub('(\d+),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
html,"re.sub('<a.*?>|</a>','',html)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
author,"re.sub('\s','',author)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
date,"re.sub('\s','',date)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
results,"re.findall('<li.*?href=""(.*?)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
results,re.findall('<li.*?>\s*?(<a.*?>),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
results,re.findall('<li.*?>(.*?),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
results,"re.findall(pattern,content)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
pattern,"re.compile('Hello.*Demo',re.S)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
pattern,"re.compile('<li.*?cover.*?href=""(.*?)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
content,requests.get('https://book.douban.com/'),CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
hp_model,pandas.read_csv('C:/Users/fbaff/EPFLMLPython/3-MachineLearning1/ML1Projectsubmission/HousePrice_model_new.csv'),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xcor,numpy.arange(len(mae_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xcor1,numpy.arange(len(rmsle_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xcor,numpy.arange(len(mae_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xcor1,numpy.arange(len(rmsle_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xcor2,numpy.arange(len(r2_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xcor,numpy.arange(len(mae_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xcor1,numpy.arange(len(rmsle_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
xcor2,numpy.arange(len(r2_values),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
idx,numpy.argmin(test_scores),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
idx,numpy.argmin(test_scores),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
idx,numpy.argmin(test_scores),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
indices,numpy.argsort(importances),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
mse,numpy.mean(np.square(y-y_pred),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
alphas,"numpy.logspace(-5,10,num=100)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
alphas,"numpy.logspace(-5,10,num=100)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
alphas,"numpy.logspace(-5,10,num=100)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
lr,sklearn.linear_model.LinearRegression(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"train_hp,test_hp","sklearn.model_selection.train_test_split(
hp_model,train_size=0.5,test_size=0.5,random_state=0)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge2,sklearn.linear_model.Ridge(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge,sklearn.linear_model.Ridge(alpha),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge2,sklearn.linear_model.Ridge(1),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge3,sklearn.linear_model.Ridge(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge,sklearn.linear_model.Ridge(alpha),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge3,sklearn.linear_model.Ridge(11.497569953977356),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge3_nolog,sklearn.linear_model.Ridge(),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge_nolog,sklearn.linear_model.Ridge(alpha),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
ridge3b_nolog,sklearn.linear_model.Ridge(8.111308307896872),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_rdft,sklearn.preprocessing.scale(X_rdft),CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=100,random_state=0,n_jobs=42)",CLUSTER_28,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
figure,"matplotlib.pyplot.figure(figsize=(27,13)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax,"matplotlib.pyplot.subplot2grid(grid_size,loc,rowspan=rowspan,colspan=colspan)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax,"matplotlib.pyplot.subplot2grid(grid_size,(0,1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax,"matplotlib.pyplot.subplot2grid(grid_size,(0,4)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ax,"matplotlib.pyplot.subplot2grid(grid_size,(n+1,w)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
yeast,"pandas.read_csv('./data/yeast.csv',delim_whitespace=True)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
ecoli,"pandas.read_csv(""./data/ecoli.csv"",delim_whitespace=True)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.vstack((X_src,X_tgt)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"xx,yy","numpy.meshgrid(np.arange(x_min,x_max,h)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.StandardScaler(),CLUSTER_10,CLUSTER_8,CLUSTER_10,CLUSTER_0,CLUSTER_1
iris,sklearn.datasets.load_iris(),CLUSTER_10,CLUSTER_8,CLUSTER_10,CLUSTER_0,CLUSTER_1
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X_vals,y_vals,test_size=0.5)",CLUSTER_10,CLUSTER_8,CLUSTER_10,CLUSTER_0,CLUSTER_1
accuracy,"sklearn.metrics.accuracy_score(y_test,predictions)",CLUSTER_10,CLUSTER_8,CLUSTER_10,CLUSTER_0,CLUSTER_1
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=4),CLUSTER_10,CLUSTER_8,CLUSTER_10,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('../data/trulia_cleaned.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
yelp_data,collections.defaultdict(list),CLUSTER_1,CLUSTER_1,CLUSTER_12,CLUSTER_0,CLUSTER_1
domains_data['domain_'+str(a_domain)],numpy.array(x_data),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
domains_label['domain_'+str(a_domain)],numpy.array(x_label),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
train_labels,"numpy.asarray(mnist.train.labels,dtype=np.int32)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
test_labels,"numpy.asarray(mnist.test.labels,dtype=np.int32)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
canvas_orig,"numpy.empty((28*n,28*n)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
canvas_recon,"numpy.empty((28*n,28*n)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
train_labels_names,"numpy.argmax(train_labels,axis=1)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
test_labels_names,"numpy.argmax(test_labels,axis=1)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,all_plots","matplotlib.pyplot.subplots(1,2,figsize=(4,4)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
"fig,all_plots","matplotlib.pyplot.subplots(1,2,figsize=(8,8)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
g_embedded,sklearn.decomposition.PCA(n_components=2),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
g_embedded,sklearn.decomposition.PCA(n_components=2),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
demographie,"pandas.read_csv(""IRIS_DEMOGRAPHIE-2.csv"",index_col=0)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
t0,time.time(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
t1,time.time(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
colors,"numpy.array(list(islice(cycle(['
'
'
int(max(y_pred)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
X_aniso,"numpy.dot(X,transformation)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
"plt.text(.99,.01,('%.2fs'%(t1-t0)).lstrip('0'),transform",matplotlib.pyplot.gca(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
ward,"sklearn.cluster.AgglomerativeClustering(n_clusters=params['n_clusters'],linkage=""ward"")",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
complete,"sklearn.cluster.AgglomerativeClustering(n_clusters=params['n_clusters'],linkage=""complete"")",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
average,"sklearn.cluster.AgglomerativeClustering(n_clusters=params['n_clusters'],linkage=""average"")",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
"X,y","sklearn.datasets.make_blobs(n_samples=n_samples,random_state=random_state)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
varied,"sklearn.datasets.make_blobs(n_samples=n_samples,cluster_std=[1.0,2.5,0.5],random_state=random_state)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
noisy_circles,"sklearn.datasets.make_circles(n_samples=n_samples,factor=.5,noise=.05)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
X,sklearn.preprocessing.StandardScaler(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
p_rural,"pandas.Series(dados.iloc[1191,5:58])",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
fra,pandas.Series(data=fra),CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
dados,"pandas.read_excel(""WDI-world.xlsx"")",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(12,8)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"gauss_plot,","matplotlib.pyplot.plot(p_rural,q_gauss,'o',color=""red"",label=""Gauss_hyp"")",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"beta_plot,","matplotlib.pyplot.plot(p_rural,q_beta,'o',color=""green"",label=""Beta"")",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
x,"numpy.linspace(2.0,3.36,15)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
x1,"numpy.linspace(2.000000,3.4,15)",CLUSTER_14,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
index,numpy.argmax(prediction),CLUSTER_18,CLUSTER_9,CLUSTER_9,CLUSTER_0,CLUSTER_0
index,numpy.argmax(prediction),CLUSTER_18,CLUSTER_9,CLUSTER_9,CLUSTER_0,CLUSTER_0
X,"numpy.reshape(dataX,(n_patterns,seq_length,1)",CLUSTER_18,CLUSTER_9,CLUSTER_9,CLUSTER_0,CLUSTER_0
x,"numpy.reshape(pattern,(1,len(pattern)",CLUSTER_18,CLUSTER_9,CLUSTER_9,CLUSTER_0,CLUSTER_0
x,"numpy.reshape(pattern,(1,len(pattern)",CLUSTER_18,CLUSTER_9,CLUSTER_9,CLUSTER_0,CLUSTER_0
log_data,"pandas.read_csv(log_path,sep=',',engine='python')",CLUSTER_18,CLUSTER_9,CLUSTER_9,CLUSTER_0,CLUSTER_0
out_img,"numpy.array(cv2.merge((binary_warped,binary_warped,binary_warped)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
nonzeroy,numpy.array(nonzero[0]),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
nonzerox,numpy.array(nonzero[1]),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
pts_left,"numpy.array([np.transpose(np.vstack([left_fitx,ploty])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
pts_right,"numpy.array([np.flipud(np.transpose(np.vstack([right_fitx,ploty])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
right,"numpy.asarray(tuple(zip(right_fitx,ploty)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
left,"numpy.asarray(tuple(zip(left_fitx,ploty)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
objp,"numpy.zeros((9*6,3)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
left_lane_inds,numpy.concatenate(left_lane_inds),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
right_lane_inds,numpy.concatenate(right_lane_inds),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
binary_output,numpy.zeros_like(atan_sobel),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
binary_output,numpy.zeros_like(s_channel),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
binary_output,numpy.zeros_like(r_channel),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
combined_binary,numpy.zeros_like(dir_binary),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
combined_binary,numpy.zeros_like(dir_binary),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
warp_zero,numpy.zeros_like(warped),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
leftx_base,numpy.argmax(histogram[:midpoint]),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
rightx_base,numpy.argmax(histogram[midpoint:]),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
histogram,"numpy.sum(binary_warped[binary_warped.shape[0]//2:,:],axis=0)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
abs_sobelx,numpy.absolute(sobelx),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
abs_sobely,numpy.absolute(sobely),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
atan_sobel,"numpy.arctan2(abs_sobely,abs_sobelx)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
src_points,"numpy.float32([(200,img.shape[0])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
dst_points,"numpy.float32([(320,720)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
ploty,"numpy.linspace(0,binary_warped.shape[0]-1,binary_warped.shape[0])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
ploty,"numpy.linspace(0,warped.shape[0]-1,warped.shape[0])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
pts,"numpy.hstack((pts_left,pts_right)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
color_warp,"numpy.dstack((warp_zero,warp_zero,warp_zero)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
left_fit,"numpy.polyfit(lefty,leftx,2)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
right_fit,"numpy.polyfit(righty,rightx,2)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(15,6)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(15,6)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(15,6)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(15,6)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(15,6)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(20,10)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(20,10)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
"f,(ax1,ax2)","matplotlib.pyplot.subplots(1,2,figsize=(20,10)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
images,os.listdir('camera_cal/'),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
images,"os.listdir(""test_images/"")",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
idxs,numpy.flatnonzero(y_train==y),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
mean_image,"numpy.mean(X_train,axis=0)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
train_prec,numpy.mean(train_pred==y_train),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
val_prec,numpy.mean(val_pred==y_val),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
test_accuracy,numpy.mean(y_test==y_test_pred),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_train,"numpy.reshape(X_train,(X_train.shape[0],-1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_val,"numpy.reshape(X_val,(X_val.shape[0],-1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_test,"numpy.reshape(X_test,(X_test.shape[0],-1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_dev,"numpy.reshape(X_dev,(X_dev.shape[0],-1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_train,"numpy.hstack([X_train,np.ones((X_train.shape[0],1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_val,"numpy.hstack([X_val,np.ones((X_val.shape[0],1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_test,"numpy.hstack([X_test,np.ones((X_test.shape[0],1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
X_dev,"numpy.hstack([X_dev,np.ones((X_dev.shape[0],1)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
difference,"numpy.linalg.norm(grad_naive-grad_vectorized,ord='fro')",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
tic,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
toc,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
response,requests.get(target_url),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
response,requests.get(first_link),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
response,requests.get(i),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,pandas.DataFrame(arrange_data),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
img,numpy.array(img),CLUSTER_18,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df[label],"numpy.where(df['CarName']==label,1,0)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df[variable+'_'+label],"numpy.where(df[variable]==label,1,0)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('CarPrice_Assignment.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv('CarPrice_Assignment.csv',usecols=['CarName','fueltype','aspiration'
,'doornumber','carbody','drivewheel','enginelocation',
'enginetype','cylindernumber','fuelsystem',
])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv('CarPrice_Assignment.csv',usecols=['CarName','fueltype','aspiration'
,'doornumber','carbody','drivewheel','enginelocation',
'enginetype','cylindernumber','fuelsystem',
])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
model,"pandas.read_csv(ipath,sep=""\s*"",skiprows=3,
parse_dates={'Timestamp':[0,1]},index_col='Timestamp')",CLUSTER_14,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
"model.loc[:,'M(m/s)'].plot.hist(bins","numpy.arange(0,35)",CLUSTER_14,CLUSTER_0,CLUSTER_9,CLUSTER_0,CLUSTER_0
df,"pandas.concat([dfMax2,dfMin2])",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df1,"pandas.merge(df,dates1,left_on=""Date"",right_on=""Date"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df2,"pandas.merge(df,dates2,left_on=""Date"",right_on=""Date"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
dfMax,"pandas.merge(df1Max,df2Max,how=""inner"",left_on=""Date"",right_on=""Date"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
dfMin,"pandas.merge(df1Min,df2Min,how=""inner"",left_on=""Date"",right_on=""Date"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
df,pandas.read_csv('data/C2A2_data/BinSize_d{}.csv'.format(binsize),CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
dates1,"numpy.arange('2005-01-01','2015-01-01',dtype='datetime64[D]')",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
dates2,"numpy.arange('2015-01-01','2016-01-01',dtype='datetime64[D]')",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
sequences,numpy.array(sequences),CLUSTER_1,CLUSTER_1,CLUSTER_9,CLUSTER_0,CLUSTER_1
X,"numpy.reshape(dataX,(n_patterns,seq_length,1)",CLUSTER_1,CLUSTER_1,CLUSTER_9,CLUSTER_0,CLUSTER_1
df_rus,pandas.read_csv('gk4z_rus_clean.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_9,CLUSTER_0,CLUSTER_1
y,"numpy.array([0,1,2,2,1])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
correct_scores,"numpy.asarray([
[-0.81233741,-1.27654624,-0.70335995],
[-0.17129677,-1.18803311,-0.47310444],
[-0.51590475,-1.01354314,-0.8504215],
[-0.15419291,-0.48629638,-0.52901952],
[-0.00618733,-0.12435261,-0.15226949]])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
mean_image,"numpy.mean(X_train,axis=0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
vertices,"numpy.array([[(0,imshape[0])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
vertices,"numpy.array([[(0,imshape[0])",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
line_img,"numpy.zeros((img.shape[0],img.shape[1],3)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
mask,numpy.zeros_like(img),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
line_image,numpy.zeros_like(image),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
LeftLane,"numpy.dot(LeftWeights,LeftLines)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
RightLane,"numpy.dot(RightWeights,RightLines)",CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
length,numpy.sqrt((y2-y1),CLUSTER_23,CLUSTER_0,CLUSTER_11,CLUSTER_0,CLUSTER_1
cancer,sklearn.datasets.load_breast_cancer(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
cancer,sklearn.datasets.load_breast_cancer(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
boston,sklearn.datasets.load_boston(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
logreg,sklearn.linear_model.LogisticRegression(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
merge_df,"pandas.merge(od_df,cms_df,on='State',how=""outer"")",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
cms_df,pandas.read_csv('data/state_summary_df.csv'),CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
od_df,pandas.read_csv('data/55+data.csv'),CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
correlation,"scipy.stats.pearsonr(merge_df['opioid_rx_pct'],merge_df['opioid_od_pct'])",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
correlation,"scipy.stats.pearsonr(merge_df['opioid_rx_pct'],merge_df['opioid_od_100k'])",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"(slope,intercept,rvalue,pvalue,stderr)","scipy.stats.linregress(x_values,y_values)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
"(slope,intercept,rvalue,pvalue,stderr)","scipy.stats.linregress(x_values,y_values)",CLUSTER_5,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
training_epoch,"numpy.arange(5,7)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
y,"numpy.array([0,1,2,2,1])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
correct_scores,"numpy.asarray([
[-0.81233741,-1.27654624,-0.70335995],
[-0.17129677,-1.18803311,-0.47310444],
[-0.51590475,-1.01354314,-0.8504215],
[-0.15419291,-0.48629638,-0.52901952],
[-0.00618733,-0.12435261,-0.15226949]])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
mean_image,"numpy.mean(X_train,axis=0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
hidden_size,"numpy.linspace(40,50,2,dtype=int)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lr,"numpy.linspace(1e-5,1e-4,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
rs,"numpy.linspace(100,10000,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
np_height,numpy.array(height),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
np_weight,numpy.array(weight),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
df,pandas.DataFrame(data),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
combined_df,"pandas.concat([results_df1,results_df2,results_df3,results_df4,results_df5])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
predicted_label,numpy.argmax(predictions_array),CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
predicted_label,numpy.argmax(predictions_array),CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
thisplot,matplotlib.pyplot.bar(range(10),CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
_,matplotlib.pyplot.xticks(range(10),CLUSTER_7,CLUSTER_11,CLUSTER_4,CLUSTER_0,CLUSTER_1
wf,"json.loads("""".join(wf_arr)",CLUSTER_13,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
corona,"pandas.read_csv(""owid-covid-data.csv"")",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
corona,"pandas.read_csv(""owid-covid-data.csv"",index_col=0)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
corona,"pandas.read_csv(""owid-covid-data.csv"",index_col=0)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
corona,"pandas.read_csv(""owid-covid-data.csv"",index_col=0)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
corona,"pandas.read_csv(""owid-covid-data.csv"",index_col=0)",CLUSTER_5,CLUSTER_9,CLUSTER_4,CLUSTER_0,CLUSTER_0
cb,"matplotlib.pyplot.colorbar(pc,cax=cbax,orientation='vertical')",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(18,9)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(18,9)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
pc,"matplotlib.pyplot.pcolormesh(lons,lats,var1_d,cmap=plt.cm.jet,vmin=-vminmax,vmax=vminmax)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
pc,"matplotlib.pyplot.pcolormesh(x,y,var1_d,cmap=plt.cm.jet,
vmin=-vminmax,vmax=vminmax)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
latmin,numpy.mean(lat),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lon_0,numpy.mean(lon_d),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
lat_1,numpy.mean(lat_d),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
vminmax,numpy.ceil(2*max(abs(vmin),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
urcrnrlon,numpy.ceil(np.max(lon_d),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
urcrnrlat,numpy.ceil(np.max(lat_d),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
llcrnrlon,numpy.floor(np.min(lon_d),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
llcrnrlat,numpy.floor(np.min(lat_d),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"lons,lats","numpy.meshgrid(lon_d,lat_d)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
X,"np.append(arr=numpy.ones((50,1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X,"numpy.append(arr=np.ones((50,1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dataset,pandas.read_csv('50_Startups.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
labelencoder,sklearn.preprocessing.LabelEncoder(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
onehotencoder,sklearn.preprocessing.OneHotEncoder(categorical_features=[3]),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
regressor,sklearn.linear_model.LinearRegression(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
μ_actual,"numpy.array([1,-2])",CLUSTER_1,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
Σ_actual,"numpy.array([[0.5,-0.3],
[-0.3,1.]])",CLUSTER_1,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
mus,"numpy.linspace(115,160,51)",CLUSTER_1,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
sigmas,"numpy.linspace(1,10,51)",CLUSTER_1,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
mus,"numpy.linspace(8,16,101)",CLUSTER_1,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
sigmas,"numpy.linspace(0.1,2,101)",CLUSTER_1,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv('../data/flea_beetles.csv',delimiter='\t')",CLUSTER_1,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_0
pagePosts,requests.get(pagePosts['posts']['paging']['next']),CLUSTER_27,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
pagePosts,requests.get(pagePosts['paging']['next']),CLUSTER_27,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
comments,requests.get(comments['comments']['paging']['next']),CLUSTER_27,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
comments,requests.get(comments['paging']['next']),CLUSTER_27,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame([purchase_1,purchase_2,purchase_3],index=['Store1','Store1','Store2'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,pandas.Series(sports),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,"pandas.Series(['Tiger','Bear','Moose'],index=['India','America','Canada'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,"pandas.Series(sports,index=['Golf','Sumo','Hockey'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,pandas.Series(sports),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,pandas.Series(sports),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,"pandas.Series([100.00,120.00,101.00,3.00])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,"pandas.Series(np.random.randint(0,1000,10000)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,"pandas.Series(np.random.randint(0,1000,10000)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,"pandas.Series(np.random.randint(0,1000,10000)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,"pandas.Series([1,2,3])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
original_sports,"pandas.Series({'Archery':'Bhutan',
'Golf':'Scotland',
'Sumo':'Japan',
'Taekwondo':'SouthKorea'})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
cricket_loving_countries,"pandas.Series(['Australia',
'Barbados',
'Pakistan',
'England'],
index=['Cricket',
'Cricket',
'Cricket',
'Cricket'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
purchase_1,"pandas.Series({'Name':'Chris',
'ItemPurchased':'DogFood',
'Cost':22.50})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
purchase_2,"pandas.Series({'Name':'Kevyn',
'ItemPurchased':'KittyLitter',
'Cost':2.50})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
purchase_3,"pandas.Series({'Name':'Vinod',
'ItemPurchased':'BirdSeed',
'Cost':5.00})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('olympics.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv('olympics.csv',index_col=0,skiprows=1)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('census.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,pandas.read_csv('log.csv'),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
total,numpy.sum(s),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
summary,numpy.sum(s),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
"f,ax","matplotlib.pyplot.subplots(examples_per_class,num_classes)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
Labels,"numpy.array([1,1,0,0,1])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
data,numpy.array(data),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
distance_matrix,"numpy.zeros((test_size,train_size)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
predictions,numpy.zeros(test_size),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
tmp_labels,numpy.zeros(k),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
matching_indices,numpy.where(labels==class_idx),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
sorted_idx,numpy.argsort(row),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
examples,"numpy.reshape(examples,(examples.shape[0],-1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
data,"numpy.reshape(data,(data.shape[0],-1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
distance,numpy.sum((X_test[i]-self.X_train[j]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
correct,numpy.sum(predicted==actual),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
correct,numpy.sum(predicted==actual),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
loaded,numpy.load(open(dest),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
sss,"sklearn.model_selection.StratifiedShuffleSplit(train_size=1200,n_splits=1,
test_size=200,random_state=0)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
label,scipy.stats.mode(tmp_labels),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
alias,pandas.Series(name_list),CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
alias1,pandas.Series(name_list),CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
marvel,"pandas.read_csv(""marvel.csv"")",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
dc,"pandas.read_csv(""dc.csv"")",CLUSTER_18,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.read_csv(""train.csv"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
feature_importances,"pandas.DataFrame({'feature':features,'importance':feature_importance_values})",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_14,CLUSTER_0
feature_importances,"pandas.DataFrame({'feature':features,'importance':feature_importance_values})",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_14,CLUSTER_0
feature_importances_df,pandas.DataFrame(feature_importances),CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_14,CLUSTER_0
train,"pandas.read_csv(""train.csv"")",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_14,CLUSTER_0
test,pandas.read_csv('test-2.csv'),CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_14,CLUSTER_0
"X_train,X_test,Y_train,Y_test","sklearn.model_selection.train_test_split(train_inp,Target,
test_size=0.3,random_state=2000)",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_14,CLUSTER_0
tree_clf,"sklearn.tree.DecisionTreeClassifier(class_weight='balanced',random_state=2000,
max_features=0.5,min_samples_leaf=100)",CLUSTER_4,CLUSTER_3,CLUSTER_3,CLUSTER_14,CLUSTER_0
pi,numpy.zeros(k),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mu,"numpy.zeros([k,train_data.shape[1]])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sigma,"numpy.zeros([k,train_data.shape[1],train_data.shape[1]])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
score,numpy.zeros((len(test_labels),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
data,numpy.frombuffer(f.read(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
data,numpy.frombuffer(f.read(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
predictions,"numpy.argmax(score,axis=1)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
mu[label],"numpy.mean(x[indices,:],axis=0)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
errors,numpy.sum(predictions!=test_labels),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
"score[i,label]",numpy.log(pi[label]),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
sigma[label],"numpy.cov(x[indices,:],rowvar=False,bias=True)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
rv,"scipy.stats.multivariate_normal(mean=mu[label],cov=sigma[label])",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
root,"math.sqrt(10,5)",CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
ts,time.time(),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
ts,time.time(),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
ts,time.time(),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
ts,time.time(),CLUSTER_30,CLUSTER_5,CLUSTER_0,CLUSTER_0,CLUSTER_1
"fig,ax","matplotlib.pyplot.subplots(size_figure_grid,size_figure_grid,figsize=(6,6)",CLUSTER_11,CLUSTER_7,CLUSTER_5,CLUSTER_29,CLUSTER_8
X,"numpy.array([[3,2],
[4,5],
[12,9],
[7,0],
[5,2],
[6,5],
[2,4],
[8,8],
[7,10],
[2,4],
[1,0.6],
[9,11]])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
c,numpy.array(self.classifications[key]),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
unknowns,"numpy.array([[1,3],
[8,9],
[0,3],
[5,4],
[6,4],])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
c,"numpy.sum(c,axis=0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
distance,numpy.linalg.norm(x-j),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
distance,numpy.linalg.norm(datapoint-j),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
a_prev,"numpy.zeros((n_a,1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_10
"X_train,y_train",numpy.array(X_train),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_test,numpy.array(X_test),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
X_train,"numpy.reshape(X_train,(X_train.shape[0],X_train.shape[1],1)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
dataset_total,"pandas.concat((train_data['Open'],test_data['Open'])",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_data,"pandas.read_csv(""Google_Stock_Price_Train.csv"")",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_data,pandas.read_csv('Google_Stock_Price_Test.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
scaler,sklearn.preprocessing.MinMaxScaler(),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
t1,time.time(),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
t2,time.time(),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
t3,time.time(),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,"numpy.asarray([1.0,2.0,3.0])",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,"numpy.asarray([11.0,12.0,13.0])",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,"numpy.asarray([3.0,3.0,3.0])",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,"numpy.asarray([5.0,5.0,5.0])",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,"numpy.zeros((D3,)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,numpy.zeros(D3),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
beta,numpy.zeros(D3),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,"numpy.ones((D3,)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,numpy.ones(D3),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
gamma,numpy.ones(D3),CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
a,"numpy.maximum(0,X.dot(W1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
a,"numpy.maximum(0,X.dot(W1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
a,"numpy.maximum(0,X.dot(W1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
a,"numpy.maximum(0,X.dot(W1)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
weight_scales,"numpy.logspace(-4,0,num=20)",CLUSTER_2,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
virus_19,"pandas.read_csv('COVID-19-geographic-disbtribution-worldwide-2020-03-29copy.csv',header=0)",CLUSTER_0,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
confirmed['ds'],pandas.to_datetime(confirmed['ds']),CLUSTER_0,CLUSTER_2,CLUSTER_7,CLUSTER_0,CLUSTER_0
dataset,pandas.read_csv('petrol_consumption.csv'),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=0.2,random_state=0)",CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
regressor,sklearn.tree.DecisionTreeRegressor(random_state=0),CLUSTER_3,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"fig,axes","matplotlib.pyplot.subplots(1,2)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
"fig,axes","matplotlib.pyplot.subplots(2,3,figsize=(15,10)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
x,"numpy.clip(x,0,255)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
grad_values,numpy.copy(self.grad_values),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
uploaded_img,"numpy.expand_dims(uploaded_img,axis=0)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
"x,min_val,info","scipy.optimize.fmin_l_bfgs_b(
evaluator.loss,x,fprime=evaluator.grads,maxfun=20)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
start_time,time.time(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
end_time,time.time(),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_11
Z,"numpy.zeros((m,n_H,n_W,n_C)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
A,"numpy.zeros((m,n_H,n_W,n_C)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
dA_prev,numpy.zeros(A_prev.shape),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
dW,numpy.zeros(W.shape),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
db,numpy.zeros(b.shape),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
dA_prev,numpy.zeros(A_prev.shape),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
a,numpy.ones(shape),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
Z,numpy.sum(s),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
s,"numpy.multiply(a_slice_prev,W)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"dA_prev[i,vert_start:vert_end,horiz_start:horiz_end,c]+","numpy.multiply(mask,dA[i,h,w,c])",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"A[i,h,w,c]",numpy.average(a_prev_slice),CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
X_pad,"numpy.pad(X,((0,0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
A_prev_pad,"numpy.pad(A_prev,((0,0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
dA_prev_pad,"numpy.pad(dA_prev,((0,0)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"fig,axarr","matplotlib.pyplot.subplots(1,2)",CLUSTER_7,CLUSTER_4,CLUSTER_4,CLUSTER_0,CLUSTER_1
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,random_state=666)",CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
lin_reg,sklearn.linear_model.LinearRegression(),CLUSTER_7,CLUSTER_12,CLUSTER_1,CLUSTER_0,CLUSTER_0
df,"pandas.DataFrame({'X':[7,2,0,3,4,2,5,0,3,4]})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
s,pandas.Series(np.random.rand(len(datetimeindex),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
datetimeindex,"pandas.date_range(start='2015-01-01',end='2015-12-31')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
values,"numpy.array([2.0,1.0,5.0,0.97,3.0,10.0,0.0599,8.0])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
booleans,"numpy.array([False,False,False,False,False,True,False,False,False,False])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
estimated,"numpy.array([estimate_f(u,i)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
dotp,numpy.sum(s1*s2),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
size,numpy.int64(np.ceil(df.index.size*0.2),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame({'r_1':ser_1,'r_2':ser_2})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame({'r_1':ser_1,'r_2':ser_2})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame(data={'col_1':[0.12,7,45,10],'col_2':[0.9,9,34,11]},
columns=['col_1','col_2','col_3'],
index=['obs1','obs2','obs3','obs4'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ratings_sims,"pandas.DataFrame({'sim':sims,'rating':their_ratings})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ratings_sims,"pandas.DataFrame({'sim':sims,'rating':their_ratings})",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser,"pandas.Series([2.0,1.0,5.0,0.97,3.0,10.0,0.06,8.0])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser,"pandas.Series(data=values,index=labels)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser,pandas.Series(movie_rating),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser_1,"pandas.Series(data=[1,3,4],index=['A','B','C'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser_2,"pandas.Series(data=[5,5,5],index=['A','G','C'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser_1,"pandas.Series(data=[1,3,4],index=['A','B','C'],dtype='int')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser_2,"pandas.Series(data=[5,5,5],index=['A','G','C'],dtype='float')",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser_1,pandas.Series(movie_rating),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ser_2,pandas.Series(movie_rating),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
df['r_4'],pandas.Series({'gender':'M'}),CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
movielens,"pandas.merge(pandas.merge(ratings,users)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
users,"pandas.read_table('data/ml-1m/users.dat',
sep='::',header=None,
names=['user_id','gender','age','occupation','zip'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
ratings,"pandas.read_table('data/ml-1m/ratings.dat',
sep='::',header=None,
names=['user_id','movie_id','rating','timestamp'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
movies,"pandas.read_table('data/ml-1m/movies.dat',
sep='::',header=None,
names=['movie_id','title','genres'])",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
user_ids_larger_1,"pandas.value_counts(movielens.user_id,sort=False)",CLUSTER_1,CLUSTER_1,CLUSTER_2,CLUSTER_0,CLUSTER_1
indices,"numpy.asarray(indices,dtype=np.int64)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
values,"numpy.asarray(values,dtype=dtype)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
shape,numpy.asarray([len(sequences),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
zero_state,"numpy.zeros([hidden_layers[0]*2],np.float32)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
zero_state,"numpy.zeros([hidden_layers[0]],np.float32)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_0,CLUSTER_1
tweet_info,"re.findall(r""class=\""time\"">\n.*href=(\""[^\""]*\""+?)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
tweets,"re.findall(r""TweetTextSize.*part=\""\d\"">(.*)",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df1,"pandas.DataFrame({""Time"":times,""Username"":user_names})",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df2,"pandas.DataFrame({""Tweets"":tweets})",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
df,"pandas.DataFrame({""Tweets"":tweets,""Time"":times,""Username"":user_names})",CLUSTER_1,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_1
feat,numpy.zeros(context_word.shape),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
feat,numpy.zeros(context_word.shape),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
feat,numpy.zeros(context_word.shape),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
feat,numpy.zeros(context_word.shape),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
train_hand_feat,"numpy.concatenate((old_feat,train_hand_feat)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
dev_hand_feat,"numpy.concatenate((old_feat,dev_hand_feat)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
test_hand_feat,"numpy.concatenate((old_feat,test_hand_feat)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
mat1,numpy.dot(np.mat(c_vec),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
mat2,numpy.dot(np.mat(c_vec_norm),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
feat_max_similarity,"numpy.expand_dims(max_similarity(context_word,context_length,question_word,question_length,embedding_matrix)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
context_word,numpy.load('dataset2/train_contw_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
question_word,numpy.load('dataset2/train_quesw_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
context_char,numpy.load('dataset2/train_contc_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
question_char,numpy.load('dataset2/train_quesc_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
old_feat,numpy.load('dataset2/train_hand_feat.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
context_word,numpy.load('dataset2/dev_contw_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
question_word,numpy.load('dataset2/dev_quesw_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
context_char,numpy.load('dataset2/dev_contc_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
question_char,numpy.load('dataset2/dev_quesc_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
old_feat,numpy.load('dataset2/dev_hand_feat.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
context_word,numpy.load('dataset2/test_contw_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
question_word,numpy.load('dataset2/test_quesw_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
context_char,numpy.load('dataset2/test_contc_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
question_char,numpy.load('dataset2/test_quesc_input.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
old_feat,numpy.load('dataset2/test_hand_feat.npy'),CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
a_vec_norm,"numpy.linalg.norm(a_vec,axis=1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
c_vec_norm,"numpy.linalg.norm(c_vec,axis=1)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
"X_train,X_test","sklearn.model_selection.train_test_split(dataset,test_size=0.33,random_state=1)",CLUSTER_6,CLUSTER_7,CLUSTER_1,CLUSTER_0,CLUSTER_8
df_covid_data_us_counties_1,pandas.read_csv(path_covid_data_us_counties_1),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
df_covid_data_us_counties_2,pandas.read_csv(path_covid_data_us_counties_2),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
df_covid_data_us_counties_3,pandas.read_csv(path_covid_data_us_counties_3),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
df_covid_data_us_counties_4,pandas.read_csv(path_covid_data_us_counties_4),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
titanic,pandas.read_csv('train.csv'),CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
farexage,"seaborn.lmplot('Age','Fare',data=titanic,hue='Sex',fit_reg=False,size=7)",CLUSTER_8,CLUSTER_10,CLUSTER_2,CLUSTER_0,CLUSTER_0
hr_vs_t,numpy.zeros(N_updates),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
hv_vs_t,numpy.zeros(N_updates),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
ar_vs_t,numpy.zeros(N_updates),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
t_array,numpy.zeros(N_updates),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Req_idx,numpy.argmin(E_fine),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
om,numpy.sqrt(Force_Constant/mu),CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
r_fine,"numpy.linspace(0.5*1.89,2.3*1.89,200)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
Harm_Pot_spline,"scipy.interpolate.InterpolatedUnivariateSpline(r_fine,Harm_Pot,k=3)",CLUSTER_2,CLUSTER_8,CLUSTER_7,CLUSTER_0,CLUSTER_1
img,"numpy.array(samples.iloc[j,1:])",CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
x_train,"numpy.concatenate((x_train,x_augmented)",CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
y_train,"numpy.concatenate((y_train,y_augmented)",CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
correct,numpy.nonzero(p==y),CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
incorrect,numpy.nonzero(p!=y),CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
train_data,pandas.read_csv(train_file),CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
test_data,pandas.read_csv(test_file),CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"x_train,x_val,y_train,y_val","sklearn.model_selection.train_test_split(x,y,test_size=TEST_SIZE)",CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
"f,ax","matplotlib.pyplot.subplots(5,8,figsize=(16,10)",CLUSTER_4,CLUSTER_12,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(25,4)",CLUSTER_6,CLUSTER_7,CLUSTER_4,CLUSTER_0,CLUSTER_1
statinfo,os.stat(filepath),CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_1
"_,(ax1,ax2)","matplotlib.pyplot.subplots(1,2)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_1
"_,(ax1,ax2)","matplotlib.pyplot.subplots(1,2)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_1
"_,(ax1,ax2)","matplotlib.pyplot.subplots(1,2)",CLUSTER_23,CLUSTER_11,CLUSTER_8,CLUSTER_10,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(25,5)",CLUSTER_6,CLUSTER_7,CLUSTER_5,CLUSTER_0,CLUSTER_8
ax,"matplotlib.pyplot.subplot(1,batch_size,i+1)",CLUSTER_6,CLUSTER_7,CLUSTER_5,CLUSTER_0,CLUSTER_8
image,"numpy.transpose(image,(1,2,0)",CLUSTER_6,CLUSTER_7,CLUSTER_5,CLUSTER_0,CLUSTER_8
p,numpy.percentile(np.abs(k),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
y_train_oh,numpy.eye(10),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
y_test_oh,numpy.eye(10),CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
mnist,"pandas.read_csv(""local/data/mnist1.5k.csv.gz"",compression=""gzip"",header=None)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
"X_train,X_test,y_train,y_test","sklearn.model_selection.train_test_split(X,y,test_size=.2)",CLUSTER_20,CLUSTER_12,CLUSTER_9,CLUSTER_0,CLUSTER_0
submit_data,"pandas.DataFrame({'datetime':datetime,'count':pred1})",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
submit_data,"pandas.DataFrame({'datetime':datetime,'count':pred1})",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
submit_data,"pandas.DataFrame({'datetime':datetime,'count':pred2})",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
submit_data,"pandas.DataFrame({'datetime':datetime,'count':pred})",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
submit_data,"pandas.DataFrame({'datetime':datetime,'count':pred})",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bike_train,pandas.read_csv('./input/train.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bike_test,pandas.read_csv('./input/test.csv'),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pred_casual,numpy.expm1(pred_casual),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pred_registered,numpy.expm1(pred_registered),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pred_casual,numpy.expm1(pred_casual),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pred_registered,numpy.expm1(pred_registered),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pred_casual,numpy.expm1(pred_casual),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
pred_registered,numpy.expm1(pred_registered),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bike_train['{}_log'.format(col)],numpy.log1p(bike_train[col]),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(15,12)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,"matplotlib.pyplot.figure(figsize=(15,12)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
fig,matplotlib.pyplot.gcf(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rdr,"sklearn.ensemble.RandomForestRegressor(n_estimators=500,random_state=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rdr,"sklearn.ensemble.RandomForestRegressor(n_estimators=500,random_state=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rdr,sklearn.ensemble.RandomForestRegressor(random_state=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rdr,sklearn.ensemble.RandomForestRegressor(random_state=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rdr,sklearn.ensemble.RandomForestRegressor(random_state=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rdr,sklearn.ensemble.RandomForestRegressor(random_state=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rdr,"sklearn.ensemble.RandomForestRegressor(n_estimators=450,min_samples_leaf=5,random_state=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
rdr,"sklearn.ensemble.RandomForestRegressor(n_estimators=600,min_samples_leaf=3,random_state=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bestreg,"sklearn.model_selection.GridSearchCV(estimator=rdr,param_grid=params,cv=skfold.split(bike_train,year_month)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bestreg,"sklearn.model_selection.GridSearchCV(estimator=rdr,param_grid=params,cv=skfold.split(bike_train,year_month)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bestreg,"sklearn.model_selection.GridSearchCV(estimator=rdr,param_grid=params,cv=skfold.split(bike_train,year_month)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bestreg,"sklearn.model_selection.GridSearchCV(estimator=rdr,param_grid=params,cv=skfold.split(bike_train,year_month)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bestreg,"sklearn.model_selection.GridSearchCV(estimator=gbrt_reg,param_grid=params,cv=skfold.split(bike_train,year_month)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bestreg,"sklearn.model_selection.GridSearchCV(estimator=gbrt_reg,param_grid=params,cv=skfold.split(bike_train,year_month)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bestreg,"sklearn.model_selection.GridSearchCV(estimator=gbrt_reg,param_grid=params,cv=skfold.split(bike_train,year_month)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
bestreg,"sklearn.model_selection.GridSearchCV(estimator=gbrt_reg,param_grid=params,cv=skfold.split(bike_train,year_month)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
skfold,"sklearn.model_selection.StratifiedKFold(n_splits=3,shuffle=True,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbrt_reg,sklearn.ensemble.GradientBoostingRegressor(random_state=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbrt_reg,sklearn.ensemble.GradientBoostingRegressor(random_state=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbrt_reg,sklearn.ensemble.GradientBoostingRegressor(random_state=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbrt_reg,sklearn.ensemble.GradientBoostingRegressor(random_state=10),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbrt_reg,"sklearn.ensemble.GradientBoostingRegressor(n_estimators=1000,min_samples_leaf=6,random_state=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
gbrt_reg,"sklearn.ensemble.GradientBoostingRegressor(n_estimators=1000,min_samples_leaf=5,random_state=10)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
grid,"numpy.zeros((grid_height,grid_width,C)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
start_time,time.time(),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
fig,"matplotlib.pyplot.figure(figsize=(4,4)",CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
ax1,matplotlib.pyplot.subplot(111),CLUSTER_7,CLUSTER_4,CLUSTER_5,CLUSTER_0,CLUSTER_1
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
new,pandas.factorize(temp),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(r'C:\Users\Nila\Documents\DataScience\LoanPrediction\train.txt',delimiter=',')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test,"pandas.read_csv(r'C:\Users\Nila\Documents\DataScience\LoanPrediction\test.txt',delimiter=',')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
df,"pandas.read_csv(r'C:\Users\Nila\Documents\DataScience\LoanPrediction\train.txt',delimiter=',')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
test,"pandas.read_csv(r'C:\Users\Nila\Documents\DataScience\LoanPrediction\test.txt',delimiter=',')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.tree.DecisionTreeClassifier(random_state=0,max_depth=i)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.tree.DecisionTreeClassifier(random_state=0,max_depth=2)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(knn,x_train,y_train,cv=10,scoring='accuracy')",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(clf,x,y,cv=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(clf,x,y,cv=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(clf,x,y,cv=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
scores,"sklearn.model_selection.cross_val_score(clf,x,y,cv=5)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=100,max_depth=i,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=100,max_depth=3,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=100,max_depth=i,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
clf,"sklearn.ensemble.RandomForestClassifier(n_estimators=100,max_depth=9,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
plot,"seaborn.pairplot(data=df,hue=""Loan_Status"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
plot,"seaborn.pairplot(data=df,hue=""Loan_Status"")",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"x_train,x_test,y_train,y_test","sklearn.model_selection.train_test_split(x,y,test_size=0.2,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"x_train,x_test,y_train,y_test","sklearn.model_selection.train_test_split(x,y,test_size=0.2,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
"x_train,x_test,y_train,y_test","sklearn.model_selection.train_test_split(x,y,test_size=0.2,random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc_x,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc_x,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc_x,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc_x,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
sc_x,sklearn.preprocessing.StandardScaler(),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,sklearn.linear_model.LogisticRegression(random_state=0),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,sklearn.linear_model.LogisticRegression(random_state=0),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
cm,"sklearn.metrics.confusion_matrix(y_test,y_pred)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,"sklearn.neighbors.KNeighborsClassifier(n_neighbors=5,metric='minkowski',p=2)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
knn,sklearn.neighbors.KNeighborsClassifier(n_neighbors=k),CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,"sklearn.neighbors.KNeighborsClassifier(n_neighbors=3,metric='minkowski',p=2)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,"sklearn.svm.SVC(kernel='rbf',random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
classifier,"sklearn.svm.SVC(kernel='rbf',random_state=0)",CLUSTER_4,CLUSTER_2,CLUSTER_3,CLUSTER_0,CLUSTER_0
my_linspace,"numpy.linspace(5,15,9,retstep=True)",CLUSTER_10,CLUSTER_6,CLUSTER_0,CLUSTER_0,CLUSTER_1
sentance_embedding,"numpy.zeros(shape=(MAX_SENTANCE_DIM,WORD_EMBEDDING_DIM)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
mask,numpy.zeros(MAX_SENTANCE_DIM),CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
sentance_embedding[i],numpy.zeros(WORD_EMBEDDING_DIM),CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
paragraph_embedding,"numpy.zeros(shape=(MAX_PARAGRAPH_DIM,MAX_SENTANCE_DIM,WORD_EMBEDDING_DIM)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
paragraph_mask,"numpy.zeros(shape=(MAX_PARAGRAPH_DIM,MAX_SENTANCE_DIM)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""i'm"",""iam"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""he's"",""heis"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""she's"",""sheis"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""it's"",""itis"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""that's"",""thatis"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""what's"",""thatis"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""where's"",""whereis"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""how's"",""howis"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
text,"re.sub(r""\'ll"",""will"",text)",CLUSTER_23,CLUSTER_0,CLUSTER_8,CLUSTER_12,CLUSTER_1
